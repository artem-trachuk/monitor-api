{"version":3,"sources":["images/Messenger.png","images/Telegram.png","now.png","warehouseSolid.svg","helpers/serverURL.js","axiosInstance.js","actions/issuesActions.js","actions/navigationActions.js","templates/LoadingTemplate.js","organisms/HomeIssue.js","organisms/MapWrapper.js","templates/HomeTemplate.js","templates/NoDataTemplate.js","templates/ErrorTemplate.js","pages/Home.js","helpers/resourceNames.js","actions/dataActions.js","molecules/CompanyHub.js","organisms/NetworksCompany.js","templates/NetworksTemplate.js","pages/Networks.js","molecules/Contact.js","templates/ContactsTemplate.js","actions/contactsActions.js","pages/Contacts.js","molecules/DeleteDataByIdDialog.js","organisms/PhotoEditorOrganism.js","organisms/DocEditorOrganism.js","HOCs/Editor.js","helpers/editorReduxFormName.js","molecules/renderField.js","helpers/reduxFormValidators.js","molecules/FileInputField.js","organisms/CompanyEditForm.js","molecules/CompanyAddHeader.js","pages/CompanyAdder.js","HOCs/ItemLoader.js","molecules/CompanyEditHeader.js","pages/CompanyEditor.js","organisms/CompanyView.js","organisms/AddContact.js","molecules/CompanySettings.js","organisms/CompanyContacts.js","organisms/DocsOrganism.js","organisms/Photos.js","organisms/LogoPhotosHeaders.js","templates/CompanyViewTemplate.js","pages/CompanyViewer.js","organisms/HubEditForm.js","pages/HubAdder.js","pages/HubEditor.js","organisms/HubDevices.js","organisms/HubView.js","molecules/HubSettings.js","helpers/Load.js","molecules/CommentReplyForm.js","molecules/IssueUnlock.js","actions/userActions.js","molecules/IssueDelete.js","molecules/IssueEdit.js","organisms/Issues.js","templates/HubViewTemplate.js","pages/HubViewer.js","helpers/getDeviceIcon.js","organisms/DeviceEditForm.js","pages/DeviceAdder.js","pages/DeviceEditor.js","organisms/DeviceView.js","molecules/DeviceSettings.js","templates/DeviceViewTemplate.js","pages/DeviceViewer.js","actions/permissionsActions.js","organisms/PermissionsSearchUser.js","organisms/PermissionOrganism.js","templates/PermissionsTemplate.js","pages/Permissions.js","templates/UserTemplate.js","pages/User.js","organisms/AboutUsProfile.js","templates/AboutUsTemplate.js","pages/AboutUs.js","organisms/IpTableTemplate.js","pages/IpTable.js","organisms/ContactOrganism.js","organisms/QrOrganism.js","molecules/ContactSettings.js","templates/ContactTemplate.js","pages/ContactPage.js","pages/Routes.js","organisms/TopNavigation.js","molecules/LanguageDropdown.js","molecules/DevelopedBy.js","organisms/BottomNavigation.js","molecules/GuestPhotosColumn.js","organisms/GuestPhotos.js","templates/GuestTemplate.js","pages/Guest.js","helpers/UnprotectedRoutes.js","organisms/GuestTopBar.js","organisms/GuestFooter.js","App.js","serviceWorker.js","reduxStore.js","reducers/userReducer.js","reducers/dataReducer.js","reducers/issuesReducer.js","reducers/navigationReducer.js","reducers/contactsReducer.js","reducers/permissionsReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","serverURL","axiosHttpClient","axios","create","baseURL","REQUEST_ISSUES","SET_ISSUES_ERROR","RECEIVE_ISSUES","requestIssues","resource","type","payload","setIssuesError","error","receiveIssues","data","byWhat","getIssues","id","dispatch","getState","firebase","auth","currentUser","getIdToken","then","idToken","get","headers","Authorization","result","SET_NAVIGATED_LINK","setNavigatedLink","link","LoadingTemplate","props","react_default","a","createElement","className","Loader","active","inline","size","HomeIssue","issue","Fragment","Icon","name","Link","to","company","_id","hub","Comment","Avatar","src","user","picture","Content","Author","as","Text","message","Group","replies","map","reply","key","MapWrapper","compose","withProps","googleMapURL","userR","language","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","warehouse","scaledSize","width","input","_props$input","value","onChange","lib","mapTypeId","onClick","e","lat","latLng","lng","defaultZoom","defaultCenter","marker","position","markers","LatLng","icon","connect","state","userReducer","HomeTemplate","Header","index_es","description","values","displayName","issues","organisms_HomeIssue","organisms_MapWrapper","filter","i","NoDataTemplate","color","children","ErrorTemplate","Home","this","isFetching","length","templates_ErrorTemplate","templates_LoadingTemplate","templates_NoDataTemplate","templates_HomeTemplate","Component","issuesReducer","isIssuesFetching","issuesError","companyResource","deviceResource","RECEIVE_ITEMS","RECEIVE_ITEM","REQUEST_API","DELETE_ITEM","getDataByAPI","item","receiveItem","items","receiveItems","deleteDataByAPI","resourceName","query","itemId","delete","deleteItem","CompanyHub","marginBottom","Card","raised","Popup","trigger","Label","ribbon","one","other","count","content","Description","List","bulleted","horizontal","devices","Item","d","deviceType","equipment","NetworksCompany","logo","Image","path","hubs","molecules_CompanyHub","Button","Divider","NetworksTemplate","companies","organisms_NetworksCompany","Networks","dataReducer","templates_NetworksTemplate","loadingReducer","Contact","showCompany","contact","contactNote","note","QRCodeValue","phone","Grid","verticalAlign","Column","floated","textAlign","Modal","qrcode_react_lib_default","Subheader","href","ContactsTemplate","itemsPerRow","contacts","molecules_Contact","REQUEST_CONTACTS","RECEIVE_CONTACTS","SET_CONTACTS_ERROR","RECEIVE_CONTACT","REMOVE_CONTACT","requestContacts","fetchContacts","setContactsError","fetchContact","deleteContact","removeContact","Contacts","allContacts","templates_ContactsTemplate","contactsReducer","DeleteDataByIdDialog","context","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","setState","close","deleteData","bind","assertThisInitialized","_this2","onOpen","onClose","Dropdown","basic","header","body","Actions","inverted","PhotoEditorOrganism","callback","queryId","label","corner","fluid","DocEditorOrganism","originalname","Editor","_this$props","pristine","submitting","handleSubmit","undefined","currentLink","Redirect","Form","onSubmit","patchData","postData","photos","photo","organisms_PhotoEditorOrganism","initialValues","documents","doc","organisms_DocEditorOrganism","Field","component","labelPosition","positive","disabled","navigationReducer","formData","FormData","append","JSON","stringify","assign","objectSpread","post","content-type","postDataByAPI","patch","patchDataByAPI","addMarker","change","reduxForm","form","renderField","_ref","iconPosition","_ref$meta","meta","touched","warning","Input","placeholder","pointing","requiredValidator","FileInputField","target","files","text","htmlFor","hidden","multiple","accept","CompanyEditForm","validate","rows","inputField","CompanyAddHeader","CompanyAdder","HOCs_Editor","molecules_CompanyAddHeader","organisms_CompanyEditForm","getItemLoader","WrappedComponent","ItemLoader","_Component","apply","arguments","inherits","createClass","match","params","find","CompanyEditHeader","molecules_CompanyEditHeader","CompanyView","address","email","AddContact","submitForm","patchContact","addContact","injectIntl","CompanySettings","deleteCompany","Menu","organisms_AddContact","update","molecules_DeleteDataByIdDialog","isOwner","CompanyContacts","DocsOrganism","Photos","closeIcon","LogoPhotosHeaders","organisms_Photos","CompanyViewTemplate","CRUD","organisms_LogoPhotosHeaders","molecules_CompanySettings","organisms_CompanyView","organisms_DocsOrganism","organisms_CompanyContacts","templates_CompanyViewTemplate","HubEditForm","HubAdder","companyId","organisms_HubEditForm","HubDevices","getListItem","cameras","c","recorders","r","netdevs","n","HubView","organisms_HubDevices","HubSettings","deleteHub","Load","CommentReplyForm","show","checked","handleIssueForm","intl","Action","TextArea","sendIssue","formatMessage","primary","Checkbox","IssueUnlock","unlock","UPDATE_USER","SET_ERROR","SET_IS_LOGGED","SET_DEFAULT_CENTER","SET_USER_ID","SET_USER_COMPANIES","setError","changeLanguage","setIsLogged","isLogged","setDefaultCenter","logout","signOut","catch","getUserId","toString","IssueDelete","modalOpen","handleOpen","handleClose","replyId","IssueEdit","handleChange","event","display","Issues","handleCheckbox","collapsed","unlockIssue","deleteIssue","patchIssue","issueId","view","helpers_Load","comments","comment","Metadata","date","edited","userId","molecules_IssueEdit","molecules_IssueDelete","molecules_IssueUnlock","molecules_CommentReplyForm","threaded","_ref2","console","log","HubViewTemplate","molecules_HubSettings","organisms_HubView","organisms_Issues","templates_HubViewTemplate","getDeviceIcon","selector","formValueSelector","iconName","DeviceAdder","hubId","Number","organisms_DeviceEditForm","device","DeviceView","ptz","ip","react_copy_to_clipboard_lib","serial","DeviceSettings","deleteDevice","DeviceViewTemplate","molecules_DeviceSettings","organisms_DeviceView","templates_DeviceViewTemplate","REQUEST_USERS","RECEIVE_USERS","RECEIVE_PERMISSIONS","getUser","ok","postPermissions","read","getPermissions","permissions","PermissionsSearchUser","handleResultSelect","defineProperty","users","title","image","Search","onSearchChange","_ref3","results","onResultSelect","permissionsReducer","permission","postPermission","PermissionsTemplate","companyName","organisms_PermissionOrganism","organisms_PermissionsSearchUser","Permissions","templates_PermissionsTemplate","UserTemplate","stackable","Row","photoURL","columns","divided","centered","fontSize","User","reducer","templates_UserTemplate","AboutUsProfile","imageSrc","circular","linkedin","telegram","Flag","flag","location","AboutUsTemplate","organisms_AboutUsProfile","AboutUs","templates_AboutUsTemplate","IpTableTemplate","column","direction","handleSort","clickedColumn","_this$state","reverse","_","sortBy","_this$state2","Table","sortable","celled","fixed","HeaderCell","sorted","Body","Cell","IpTable","pages_Networks","organisms_IpTableTemplate","ContactOrganism","QrOrganism","ContactSettings","ContactTemplate","molecules_ContactSettings","organisms_ContactOrganism","organisms_QrOrganism","ContactPage","templates_ContactTemplate","Routes","Route","exact","CompanyEditor","CompanyViewer","HubEditor","HubViewer","DeviceEditor","DeviceViewer","TopNavigation","handleItemClick","activeItem","marginTop","secondary","avatar","onLanguageChange","floating","DevelopedBy","rel","BottomNavigation","molecules_LanguageDropdown","Messenger","alt","Telegram","molecules_DevelopedBy","GuestPhotosColumn","preview","GuestPhotos","relaxed","molecules_GuestPhotosColumn","GuestTemplate","organisms_GuestPhotos","Guest","templates_GuestTemplate","UnprotectedRoutes","Switch","GuestTopBar","GuestFooter","Now","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","addLocaleData","concat","toConsumableArray","en","uk","ru","messages","messages_uk","en-US","messages_en","en-GB","messages_ru","App","isSignedIn","hasError","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","updateUser","login","getDefaultCenterFromUserAgent","Dimmer","organisms_GuestTopBar","StyledFirebaseAuth_default","firebaseAuth","flexGrow","helpers_UnprotectedRoutes","organisms_GuestFooter","isLoggedIn","organisms_TopNavigation","pages_Routes","organisms_BottomNavigation","textComponent","React","locale","BrowserRouter","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","Boolean","window","hostname","store","createStore","combineReducers","localStorage","getItem","action","Storage","setItem","index","findIndex","push","formReducer","_objectSpread2","contactsCopy","contactIndex","applyMiddleware","thunkMiddleware","logger","ReactDOM","render","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c752b85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Messenger.11b1e8bd.png\";","module.exports = __webpack_public_path__ + \"static/media/Telegram.1330ba39.png\";","module.exports = __webpack_public_path__ + \"static/media/now.273f0bda.png\";","module.exports = __webpack_public_path__ + \"static/media/warehouseSolid.6a497d1c.svg\";","export const serverURL = \"https://monitor.ps.od.ua/\";\r\n","import axios from \"axios\";\r\nimport { serverURL } from \"./helpers/serverURL\";\r\nexport const axiosHttpClient = axios.create({\r\n  baseURL: serverURL + \"api/\"\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const REQUEST_ISSUES = \"REQUEST_ISSUES\";\r\nexport const SET_ISSUES_ERROR = \"SET_ISSUES_ERROR\";\r\nexport const RECEIVE_ISSUES = \"RECEIVE_ISSUES\";\r\nexport const UNLOCK_ISSUE = \"UNLOCK_ISSUE\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestIssues(resource) {\r\n  return {\r\n    type: REQUEST_ISSUES,\r\n    payload: resource\r\n  };\r\n}\r\n\r\nexport function setIssuesError(error) {\r\n  return {\r\n    type: SET_ISSUES_ERROR,\r\n    payload: error\r\n  };\r\n}\r\n\r\nexport function receiveIssues(data, byWhat) {\r\n  return {\r\n    type: RECEIVE_ISSUES,\r\n    payload: {\r\n      data: data,\r\n      resource: byWhat\r\n    }\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\n/**\r\n * Send an issue to the API\r\n * @param issue JSON representation of the issue {hub: hubId, issue: string value}\r\n */\r\nexport function sendIssue(issue, issueId = null) {\r\n  return function(dispatch, getState) {\r\n    dispatch(requestIssues(true));\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .post(issueId ? \"issues/\" + issueId : \"issues/\", issue, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(requestIssues(false));\r\n                dispatch(getIssues(\"hub\", result.data.result.hub));\r\n              },\r\n              error => dispatch(setIssuesError(error))\r\n            );\r\n        },\r\n        error => dispatch(setIssuesError(error))\r\n      );\r\n  };\r\n}\r\n\r\nexport function patchIssue(issue, issueId, unlock = false, replyId = false) {\r\n  console.log(replyId);\r\n  return function(dispatch) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken => {\r\n        if (unlock) {\r\n          axiosHttpClient\r\n            .patch(\"issues/\" + issueId + \"/?open=true\", null, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(result => {\r\n              dispatch(getIssues(\"hub\", result.data.result.hub));\r\n            });\r\n        } else {\r\n          axiosHttpClient\r\n            .patch(\r\n              replyId\r\n                ? \"issues/\" + issueId + \"/?replyId=\" + replyId\r\n                : \"issues/\" + issueId,\r\n              issue,\r\n              {\r\n                headers: {\r\n                  Authorization: \"Bearer \" + idToken\r\n                }\r\n              }\r\n            )\r\n            .then(result => {\r\n              dispatch(getIssues(\"hub\", result.data.result.hub));\r\n            });\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteIssue(issueId, replyId = false) {\r\n  return function(dispatch) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken => {\r\n        axiosHttpClient\r\n          .delete(\r\n            replyId\r\n              ? \"issues/\" + issueId + \"/?replyId=\" + replyId\r\n              : \"issues/\" + issueId,\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            }\r\n          )\r\n          .then(result => {\r\n            dispatch(getIssues(\"hub\", result.data.result.hub));\r\n          });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getIssues(byWhat, id) {\r\n  return function(dispatch, getState) {\r\n    dispatch(requestIssues(byWhat));\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(\"issues?\" + byWhat + \"=\" + id, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                if (id) {\r\n                  dispatch(receiveIssues(result.data.result, id));\r\n                } else {\r\n                  dispatch(receiveIssues(result.data.result, byWhat));\r\n                }\r\n              },\r\n              error => {\r\n                dispatch(setIssuesError({ error: error, resource: byWhat }));\r\n              }\r\n            );\r\n        },\r\n        error => dispatch(setIssuesError({ error: error, resource: byWhat }))\r\n      );\r\n  };\r\n}\r\n","/*\r\n * Actions\r\n */\r\n\r\nexport const SET_NAVIGATED_LINK = \"SET_NAVIGATED_LINK\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function setNavigatedLink(link) {\r\n  return {\r\n    type: SET_NAVIGATED_LINK,\r\n    payload: link\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nconst LoadingTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"column\">\r\n          <Loader active inline=\"centered\" size=\"medium\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingTemplate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Comment, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomeIssue = props => {\r\n  const issue = props.issue;\r\n  return (\r\n    <>\r\n      <div>\r\n        <Icon name={\"industry\"} />\r\n        <Link to={\"/r/companies/view/\" + issue.company._id}>\r\n          {issue.company.name}\r\n        </Link>{\" \"}\r\n        <Icon name=\"warehouse\" />\r\n        <Link to={\"/r/hubs/view/\" + issue.hub._id}>{issue.hub.name}</Link>\r\n      </div>\r\n      <Comment>\r\n        <Comment.Avatar src={issue.user.picture} />\r\n        <Comment.Content>\r\n          <Comment.Author as=\"a\">{issue.user.name}</Comment.Author>\r\n          <Comment.Text>{issue.message}</Comment.Text>\r\n        </Comment.Content>\r\n        <Comment.Group>\r\n          {issue.replies.map(reply => {\r\n            return (\r\n              <Comment key={reply._id}>\r\n                <Comment.Avatar src={reply.user.picture} />\r\n                <Comment.Content>\r\n                  <Comment.Author as=\"a\">{reply.user.name}</Comment.Author>\r\n                  <Comment.Text>{reply.reply}</Comment.Text>\r\n                </Comment.Content>\r\n              </Comment>\r\n            );\r\n          })}\r\n        </Comment.Group>\r\n      </Comment>\r\n    </>\r\n  );\r\n};\r\n\r\nHomeIssue.propTypes = {\r\n  issue: PropTypes.object.isRequired\r\n};\r\n\r\nexport default HomeIssue;\r\n","import React from \"react\";\r\nimport { compose, withProps } from \"recompose\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow\r\n} from \"react-google-maps\";\r\nimport { connect } from \"react-redux\";\r\nimport warehouseSolid from \"../warehouseSolid.svg\";\r\n\r\n/**\r\n * Show Google Maps\r\n * Use MapWrapper only with redux-form Field component\r\n * For example: <Field name=\"LatLng\" component={MapWrapper} />\r\n * Don't forget to change Google API key in googleMapURL property\r\n * Height property for containerElement is required, value is up to you\r\n */\r\n// TODO change Google API key in googleMapURL property, current key is bounded to domain name\r\n// TODO map localization\r\nconst MapWrapper = compose(\r\n  withProps(props => {\r\n    return {\r\n      googleMapURL:\r\n        \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3XXK2YwPFB7amCLqkSg4II77EFu0G9R8&language=\" +\r\n        props.userR.language,\r\n      loadingElement: <div style={{ height: `100%` }} />,\r\n      containerElement: <div style={{ height: `400px` }} />,\r\n      mapElement: <div style={{ height: `100%` }} />\r\n    };\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => {\r\n  const warehouse = {\r\n    scaledSize: {\r\n      height: 20,\r\n      width: 32\r\n    },\r\n    // url: warehouseSolid\r\n  };\r\n  if (props.input) {\r\n    // add/edit component\r\n    const {\r\n      input: { value, onChange }\r\n    } = props; // data from redux-form, value has format { lat: ..., lng: ... }\r\n    return (\r\n      // update marker position in redux-form state by firing onChange\r\n      <GoogleMap mapTypeId={\"satellite\"}\r\n        onClick={e => onChange({ lat: e.latLng.lat(), lng: e.latLng.lng() })}\r\n        defaultZoom={13}\r\n        defaultCenter={value || props.defaultCenter}\r\n      >\r\n        {(props.marker || value) && <Marker position={props.marker || value} />}\r\n        {props.markers &&\r\n          props.markers.map(marker => <Marker position={marker} />)}\r\n      </GoogleMap>\r\n    );\r\n  } else {\r\n    // view component\r\n    return (\r\n      <GoogleMap mapTypeId={\"satellite\"}\r\n        defaultZoom={13}\r\n        defaultCenter={props.marker || props.defaultCenter}\r\n      >\r\n        <>{props.marker && <Marker position={props.marker} />}\r\n        {props.markers &&\r\n          props.markers.map(marker => (\r\n            <Marker key={marker._id} position={marker.LatLng} icon={warehouse}>\r\n              <InfoWindow><div>{marker.issue}</div></InfoWindow>\r\n            </Marker>\r\n          ))}</>\r\n      </GoogleMap>\r\n    );\r\n  }\r\n});\r\n\r\nconst mapToStateProps = state => {\r\n  return { userR: state.userReducer };\r\n};\r\n\r\nexport default connect(\r\n  mapToStateProps,\r\n  {}\r\n)(MapWrapper);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Header, Comment } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport HomeIssue from \"../organisms/HomeIssue\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\n\r\nconst HomeTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"one column row center aligned\">\r\n          <div className=\"column\">\r\n            <Header size=\"medium\">\r\n              <FormattedMessage\r\n                id=\"string.greeting\"\r\n                description=\"Greeting to welcome the user to the app\"\r\n                values={{\r\n                  name: <b>{props.displayName}</b>\r\n                }}\r\n              />\r\n            </Header>\r\n          </div>\r\n        </div>\r\n        <div className={\"stackable two column row\"}>\r\n          <div className=\"column\">\r\n            <Comment.Group>\r\n              {props.issues.map(issue => (\r\n                <HomeIssue key={issue._id} issue={issue} />\r\n              ))}\r\n            </Comment.Group>\r\n          </div>\r\n          <div className=\"column\">\r\n            <MapWrapper\r\n              defaultCenter={props.defaultCenter}\r\n              markers={props.issues\r\n                .filter(i => i.hub.LatLng)\r\n                .map(issue => {\r\n                  return {\r\n                    _id: issue._id,\r\n                    issue: issue.message,\r\n                    LatLng: issue.hub.LatLng\r\n                  };\r\n                })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHomeTemplate.propTypes = {\r\n  displayName: PropTypes.string.isRequired,\r\n  defaultCenter: PropTypes.object.isRequired,\r\n  issues: PropTypes.array.isRequired\r\n};\r\n\r\nexport default HomeTemplate;\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NoDataTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui centered column grid\">\r\n        <div className=\"sixteen wide column center aligned\">\r\n          <Header icon>\r\n            <Icon name=\"cloud\" color={\"blue\"} />\r\n            <FormattedMessage id=\"string.noData\" />\r\n          </Header>\r\n        </div>\r\n        {props.children && (\r\n          <div className=\"row\">\r\n            <div className=\"column center aligned\">{props.children}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNoDataTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default NoDataTemplate;\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst ErrorTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui centered three column grid\">\r\n        <div className=\"column center aligned\">\r\n          <Header icon>\r\n            <Icon name=\"cloud\" color={\"red\"} />\r\n            <FormattedMessage id=\"string.error\" />\r\n            {props.error}\r\n          </Header>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { getIssues } from \"../actions/issuesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport HomeTemplate from \"../templates/HomeTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\nimport ErrorTemplate from \"../templates/ErrorTemplate\";\r\n\r\nconst issuesResource = \"all\";\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    this.props.setNavigatedLink(\"home\");\r\n    // get issues from the API\r\n    this.props.getIssues(issuesResource);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove page name to remove highlight in the navigation bar\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const isFetching = this.props.isFetching;\r\n    const issues = this.props.issues;\r\n    const length = issues.length;\r\n    const displayName = this.props.userReducer.user.displayName;\r\n    const defaultCenter = this.props.userReducer.defaultCenter;\r\n    const error = this.props.error;\r\n    return (\r\n      <>\r\n        {error && <ErrorTemplate />}\r\n        {isFetching && length === 0 && <LoadingTemplate />}\r\n        {!isFetching && length === 0 && <NoDataTemplate />}\r\n        {length > 0 && (\r\n          <HomeTemplate\r\n            displayName={displayName}\r\n            issues={issues}\r\n            defaultCenter={defaultCenter}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const issues = state.issuesReducer[issuesResource] || [];\r\n  const isFetching =\r\n    state.issuesReducer.isIssuesFetching[issuesResource] || false;\r\n  const error = state.issuesReducer.issuesError[issuesResource] || null;\r\n  return {\r\n    error,\r\n    issues,\r\n    isFetching,\r\n    userReducer: state.userReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getIssues: (byWhat, id) => {\r\n      dispatch(getIssues(byWhat, id));\r\n    },\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","export const companyResource = \"companies\";\r\nexport const hubResource = \"hubs\";\r\nexport const deviceResource = \"devices\";\r\nexport const networkResource = \"networks\";\r\nexport const ipResource = \"ip\";\r\nexport const contactsResource = \"contacts\";","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\nimport { setNavigatedLink } from \"./navigationActions\";\r\n\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const RECEIVE_ITEMS = \"RECEIVE_ITEMS\";\r\nexport const RECEIVE_ITEM = \"RECEIVE_ITEM\";\r\nexport const REQUEST_API = \"REQUEST_API\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestAPI() {\r\n  return {\r\n    type: REQUEST_API\r\n  };\r\n}\r\n\r\nexport function receiveItem(item, resource) {\r\n  return {\r\n    type: RECEIVE_ITEM,\r\n    payload: item,\r\n    resource: resource\r\n  };\r\n}\r\n\r\nexport function receiveItems(items, resource) {\r\n  return {\r\n    type: RECEIVE_ITEMS,\r\n    payload: items,\r\n    resource: resource\r\n  };\r\n}\r\n\r\nexport function deleteItem(id, resource) {\r\n  return {\r\n    type: DELETE_ITEM,\r\n    id: id,\r\n    resource: resource\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\nexport function getDataByAPI(resource, id) {\r\n  return function(dispatch, getState) {\r\n    dispatch(requestAPI());\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(id ? resource + \"/\" + id : resource, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                if (id) {\r\n                  dispatch(receiveItem(result.data.result, resource));\r\n                } else {\r\n                  dispatch(receiveItems(result.data.result, resource));\r\n                }\r\n              },\r\n              error => {}\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function postDataByAPI(resource, data) {\r\n  return function(dispatch, getState) {\r\n    const formData = new FormData();\r\n    if (data.logo) {\r\n      formData.append(\"logo\", data.logo.item(0));\r\n    }\r\n    if (data.photos) {\r\n      for (let i = 0; i < data.photos.length; i++) {\r\n        formData.append(\"photos\", data.photos.item(i));\r\n      }\r\n    }\r\n    if (data.documents) {\r\n      for (let i = 0; i < data.documents.length; i++) {\r\n        formData.append(\"documents\", data.documents.item(i));\r\n      }\r\n    }\r\n    formData.append(\r\n      \"values\",\r\n      JSON.stringify(\r\n        Object.assign(\r\n          {},\r\n          { ...data },\r\n          { photos: undefined, documents: undefined }\r\n        )\r\n      )\r\n    );\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .post(resource, formData, {\r\n              headers: {\r\n                \"content-type\": \"multipart/form-data\",\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(\r\n                  setNavigatedLink({\r\n                    resource: resource,\r\n                    _id: result.data.result._id\r\n                  })\r\n                );\r\n              },\r\n              error => {}\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\n/**\r\n * Patch resource by API call\r\n * @param resourceName Name of API/resource, for example \"companies/\"\r\n * @param data\r\n */\r\nexport function patchDataByAPI(resourceName, data) {\r\n  return function(dispatch, getState) {\r\n    const formData = new FormData();\r\n    if (data.logo) {\r\n      formData.append(\"logo\", data.logo.item(0));\r\n    }\r\n    if (data.photos) {\r\n      for (let i = 0; i < data.photos.length; i++) {\r\n        formData.append(\"photos\", data.photos.item(i));\r\n      }\r\n    }\r\n    if (data.documents) {\r\n      for (let i = 0; i < data.documents.length; i++) {\r\n        formData.append(\"documents\", data.documents.item(i));\r\n      }\r\n    }\r\n    formData.append(\r\n      \"values\",\r\n      JSON.stringify(\r\n        Object.assign(\r\n          {},\r\n          { ...data },\r\n          { photos: undefined, documents: undefined }\r\n        )\r\n      )\r\n    );\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .patch(resourceName + \"/\" + data._id, formData, {\r\n              headers: {\r\n                \"content-type\": \"multipart/form-data\",\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(\r\n                  setNavigatedLink({ resource: resourceName, _id: data._id })\r\n                );\r\n              },\r\n              error => {}\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function deleteDataByAPI(resourceName, id, query, itemId) {\r\n  return function(dispatch) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken => {\r\n        if (query) {\r\n          return axiosHttpClient\r\n              .delete(resourceName + \"/\" + id + \"?\" + query + \"=\" + itemId, {\r\n                headers: {\r\n                  Authorization: \"Bearer \" + idToken\r\n                }\r\n              })\r\n              .then(\r\n                  result => {\r\n                    dispatch(getDataByAPI(resourceName, id));\r\n                  },\r\n                  error => {}\r\n              );\r\n        }\r\n        axiosHttpClient\r\n          .delete(resourceName + \"/\" + id, {\r\n            headers: {\r\n              Authorization: \"Bearer \" + idToken\r\n            }\r\n          })\r\n          .then(\r\n            result => {\r\n              dispatch(deleteItem(id, resourceName));\r\n            },\r\n            error => {}\r\n          );\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Icon, Label, List, Popup } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, FormattedPlural } from \"react-intl\";\r\n\r\nconst CompanyHub = props => {\r\n  const hub = props.hub;\r\n  return (\r\n    <div className=\"column\" style={{ marginBottom: \"4vh\" }}>\r\n      <Card raised>\r\n        <Card.Content>\r\n          {hub.issues.length > 0 ? (\r\n            <Popup\r\n              trigger={\r\n                <Label color=\"red\" ribbon=\"right\">\r\n                  <FormattedPlural\r\n                    value={hub.issues.length}\r\n                    one={<FormattedMessage id=\"interface.hasIssue\" />}\r\n                    other={\r\n                      <FormattedMessage\r\n                        id=\"interface.hasIssues\"\r\n                        values={{ count: hub.issues.length }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Label>\r\n              }\r\n              content={hub.issues.map(issue => (\r\n                <li key={issue._id}>{issue.message}</li>\r\n              ))}\r\n            />\r\n          ) : (\r\n            <Label ribbon=\"right\">\r\n              <FormattedMessage id=\"interface.noIssue\" />\r\n            </Label>\r\n          )}\r\n          <Card.Header>\r\n            <Icon size={\"large\"} name=\"warehouse\" />{\" \"}\r\n            <Link to={\"/r/hubs/view/\" + hub._id}>{hub.name}</Link>\r\n          </Card.Header>\r\n          <Card.Description>\r\n            <List bulleted horizontal link>\r\n              {hub.devices && (\r\n                <>\r\n                  <List.Item>\r\n                    <Icon name=\"record\" />{\" \"}\r\n                    {hub.devices\r\n                      ? hub.devices.filter(d => d.deviceType === \"camera\")\r\n                          .length\r\n                      : 0}\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <Icon name=\"microchip\" />{\" \"}\r\n                    {hub.devices.filter(d => d.deviceType === \"netdev\").length}\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <Icon name=\"hdd\" />{\" \"}\r\n                    {\r\n                      hub.devices.filter(d => d.deviceType === \"recorder\")\r\n                        .length\r\n                    }\r\n                  </List.Item>\r\n                </>\r\n              )}\r\n              {hub.equipment && (\r\n                <List.Item>\r\n                  <Icon name=\"box\" /> {hub.equipment.length}\r\n                </List.Item>\r\n              )}\r\n            </List>\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nCompanyHub.propTypes = {\r\n  hub: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CompanyHub;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Divider, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport CompanyHub from \"../molecules/CompanyHub\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst NetworksCompany = props => {\r\n  const company = props.company;\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"eight wide column\">\r\n          <Link to={\"/r/companies/view/\" + company._id}>\r\n            {company.logo ? (\r\n              <Image className={\"viewerLogo\"} src={serverURL + company.logo.path} />\r\n            ) : (\r\n              <Header as=\"h1\">\r\n                <Icon name=\"industry\" />{\" \"}\r\n                <Header.Content>{company.name}</Header.Content>\r\n              </Header>\r\n            )}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"four column row stackable\">\r\n        {company.hubs && company.hubs.length > 0 ? (\r\n          company.hubs.map(hub => <CompanyHub key={hub._id} hub={hub} />)\r\n        ) : (\r\n          <div className=\"column\">\r\n            <FormattedMessage id=\"string.companyHasNoHubs\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"column\">\r\n          <Button\r\n            as={Link}\r\n            to={\"/r/hubs/add/\" + company._id + \"/\" + company.name}\r\n          >\r\n            <Icon name=\"plus\" />{\" \"}\r\n            <FormattedMessage\r\n              id=\"interface.addHubToCompany\"\r\n              values={{ company: company.name }}\r\n            />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nNetworksCompany.propTypes = {\r\n  company: PropTypes.object.isRequired\r\n};\r\n\r\nexport default NetworksCompany;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NetworksCompany from \"../organisms/NetworksCompany\";\r\nimport { Button, Divider, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst NetworksTemplate = props => {\r\n  const companies = props.companies;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"column\">\r\n            <Button as={Link} to={\"/r/companies/add\"}>\r\n              <Icon name=\"industry\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addCompany\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        {companies.map(company => (\r\n          <NetworksCompany key={company._id} company={company} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNetworksTemplate.propTypes = {\r\n  companies: PropTypes.array.isRequired\r\n};\r\n\r\nexport default NetworksTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDataByAPI } from \"../actions/dataActions\";\r\nimport NetworksTemplate from \"../templates/NetworksTemplate\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\nimport ErrorTemplate from \"../templates/ErrorTemplate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass Networks extends Component {\r\n  componentDidMount() {\r\n    this.props.setNavigatedLink(\"networks\");\r\n    this.props.getDataByAPI(companyResource);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n\r\n  render() {\r\n    const isFetching = this.props.dataReducer.isFetching;\r\n    const companies = this.props.companies;\r\n    const length = companies.length;\r\n    const error = this.props.error;\r\n    return (\r\n      <>\r\n        {error && <ErrorTemplate />}\r\n        {isFetching && length === 0 && <LoadingTemplate />}\r\n        {!isFetching && length === 0 && (\r\n          <NoDataTemplate>\r\n            <Button as={Link} to={\"/r/companies/add\"}>\r\n              <Icon name=\"industry\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addCompany\" />\r\n            </Button>\r\n          </NoDataTemplate>\r\n        )}\r\n        {length > 0 && (\r\n          <>\r\n            <NetworksTemplate companies={companies} />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const companies = state.dataReducer[companyResource] || [];\r\n  const error = state.issuesReducer.issuesError[companyResource] || null;\r\n  return {\r\n    loadingReducer: state.loadingReducer,\r\n    dataReducer: state.dataReducer,\r\n    companies,\r\n    error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    },\r\n    getDataByAPI: (resource, id) => {\r\n      dispatch(getDataByAPI(resource, id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Networks);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Divider, Grid, Header, Icon, Modal } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Contact = props => {\r\n  const { showCompany } = props;\r\n  const contact = props.contact;\r\n  const contactNote = contact.note ? \"NOTE:\" + contact.note + \"\\n\" : \"\";\r\n  const QRCodeValue =\r\n    \"BEGIN:VCARD\\n\" +\r\n    \"VERSION:3.0\\n\" +\r\n    \"ORG:\" +\r\n    contact.company.name +\r\n    \"\\n\" +\r\n    \"FN:\" +\r\n    contact.name +\r\n    \"\\n\" +\r\n    \"TEL;TYPE=WORK,VOICE:\" +\r\n    contact.phone +\r\n    \"\\n\" +\r\n    contactNote +\r\n    \"END:VCARD\";\r\n  return (\r\n    <Card>\r\n      <Card.Content>\r\n        <Card.Header>\r\n          <Grid verticalAlign=\"middle\">\r\n            <Grid.Column floated=\"left\" width={12}>\r\n              <Link to={\"/r/contacts/\" + contact._id}>{contact.name}</Link>\r\n            </Grid.Column>\r\n            <Grid.Column textAlign={\"right\"} floated=\"right\" width={4}>\r\n              <Modal size={\"mini\"} trigger={<Icon name=\"qrcode\" size=\"big\" />}>\r\n                <Modal.Content style={{ textAlign: \"center\" }}>\r\n                  <QRCode value={QRCodeValue} size={256} />\r\n                </Modal.Content>\r\n              </Modal>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Card.Header>\r\n        <Divider />\r\n        <Card.Description>\r\n          {showCompany && (\r\n            <Header as=\"h4\">\r\n              <Icon name=\"industry\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.company\" />\r\n                </Header.Subheader>\r\n                {contact.company.name}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          <Header as=\"h4\">\r\n            <Icon name=\"phone\" />\r\n            <Header.Content>\r\n              <Header.Subheader>\r\n                <FormattedMessage id=\"interface.phone\" />\r\n              </Header.Subheader>\r\n              {<a href={\"tel:\" + contact.phone}>{contact.phone}</a>}\r\n            </Header.Content>\r\n          </Header>\r\n          {contact.note && (\r\n            <Header as=\"h4\">\r\n              <Icon name=\"sticky note\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.note\" />\r\n                </Header.Subheader>\r\n                {contact.note}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n        </Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Contact from \"../molecules/Contact\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nconst ContactsTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"sixteen wide column\">\r\n          <Card.Group className={\"stackable\"} itemsPerRow={4}>\r\n            {props.contacts.map(contact => {\r\n              return <Contact showCompany={true} key={contact._id} contact={contact} />;\r\n            })}\r\n          </Card.Group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsTemplate.propTypes = {\r\n  contacts: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ContactsTemplate;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport { getDataByAPI } from \"./dataActions\";\r\n\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const REQUEST_CONTACTS = \"REQUEST_CONTACTS\";\r\nexport const RECEIVE_CONTACTS = \"RECEIVE_CONTACTS\";\r\nexport const SET_CONTACTS_ERROR = \"SET_CONTACTS_ERROR\";\r\nexport const RECEIVE_CONTACT = \"RECEIVE_CONTACT\";\r\nexport const REMOVE_CONTACT = \"REMOVE_CONTACT\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestContacts() {\r\n  return {\r\n    type: REQUEST_CONTACTS\r\n  };\r\n}\r\n\r\nexport function receiveContacts(contacts) {\r\n  return {\r\n    type: RECEIVE_CONTACTS,\r\n    payload: contacts\r\n  };\r\n}\r\n\r\nexport function receiveContact(contact) {\r\n  return {\r\n    type: RECEIVE_CONTACT,\r\n    payload: contact\r\n  };\r\n}\r\n\r\nexport function setContactsError(error) {\r\n  return {\r\n    type: SET_CONTACTS_ERROR,\r\n    payload: error\r\n  };\r\n}\r\n\r\nexport function removeContact(id) {\r\n  return {\r\n    type: REMOVE_CONTACT,\r\n    payload: id\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\nexport function fetchContacts() {\r\n  return dispatch => {\r\n    dispatch(requestContacts());\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.get(\"contacts\", {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(\r\n        result => dispatch(receiveContacts(result.data.result)),\r\n        error => dispatch(setContactsError(error))\r\n      );\r\n  };\r\n}\r\n\r\nexport function fetchContact(id) {\r\n  return dispatch => {\r\n    dispatch(requestContacts());\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.get(\"contacts/\" + id, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(result => dispatch(receiveContact(result.data.result)));\r\n  };\r\n}\r\n\r\nexport function addContact(contact) {\r\n  return dispatch =>\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.post(\"contacts\", contact, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(result => dispatch(getDataByAPI(companyResource, contact.company)));\r\n}\r\n\r\nexport function patchContact(contact) {\r\n  const id = contact._id;\r\n  return dispatch =>\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.patch(\"contacts/\" + id, contact, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(result => dispatch(fetchContact(id)));\r\n}\r\n\r\nexport function deleteContact(id) {\r\n  return dispatch =>\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.delete(\"contacts/\" + id, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(result => {\r\n        dispatch(removeContact(id));\r\n      });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport ContactsTemplate from \"../templates/ContactsTemplate\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport { fetchContacts } from \"../actions/contactsActions\";\r\nimport ErrorTemplate from \"../templates/ErrorTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    // set page name to help top navigation bar to highlight current button\r\n    this.props.setNavigatedLink(\"contacts\");\r\n    this.props.fetchContacts();\r\n  }\r\n  componentWillUnmount() {\r\n    // remove page name to remove highlight in the navigation bar\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const contacts = this.props.allContacts.contacts;\r\n    const isFetching = this.props.allContacts.isFetching;\r\n    const error = this.props.allContacts.error;\r\n    return (\r\n      <>\r\n        {isFetching && contacts.length === 0 && <LoadingTemplate />}\r\n        {error && <ErrorTemplate />}\r\n        {!isFetching && contacts.length === 0 && <NoDataTemplate />}\r\n        {contacts.length > 0 && (\r\n          <>\r\n            <ContactsTemplate contacts={contacts} />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    allContacts: state.contactsReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchContacts: () => dispatch(fetchContacts()),\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Contacts);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteDataByAPI } from \"../actions/dataActions\";\r\nimport { deleteContact } from \"../actions/contactsActions\";\r\nimport { contactsResource } from \"../helpers/resourceNames\";\r\n\r\nclass DeleteDataByIdDialog extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      open: false\r\n    };\r\n    this.deleteData = this.deleteData.bind(this);\r\n  }\r\n  open = () => this.setState({ open: true });\r\n  close = () => this.setState({ open: false });\r\n  deleteData = () => {\r\n    this.props.deleteData(this.props.resourceName, this.props.id);\r\n  };\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.state.open}\r\n        onOpen={this.open}\r\n        onClose={this.close}\r\n        size={\"tiny\"}\r\n        trigger={\r\n          <Dropdown.Item>\r\n            <Icon name=\"trash\" /> <FormattedMessage id=\"interface.delete\" />\r\n          </Dropdown.Item>\r\n        }\r\n        basic\r\n      >\r\n        <Header icon=\"trash\" content={this.props.header} />\r\n        <Modal.Content>\r\n          <p>{this.props.body}</p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button basic color=\"green\" inverted onClick={() => this.close()}>\r\n            <Icon name=\"remove\" /> <FormattedMessage id={\"interface.no\"} />\r\n          </Button>\r\n          <Button\r\n            color=\"red\"\r\n            inverted\r\n            onClick={() => {\r\n              this.close();\r\n              if (this.props.resourceName === contactsResource) {\r\n                this.props.deleteContact(this.props.id);\r\n              } else {\r\n                this.deleteData();\r\n              }\r\n            }}\r\n          >\r\n            <Icon name=\"trash\" /> <FormattedMessage id={\"interface.yes\"} />\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nDeleteDataByIdDialog.propTypes = {\r\n  resourceName: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteData: (resourceName, id) => {\r\n      dispatch(deleteDataByAPI(resourceName, id));\r\n    },\r\n    deleteContact: id => dispatch(deleteContact(id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(DeleteDataByIdDialog);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport { Button, Header, Icon, Image, Label, Modal } from \"semantic-ui-react\";\r\nimport { deleteDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport DeleteDataByIdDialog from \"../molecules/DeleteDataByIdDialog\";\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\nclass PhotoEditorOrganism extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n  open = () => this.setState({ open: true });\r\n  close = () => this.setState({ open: false });\r\n  callback = () => {\r\n    this.props.deleteData(\r\n      this.props.resource,\r\n      this.props.id,\r\n      this.props.queryId\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Image\r\n          label={{\r\n            as: \"a\",\r\n            color: \"red\",\r\n            corner: \"right\",\r\n            icon: \"trash\",\r\n            onClick: () => this.open()\r\n          }}\r\n          fluid\r\n          src={serverURL + this.props.src}\r\n        />\r\n        <Modal\r\n          open={this.state.open}\r\n          onOpen={this.open}\r\n          onClose={this.close}\r\n          basic\r\n          size=\"small\"\r\n        >\r\n          <Header icon=\"trash\" content={<FormattedMessage id={\"string.deletePhoto\"} />} />\r\n          <Modal.Content>\r\n            <p>\r\n              <FormattedMessage id={\"string.deletePhotoMessage\"} />\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button basic color=\"green\" inverted onClick={() => this.close()}>\r\n              <Icon name=\"remove\" /> <FormattedMessage id={\"interface.no\"} />\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={() => {this.callback(); this.close();}}>\r\n              <Icon name=\"trash\" /> <FormattedMessage id={\"interface.yes\"} />\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPhotoEditorOrganism.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  resource: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  queryId: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteData: (resourceName, id, queryId) => {\r\n      dispatch(deleteDataByAPI(resourceName, id, \"photo\", queryId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PhotoEditorOrganism);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Header, Icon, Image, Modal } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { List } from \"semantic-ui-react/dist/commonjs/elements/List\";\r\n\r\nclass DocEditorOrganism extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n  open = () => this.setState({ open: true });\r\n  close = () => this.setState({ open: false });\r\n  callback = () => {\r\n    this.props.deleteData(\r\n      this.props.resource,\r\n      this.props.id,\r\n      this.props.queryId\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Icon name=\"file\" /> {this.props.originalname}{\" \"}\r\n        <Icon\r\n          name=\"trash\"\r\n          className={\"pointer_on_hover\"}\r\n          color={\"red\"}\r\n          onClick={() => this.open()}\r\n        />\r\n        <Modal\r\n          open={this.state.open}\r\n          onOpen={this.open}\r\n          onClose={this.close}\r\n          basic\r\n          size=\"small\"\r\n        >\r\n          <Header\r\n            icon=\"trash\"\r\n            content={<FormattedMessage id={\"string.deleteDoc\"} />}\r\n          />\r\n          <Modal.Content>\r\n            <p>\r\n              <FormattedMessage id={\"string.deleteDocMessage\"} />\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button basic color=\"green\" inverted onClick={() => this.close()}>\r\n              <Icon name=\"remove\" /> <FormattedMessage id={\"interface.no\"} />\r\n            </Button>\r\n            <Button\r\n              color=\"red\"\r\n              inverted\r\n              onClick={() => {\r\n                this.callback();\r\n                this.close();\r\n              }}\r\n            >\r\n              <Icon name=\"trash\" />{\" \"}\r\n              <FormattedMessage id={\"interface.yes\"} />\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDocEditorOrganism.propTypes = {\r\n  resource: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  queryId: PropTypes.string.isRequired,\r\n  originalname: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteData: (resourceName, id, queryId) => {\r\n      dispatch(deleteDataByAPI(resourceName, id, \"document\", queryId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(DocEditorOrganism);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field, reduxForm, change } from \"redux-form\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\nimport { patchDataByAPI, postDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { EditorReduxFormName } from \"../helpers/editorReduxFormName\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport PhotoEditorOrganism from \"../organisms/PhotoEditorOrganism\";\r\nimport DocEditorOrganism from \"../organisms/DocEditorOrganism\";\r\n\r\nclass Editor extends Component {\r\n  componentWillUnmount() {\r\n    // remove page name to remove highlight in the navigation bar\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const submitForm = values => {\r\n      if (values._id) {\r\n        return this.props.patchData(this.props.resource, values);\r\n      } else {\r\n        return this.props.postData(this.props.resource, values);\r\n      }\r\n    };\r\n    const { pristine, submitting, handleSubmit } = this.props;\r\n    if (\r\n      this.props.currentLink !== undefined &&\r\n      this.props.currentLink.resource !== undefined\r\n    ) {\r\n      return (\r\n        <Redirect\r\n          to={\r\n            \"/r/\" +\r\n            this.props.currentLink.resource +\r\n            \"/view/\" +\r\n            this.props.currentLink._id\r\n          }\r\n        />\r\n      );\r\n    }\r\n    // this.props.addMarker(this.props.initialValues.LatLng);\r\n    return (\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <div className=\"ui container\">\r\n          <div className=\"ui grid\">\r\n            {this.props.header}\r\n            <div className=\"row stackable\">\r\n              {this.props.photos &&\r\n                this.props.photos.length > 0 &&\r\n                this.props.photos.map(photo => (\r\n                  <div\r\n                    key={photo._id}\r\n                    className=\"three wide column middle aligned\"\r\n                  >\r\n                    <PhotoEditorOrganism\r\n                      src={photo.path}\r\n                      resource={this.props.resource}\r\n                      id={this.props.initialValues._id}\r\n                      queryId={photo._id}\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"row stackable\">\r\n              {this.props.documents &&\r\n                this.props.documents.length > 0 &&\r\n                this.props.documents.map(doc => (\r\n                  <div\r\n                    key={doc._id}\r\n                    className=\"sixteen wide column\"\r\n                  >\r\n                    <DocEditorOrganism\r\n                      resource={this.props.resource}\r\n                      id={this.props.initialValues._id}\r\n                      originalname={doc.originalname}\r\n                      queryId={doc._id}\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"row stackable\">\r\n              {this.props.children}\r\n              <div className=\"eight wide column\">\r\n                {/*Map Wrapper*/}\r\n                <Field\r\n                  name=\"LatLng\"\r\n                  component={MapWrapper}\r\n                  defaultCenter={\r\n                    this.props.initialValues.LatLng\r\n                      ? this.props.initialValues.LatLng\r\n                      : this.props.defaultCenter\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"sixteen wide column right aligned\">\r\n              <Button\r\n                type=\"submit\"\r\n                icon\r\n                labelPosition=\"right\"\r\n                positive\r\n                disabled={pristine || submitting}\r\n              >\r\n                <FormattedMessage id=\"interface.save\" /> <Icon name=\"save\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaultCenter: state.userReducer.defaultCenter,\r\n    currentLink: state.navigationReducer.currentLink\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    postData: (data, resource) => {\r\n      dispatch(postDataByAPI(data, resource));\r\n    },\r\n    patchData: (data, resourceName) => {\r\n      dispatch(patchDataByAPI(data, resourceName));\r\n    },\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    },\r\n    addMarker: value => {\r\n      dispatch(change(EditorReduxFormName, \"LatLng\", value));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(reduxForm({ form: EditorReduxFormName })(Editor));\r\n\r\nEditor.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  initialValues: PropTypes.object.isRequired,\r\n  header: PropTypes.node,\r\n  resource: PropTypes.string.isRequired\r\n};\r\n","export const EditorReduxFormName = \"Editor\";","import { FormattedMessage } from \"react-intl\";\r\nimport React from \"react\";\r\nimport { Input, Label } from \"semantic-ui-react\";\r\n\r\n// TODO update error message on language change\r\nexport const renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  icon,\r\n  iconPosition,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <>\r\n    <Input\r\n      {...input}\r\n      icon={icon}\r\n      iconPosition={iconPosition}\r\n      placeholder={label}\r\n      type={type}\r\n    />\r\n    {touched &&\r\n      ((error && (\r\n        <Label basic color=\"red\" pointing>\r\n          <FormattedMessage id={error} />\r\n        </Label>\r\n      )) ||\r\n        (warning && <span>{warning}</span>))}\r\n  </>\r\n);\r\n","export const requiredValidator = value =>\r\n  value || typeof value === \"number\"\r\n    ? undefined\r\n    : \"string.validationError\";\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst FileInputField = props => {\r\n  function onChange(e) {\r\n    const {\r\n      input: { onChange }\r\n    } = props;\r\n    onChange(e.target.files);\r\n  }\r\n  const {\r\n    icon,\r\n    text,\r\n    input: { name }\r\n  } = props;\r\n  return (\r\n    <>\r\n      <Button as=\"label\" htmlFor={name} icon labelPosition=\"right\">\r\n        {text}\r\n        <Icon name={icon} />\r\n      </Button>\r\n      {name === \"documents\" ? (\r\n        <input\r\n          name={name}\r\n          hidden\r\n          id={name}\r\n          multiple\r\n          type=\"file\"\r\n          onChange={onChange}\r\n        />\r\n      ) : (\r\n        <input\r\n          name={name}\r\n          hidden\r\n          id={name}\r\n          multiple\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileInputField;\r\n","import React from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field } from \"redux-form\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\nimport inputField from \"../molecules/FileInputField\";\r\n\r\n// TODO fix buttons language on language changes\r\nconst CompanyEditForm = () => {\r\n  return (\r\n    <>\r\n      <div className=\"eight wide column\">\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.name\" />\r\n          </label>\r\n          <Field\r\n            icon=\"industry\"\r\n            iconPosition=\"left\"\r\n            name=\"name\"\r\n            component={renderField}\r\n            type=\"text\"\r\n            validate={requiredValidator}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.address\" />\r\n          </label>\r\n          <Field icon=\"map marker alternate\" iconPosition=\"left\" name=\"address\" component={renderField} type=\"text\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.phone\" />\r\n          </label>\r\n          <Field icon=\"phone\" iconPosition=\"left\" name=\"phone\" component={renderField} type=\"text\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.email\" />\r\n          </label>\r\n          <Field icon=\"at\" iconPosition=\"left\" name=\"email\" component={renderField} type=\"text\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.note\" />\r\n          </label>\r\n          <Field name=\"note\" component=\"textarea\" rows={3} />\r\n        </Form.Field>\r\n        <Field\r\n          component={inputField}\r\n          text={<FormattedMessage id={\"interface.uploadLogo\"} />}\r\n          name=\"logo\"\r\n          icon=\"circle outline\"\r\n        />\r\n        <Field\r\n          component={inputField}\r\n          text={<FormattedMessage id={\"interface.uploadPhotos\"} />}\r\n          icon=\"file image\"\r\n          name=\"photos\"\r\n        />\r\n        <Field\r\n          component={inputField}\r\n          text={<FormattedMessage id={\"interface.uploadDocuments\"} />}\r\n          icon=\"file pdf\"\r\n          name=\"documents\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyEditForm;\r\n","import React from 'react';\r\nimport {Header, Icon} from \"semantic-ui-react\";\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\nconst CompanyAddHeader = () => {\r\n  return (\r\n      <div className=\"sixteen wide column center aligned\">\r\n        <Header as=\"h1\">\r\n          <Icon name=\"industry\" />{\" \"}\r\n          <FormattedMessage id=\"interface.addCompany\" />\r\n        </Header>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default CompanyAddHeader;","import React from \"react\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport CompanyEditForm from \"../organisms/CompanyEditForm\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport CompanyAddHeader from \"../molecules/CompanyAddHeader\";\r\n\r\nconst CompanyAdder = props => {\r\n  return (\r\n    <Editor\r\n      resource={companyResource}\r\n      initialValues={{}}\r\n      header={<CompanyAddHeader />}\r\n    >\r\n      <CompanyEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nexport default CompanyAdder;\r\n","import React, { Component } from \"react\";\r\nimport { getDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\n\r\n/**\r\n * HOC. Returns Viewer for desired resource. Id of resource should be in url params as :id\r\n * @param WrappedComponent Component name to wrap\r\n * @param resource Resource name for API calls, for example \"companies\"\r\n */\r\nexport function getItemLoader(WrappedComponent, resource) {\r\n  class ItemLoader extends Component {\r\n    componentDidMount() {\r\n      // Get data by API call in Redux\r\n      this.props.getDataByAPI(resource, this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n      // data is fetching\r\n      const isFetching = this.props.isFetching;\r\n      // array of items by resource param\r\n      const items = this.props.items;\r\n      // id from react-router-dom\r\n      const id = this.props.match.params.id;\r\n      // item by id\r\n      const item = items.find(i => i._id === id);\r\n      return (\r\n        <>\r\n          {isFetching && !item && <LoadingTemplate />}\r\n          {!isFetching && !item && <NoDataTemplate />}\r\n          {item && <WrappedComponent item={item} />}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => {\r\n    const items = state.dataReducer[resource] || [];\r\n    const isFetching = state.dataReducer.isFetching;\r\n    return { items, isFetching };\r\n  };\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      getDataByAPI: (resource, id) => {\r\n        dispatch(getDataByAPI(resource, id));\r\n      }\r\n    };\r\n  };\r\n\r\n  return connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ItemLoader);\r\n}\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst CompanyEditHeader = () => {\r\n  return (\r\n    <div className=\"sixteen wide column center aligned\">\r\n      <Header as=\"h1\">\r\n        <Icon name=\"industry\" />{\" \"}\r\n        <FormattedMessage id=\"interface.editCompany\" />\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyEditHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport CompanyEditHeader from \"../molecules/CompanyEditHeader\";\r\nimport CompanyEditForm from \"../organisms/CompanyEditForm\";\r\n\r\nconst CompanyEditor = props => {\r\n  const company = props.item;\r\n  return (\r\n    <Editor\r\n      initialValues={{\r\n        ...company,\r\n        photos: undefined,\r\n        documents: undefined,\r\n        logo: undefined\r\n      }}\r\n      header={<CompanyEditHeader />}\r\n      resource={companyResource}\r\n      photos={company.photos}\r\n      documents={company.documents}\r\n    >\r\n      <CompanyEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nCompanyEditor.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(CompanyEditor, companyResource);\r\n","import React from \"react\";\r\nimport { Divider, Header, Icon, List } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport MapWrapper from \"./MapWrapper\";\r\n\r\nconst CompanyView = props => {\r\n  return (\r\n    <>\r\n      <div className=\"ui row stackable\">\r\n        <div className=\"eight wide column\">\r\n          <Header as=\"h2\">\r\n            <Icon name=\"industry\" />\r\n            <Header.Content>\r\n              <Header.Subheader>\r\n                <FormattedMessage id=\"interface.name\" />\r\n              </Header.Subheader>\r\n              {props.company.name}\r\n            </Header.Content>\r\n          </Header>\r\n          {props.company.address && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"map marker alternate\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.address\" />\r\n                </Header.Subheader>\r\n                {props.company.address}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          {props.company.phone && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"phone\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.phone\" />\r\n                </Header.Subheader>\r\n                {\r\n                  <a href={\"tel:\" + props.company.phone}>\r\n                    {props.company.phone}\r\n                  </a>\r\n                }\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          {props.company.email && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"at\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.email\" />\r\n                </Header.Subheader>\r\n                {\r\n                  <a href={\"mailto:\" + props.company.email}>\r\n                    {props.company.email}\r\n                  </a>\r\n                }\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          {props.company.note && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"sticky note\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.note\" />\r\n                </Header.Subheader>\r\n                {props.company.note}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n        </div>\r\n        {props.company.LatLng ? (\r\n          <div className=\"eight wide column\">\r\n            <MapWrapper\r\n              marker={props.company.LatLng}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nCompanyView.propTypes = {};\r\n\r\nexport default CompanyView;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { addContact, patchContact } from \"../actions/contactsActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddContact extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n  open = () => this.setState({ open: true });\r\n  close = () => this.setState({ open: false });\r\n  submitForm = values => {\r\n    values.company = this.props.company;\r\n    this.props.initialValues\r\n      ? this.props.patchContact(values)\r\n      : this.props.addContact(values);\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    const { pristine, submitting, handleSubmit } = this.props;\r\n    return (\r\n      <Modal\r\n        open={this.state.open}\r\n        onOpen={this.open}\r\n        onClose={this.close}\r\n        size={\"tiny\"}\r\n        trigger={\r\n          <Dropdown.Item onClick={this.open}>\r\n            {this.props.initialValues ? (\r\n              <>\r\n                <Icon name=\"edit\" />\r\n                <FormattedMessage\r\n                  icon\r\n                  labelPosition=\"right\"\r\n                  id=\"interface.edit\"\r\n                />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Icon name=\"address book\" />\r\n                <FormattedMessage\r\n                  icon\r\n                  labelPosition=\"right\"\r\n                  id=\"interface.addContact\"\r\n                />\r\n              </>\r\n            )}\r\n          </Dropdown.Item>\r\n        }\r\n      >\r\n        {this.props.initialValues ? (\r\n          <Modal.Header>\r\n            <Icon name=\"address book\" />{\" \"}\r\n            <FormattedMessage id=\"interface.editContact\" />\r\n          </Modal.Header>\r\n        ) : (\r\n          <Modal.Header>\r\n            <Icon name=\"address book\" />{\" \"}\r\n            <FormattedMessage id=\"interface.addContact\" />\r\n          </Modal.Header>\r\n        )}\r\n        <Modal.Content>\r\n          <Form onSubmit={handleSubmit(this.submitForm)}>\r\n            <Form.Field>\r\n              <label>\r\n                <FormattedMessage id=\"interface.humanName\" />\r\n              </label>\r\n              <Field\r\n                name=\"name\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                validate={requiredValidator}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                <FormattedMessage id=\"interface.phone\" />\r\n              </label>\r\n              <Field\r\n                name=\"phone\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                validate={requiredValidator}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                <FormattedMessage id=\"interface.note\" />\r\n              </label>\r\n              <Field name=\"note\" component=\"textarea\" rows={3} />\r\n            </Form.Field>\r\n            <Button\r\n              type=\"submit\"\r\n              icon\r\n              labelPosition=\"right\"\r\n              positive\r\n              disabled={pristine || submitting}\r\n            >\r\n              <FormattedMessage id=\"interface.save\" /> <Icon name=\"save\" />\r\n            </Button>\r\n          </Form>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  company: PropTypes.string.isRequired,\r\n  addContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addContact: contact => dispatch(addContact(contact)),\r\n    patchContact: contact => dispatch(patchContact(contact))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(injectIntl(reduxForm({ form: \"Add contact\" })(AddContact)));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport AddContact from \"../organisms/AddContact\";\r\nimport DeleteDataByIdDialog from \"./DeleteDataByIdDialog\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\n\r\nconst CompanySettings = props => {\r\n  const company = props.company;\r\n  const deleteCompany = props.deleteCompany;\r\n  return (\r\n    <Dropdown\r\n      pointing={\"top right\"}\r\n      item\r\n      icon={{ name: \"wrench\", size: \"big\" }}\r\n    >\r\n      <Dropdown.Menu>\r\n        {company.create && (\r\n          <>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\"/r/hubs/add/\" + company._id + \"/\" + company.name}\r\n            >\r\n              <Icon name=\"warehouse\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addHub\" />\r\n            </Dropdown.Item>\r\n            <AddContact company={company._id} />\r\n          </>\r\n        )}\r\n        {company.update && (\r\n          <>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item as={Link} to={\"/r/companies/edit/\" + company._id}>\r\n              <Icon name=\"edit\" /> <FormattedMessage id=\"interface.edit\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item disabled>\r\n              <Icon name=\"archive\" />{\" \"}\r\n              <FormattedMessage id=\"interface.archive\" />\r\n            </Dropdown.Item>\r\n            {deleteCompany && (\r\n              <DeleteDataByIdDialog\r\n                header={<FormattedMessage id={\"string.deleteCompanyHeader\"} />}\r\n                body={\r\n                  <FormattedMessage\r\n                    id={\"string.deleteCompanyBody\"}\r\n                    values={{ company: company.name }}\r\n                  />\r\n                }\r\n                id={company._id}\r\n                resourceName={companyResource}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n        {company.isOwner && (\r\n          <>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\"/r/permissions/\" + company._id + \"/\" + company.name}\r\n            >\r\n              <Icon name=\"shield alternate\" />{\" \"}\r\n              <FormattedMessage id=\"interface.permissions\" />\r\n            </Dropdown.Item>\r\n          </>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nCompanySettings.propTypes = {};\r\n\r\nexport default CompanySettings;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport Contact from \"../molecules/Contact\";\r\n\r\nconst CompanyContacts = props => {\r\n  return (\r\n    <Card.Group className={\"stackable\"} itemsPerRow={4}>\r\n      {props.contacts.map(contact => {\r\n        return (\r\n          <Contact showCompany={false} key={contact._id} contact={contact} />\r\n        );\r\n      })}\r\n    </Card.Group>\r\n  );\r\n};\r\n\r\nCompanyContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired\r\n};\r\n\r\nexport default CompanyContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Header, Icon, List } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {serverURL} from \"../helpers/serverURL\";\r\n\r\nconst DocsOrganism = props => {\r\n  const documents = props.documents\r\n    ? props.documents.map(doc => (\r\n        <List.Item as=\"a\" href={serverURL + doc.path} key={doc.path}>\r\n          <Icon name=\"file\" /> {doc.originalname}\r\n        </List.Item>\r\n      ))\r\n    : undefined;\r\n  return (\r\n    <>\r\n      <div className=\"eight wide column viewer-block-margin\">\r\n        <Header as=\"h2\">\r\n          <Icon name=\"file pdf\" />\r\n          <Header.Content>\r\n            <FormattedMessage id=\"interface.documents\" />\r\n          </Header.Content>\r\n        </Header>\r\n        {documents ? <List link>{documents}</List> : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nDocsOrganism.propTypes = {\r\n  documents: PropTypes.array.isRequired\r\n};\r\n\r\nexport default DocsOrganism;\r\n","import React from \"react\";\r\nimport { Header, Image, Modal } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\n\r\nconst Photos = props => {\r\n  if (props.photos) {\r\n    return props.photos.map(photo => (\r\n      <div key={photo.path} className=\"three wide column middle aligned\">\r\n        <Modal\r\n          trigger={<Image fluid src={serverURL + photo.path} />}\r\n          basic\r\n          size=\"small\"\r\n          closeIcon\r\n        >\r\n          <Header icon=\"file image\" content={photo.originalname} />\r\n          <Modal.Content>\r\n            <Image fluid src={serverURL + photo.path} />\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    ));\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nPhotos.propTypes = {};\r\n\r\nexport default Photos;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport Photos from \"./Photos\";\r\n\r\nconst LogoPhotosHeaders = props => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"three wide column middle aligned\">\r\n        {props.logo && (\r\n          <Image className={\"viewerLogo\"} src={serverURL + props.logo.path} />\r\n        )}\r\n      </div>\r\n      <Photos photos={props.photos} />\r\n    </div>\r\n  );\r\n};\r\n\r\nLogoPhotosHeaders.propTypes = {\r\n  logo: PropTypes.object.isRequired,\r\n  photos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LogoPhotosHeaders;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Divider, Icon } from \"semantic-ui-react\";\r\nimport CompanyView from \"../organisms/CompanyView\";\r\nimport CompanyHub from \"../molecules/CompanyHub\";\r\nimport CompanySettings from \"../molecules/CompanySettings\";\r\nimport CompanyContacts from \"../organisms/CompanyContacts\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DocsOrganism from \"../organisms/DocsOrganism\";\r\nimport LogoPhotosHeaders from \"../organisms/LogoPhotosHeaders\";\r\n\r\nconst CompanyViewTemplate = props => {\r\n  const company = props.company;\r\n  const CRUD = company.CRUD;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <LogoPhotosHeaders logo={company.logo} photos={company.photos} />\r\n        <Divider />\r\n        {company.update && (\r\n          <CompanySettings company={company} deleteCompany={company.delete} />\r\n        )}\r\n        <CompanyView company={company} id={company._id} CRUD={CRUD} />\r\n        {company.hubs && company.hubs.length > 0 && (\r\n          <>\r\n            <div className=\"row viewer-block-margin\">\r\n              <div className=\"four column\">\r\n                <Header as=\"h2\">\r\n                  <Icon name=\"warehouse\" />\r\n                  <Header.Content>\r\n                    <FormattedMessage id=\"interface.hubs\" />\r\n                  </Header.Content>\r\n                </Header>\r\n              </div>\r\n            </div>\r\n            <div className=\"four column row stackable\">\r\n              {company.hubs.map(hub => (\r\n                <CompanyHub key={hub._id} hub={hub} />\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n        {company.documents && company.documents.length > 0 && (\r\n          <DocsOrganism documents={company.documents} />\r\n        )}\r\n        {company.contacts && company.contacts.length > 0 && (\r\n          <div className=\"sixteen wide column viewer-block-margin\">\r\n            <Header as=\"h2\">\r\n              <Icon name=\"address book\" />\r\n              <Header.Content>\r\n                <FormattedMessage id=\"interface.contacts\" />\r\n              </Header.Content>\r\n            </Header>\r\n            <CompanyContacts contacts={company.contacts} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCompanyViewTemplate.propTypes = {\r\n  company: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CompanyViewTemplate;\r\n","import React from \"react\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport CompanyViewTemplate from \"../templates/CompanyViewTemplate\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CompanyViewer(props) {\r\n  const company = props.item;\r\n  return <CompanyViewTemplate company={company} />;\r\n}\r\n\r\nCompanyViewer.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(CompanyViewer, companyResource);\r\n","import React from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field } from \"redux-form\";\r\nimport inputField from \"../molecules/FileInputField\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\n\r\nconst HubEditForm = props => {\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.name\" />\r\n        </label>\r\n        <Field\r\n          name=\"name\"\r\n          component={renderField}\r\n          type=\"text\"\r\n          validate={requiredValidator}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.note\" />\r\n        </label>\r\n        <Field name=\"note\" component=\"textarea\" rows={3} />\r\n      </Form.Field>\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"interface.uploadPhotos\"} />}\r\n        icon=\"file image\"\r\n        name=\"photos\"\r\n      />\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"interface.uploadDocuments\"} />}\r\n        icon=\"file pdf\"\r\n        name=\"documents\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHubEditForm.propTypes = {};\r\n\r\nexport default HubEditForm;\r\n","import React from \"react\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport HubEditForm from \"../organisms/HubEditForm\";\r\nimport { hubResource } from \"../helpers/resourceNames\";\r\n\r\nconst HubAdder = props => {\r\n  const company = props.match.params.companyId;\r\n  return (\r\n    <Editor initialValues={{ company: company }} resource={hubResource}>\r\n      <HubEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nexport default HubAdder;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { hubResource } from \"../helpers/resourceNames\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport HubEditForm from \"../organisms/HubEditForm\";\r\n\r\nconst HubEditor = props => {\r\n  const hub = props.item;\r\n  return (\r\n    <Editor\r\n      resource={hubResource}\r\n      photos={hub.photos}\r\n      documents={hub.documents}\r\n      initialValues={{ ...hub, photos: undefined, documents: undefined }}\r\n    >\r\n      <HubEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nHubEditor.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(HubEditor, hubResource);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon, List } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HubDevices = props => {\r\n  if (!props.devices || props.devices.length < 1) {\r\n    return null;\r\n  }\r\n  function getListItem(item) {\r\n    return (\r\n      <List.Item as={Link} to={\"/r/devices/view/\" + item._id} key={item._id}>\r\n        {item.name}\r\n      </List.Item>\r\n    );\r\n  }\r\n  const cameras = props.devices\r\n    .filter(d => d.deviceType === \"camera\")\r\n    .map(c => getListItem(c));\r\n  const recorders = props.devices\r\n    .filter(d => d.deviceType === \"recorder\")\r\n    .map(r => getListItem(r));\r\n  const netdevs = props.devices\r\n    .filter(d => d.deviceType === \"netdev\")\r\n    .map(n => getListItem(n));\r\n  return (\r\n    <>\r\n      <div>\r\n        <Icon name={\"record\"} />\r\n        <List bulleted horizontal>\r\n          {cameras}\r\n        </List>\r\n      </div>\r\n      <div>\r\n        <Icon name=\"microchip\" />\r\n        <List bulleted horizontal>\r\n          {netdevs}\r\n        </List>\r\n      </div>\r\n      <div>\r\n        <Icon name=\"hdd\" />\r\n        <List bulleted horizontal>\r\n          {recorders}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nHubDevices.propTypes = {\r\n  devices: PropTypes.array.isRequired\r\n};\r\n\r\nexport default HubDevices;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Divider, Header, Icon, Popup} from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HubDevices from \"./HubDevices\";\r\n\r\nconst HubView = props => {\r\n  const hub = props.hub;\r\n  return (\r\n      <div className=\"eight wide column\">\r\n        <Header as=\"h2\">\r\n          <Icon name=\"warehouse\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.name\" />\r\n            </Header.Subheader>\r\n            {hub.name}\r\n          </Header.Content>\r\n        </Header>\r\n        <Header as=\"h2\">\r\n          <Icon name=\"industry\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.company\" />\r\n            </Header.Subheader>\r\n            <Link to={\"/r/companies/view/\" + hub.company._id}>\r\n              {hub.company.name}\r\n            </Link>\r\n          </Header.Content>\r\n        </Header>\r\n        {hub.note && (\r\n          <Header as=\"h2\">\r\n            <Icon name=\"sticky note\" />\r\n            <Header.Content>\r\n              <Header.Subheader>\r\n                <FormattedMessage id=\"interface.note\" />\r\n              </Header.Subheader>\r\n              {hub.note}\r\n            </Header.Content>\r\n          </Header>\r\n        )}\r\n        <Divider />\r\n        <HubDevices devices={hub.devices}/>\r\n      </div>\r\n  );\r\n};\r\n\r\nHubView.propTypes = {\r\n  hub: PropTypes.object.isRequired\r\n};\r\n\r\nexport default HubView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DeleteDataByIdDialog from \"./DeleteDataByIdDialog\";\r\nimport { hubResource } from \"../helpers/resourceNames\";\r\n\r\nconst HubSettings = props => {\r\n  const hub = props.hub;\r\n  const create = props.create;\r\n  const update = props.update;\r\n  const deleteHub = props.deleteHub;\r\n  return (\r\n    <Dropdown\r\n      pointing={\"top right\"}\r\n      item\r\n      icon={{ name: \"wrench\", size: \"big\" }}\r\n    >\r\n      <Dropdown.Menu>\r\n        {create && (\r\n          <>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\r\n                hub.LatLng\r\n                  ? \"/r/devices/add/camera/\" +\r\n                    hub._id +\r\n                    \"/\" +\r\n                    hub.name +\r\n                    \"/\" +\r\n                    hub.LatLng.lat +\r\n                    \"/\" +\r\n                    hub.LatLng.lng\r\n                  : \"/r/devices/add/camera/\" + hub._id + \"/\" + hub.name\r\n              }\r\n            >\r\n              <Icon name=\"record\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addCamera\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\r\n                hub.LatLng\r\n                  ? \"/r/devices/add/netdev/\" +\r\n                    hub._id +\r\n                    \"/\" +\r\n                    hub.name +\r\n                    \"/\" +\r\n                    hub.LatLng.lat +\r\n                    \"/\" +\r\n                    hub.LatLng.lng\r\n                  : \"/r/devices/add/netdev/\" + hub._id + \"/\" + hub.name\r\n              }\r\n            >\r\n              <Icon name=\"microchip\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addNetDev\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\r\n                hub.LatLng\r\n                  ? \"/r/devices/add/recorder/\" +\r\n                    hub._id +\r\n                    \"/\" +\r\n                    hub.name +\r\n                    \"/\" +\r\n                    hub.LatLng.lat +\r\n                    \"/\" +\r\n                    hub.LatLng.lng\r\n                  : \"/r/devices/add/recorder/\" + hub._id + \"/\" + hub.name\r\n              }\r\n            >\r\n              <Icon name=\"hdd\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addRecorder\" />\r\n            </Dropdown.Item>\r\n          </>\r\n        )}\r\n        {update && (\r\n          <>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item as={Link} to={\"/r/hubs/edit/\" + hub._id}>\r\n              <Icon name=\"edit\" /> <FormattedMessage id=\"interface.edit\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item disabled>\r\n              <Icon name=\"archive\" />{\" \"}\r\n              <FormattedMessage id=\"interface.archive\" />\r\n            </Dropdown.Item>\r\n            {deleteHub && (\r\n              <DeleteDataByIdDialog\r\n                resourceName={hubResource}\r\n                id={hub._id}\r\n                header={<FormattedMessage id={\"string.deleteHubHeader\"} />}\r\n                body={\r\n                  <FormattedMessage\r\n                    id={\"string.deleteHubBody\"}\r\n                    values={{ hub: hub.name }}\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nHubSettings.propTypes = {\r\n  hub: PropTypes.object.isRequired,\r\n  create: PropTypes.bool.isRequired,\r\n  update: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default HubSettings;\r\n","import React from 'react';\r\nimport {Loader} from \"semantic-ui-react\";\r\n\r\nconst Load = () => {\r\n  return (\r\n      <Loader active inline=\"centered\" />\r\n  );\r\n};\r\n\r\nexport default Load;","import React, { Component } from \"react\";\r\nimport { Checkbox, Comment } from \"semantic-ui-react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nclass CommentReplyForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      reply: \"\",\r\n      checked: false\r\n    };\r\n    this.handleIssueForm = this.handleIssueForm.bind(this);\r\n  }\r\n  handleIssueForm(value) {\r\n    this.setState({\r\n      reply: value\r\n    });\r\n  }\r\n  render() {\r\n    const { intl } = this.props;\r\n    return (\r\n      <>\r\n        <Comment.Actions>\r\n          <Comment.Action\r\n            onClick={e => this.setState({ show: !this.state.show })}\r\n          >\r\n            <FormattedMessage id={\"interface.reply\"}/>\r\n          </Comment.Action>\r\n        </Comment.Actions>\r\n        {this.state.show && (\r\n          <Form reply>\r\n            <Form.TextArea\r\n              onChange={(e, { value }) => this.handleIssueForm(value)}\r\n            />\r\n            <Button\r\n              type={\"button\"}\r\n              onClick={() =>\r\n                this.props.sendIssue(\r\n                  { reply: this.state.reply, open: !this.state.checked },\r\n                  this.props.issue\r\n                )\r\n              }\r\n              disabled={this.state.reply.length < 1}\r\n              content={intl.formatMessage({ id: \"interface.addReply\" })}\r\n              labelPosition=\"left\"\r\n              icon=\"edit\"\r\n              primary\r\n            />\r\n            <Checkbox\r\n              onChange={(e, data) => this.setState({ checked: data.checked })}\r\n              label={intl.formatMessage({ id: \"interface.solved\" })}\r\n            />\r\n          </Form>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(CommentReplyForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst IssueUnlock = props => {\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <Icon\r\n          onClick={() => props.unlock(props._id)}\r\n          name={\"unlock\"}\r\n          className={\"pointer_on_hover green_color_on_hover\"}\r\n        />\r\n      }\r\n      content={<FormattedMessage id={\"interface.unlockIssue\"} />}\r\n      basic\r\n    />\r\n  );\r\n};\r\n\r\nIssueUnlock.propTypes = {};\r\n\r\nexport default IssueUnlock;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\n\r\n/*\r\n * actions\r\n */\r\n\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_IS_LOGGED = \"SET_IS_LOGGED\";\r\nexport const SET_DEFAULT_CENTER = \"SET_DEFAULT_CENTER\";\r\nexport const SET_USER_ID = \"SET_USER_ID\";\r\nexport const SET_USER_COMPANIES = \"SET_USER_COMPANIES\";\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function setError(error) {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: error\r\n  };\r\n}\r\n\r\nexport function changeLanguage(language) {\r\n  return {\r\n    type: \"CHANGE_LANGUAGE\",\r\n    payload: language\r\n  };\r\n}\r\nexport function updateUser(user) {\r\n  return {\r\n    type: UPDATE_USER,\r\n    payload: user\r\n  };\r\n}\r\n\r\nexport function setIsLogged(isLogged) {\r\n  return {\r\n    type: SET_IS_LOGGED,\r\n    payload: isLogged\r\n  };\r\n}\r\n\r\nexport function setDefaultCenter(defaultCenter) {\r\n  return {\r\n    type: SET_DEFAULT_CENTER,\r\n    payload: defaultCenter\r\n  };\r\n}\r\n\r\nexport function setUserId(id) {\r\n  return {\r\n    type: SET_USER_ID,\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function setUserCompanies(companies) {\r\n  return {\r\n    type: SET_USER_COMPANIES,\r\n    payload: companies\r\n  };\r\n}\r\n\r\nexport function login() {\r\n  return function(dispatch, getState) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(\"auth\", {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                if (result.data.ok) {\r\n                  dispatch(setIsLogged(true));\r\n                }\r\n              },\r\n              error => {\r\n                dispatch(setError(error.toString()));\r\n              }\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return function(dispatch, getState) {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(result => {\r\n        dispatch(setIsLogged(false));\r\n      })\r\n      .catch(error => {});\r\n  };\r\n}\r\n\r\nexport function getUserId() {\r\n  return function(dispatch, getState) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(\"users/\", {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(setUserId(result.data.result.user._id));\r\n                dispatch(setUserCompanies(result.data.result.companies));\r\n              },\r\n              error => {\r\n                dispatch(setError(error.toString()));\r\n              }\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function getDefaultCenterFromUserAgent() {\r\n  return function(dispatch, getState) {\r\n    const language = getState().userReducer.language;\r\n    navigator.geolocation.getCurrentPosition(\r\n      pos => {\r\n        dispatch(\r\n          setDefaultCenter({\r\n            lat: pos.coords.latitude,\r\n            lng: pos.coords.longitude\r\n          })\r\n        );\r\n      },\r\n      // User blocked geolocation\r\n      error => {\r\n        switch (language) {\r\n          case \"en-GB\":\r\n            // Big Ben\r\n            dispatch(\r\n              setDefaultCenter({\r\n                lat: 51.50078340519703,\r\n                lng: -0.12459538923064883\r\n              })\r\n            );\r\n            break;\r\n          case \"en-US\":\r\n            // HP Garage\r\n            dispatch(\r\n              setDefaultCenter({\r\n                lat: 37.44303269805327,\r\n                lng: -122.15461939573288\r\n              })\r\n            );\r\n            break;\r\n          case \"uk\":\r\n            // Independence Monument, Kiev\r\n            dispatch(\r\n              setDefaultCenter({\r\n                lat: 50.44956196647267,\r\n                lng: 30.52538046615541\r\n              })\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Header, Icon, Modal, Popup } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass IssueDelete extends Component {\r\n  state = { modalOpen: false };\r\n\r\n  handleOpen = () => this.setState({ modalOpen: true });\r\n\r\n  handleClose = () => this.setState({ modalOpen: false });\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.state.modalOpen}\r\n        onClose={this.handleClose}\r\n        trigger={\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                onClick={() => this.handleOpen()}\r\n                name={\"trash\"}\r\n                className={\"pointer_on_hover red_color_on_hover\"}\r\n              />\r\n            }\r\n            content={\r\n              this.props.replyId ? (\r\n                <FormattedMessage id={\"interface.deleteReply\"} />\r\n              ) : (\r\n                <FormattedMessage id={\"interface.deleteIssue\"} />\r\n              )\r\n            }\r\n            basic\r\n          />\r\n        }\r\n        basic\r\n        size=\"small\"\r\n      >\r\n        <Header\r\n          icon=\"trash\"\r\n          content={\r\n            this.props.replyId ? (\r\n              <FormattedMessage id={\"interface.deleteReply\"} />\r\n            ) : (\r\n              <FormattedMessage id={\"interface.deleteIssue\"} />\r\n            )\r\n          }\r\n        />\r\n        <Modal.Content>\r\n          <p>\r\n            {this.props.replyId ? (\r\n              <FormattedMessage id={\"string.deleteReply\"} />\r\n            ) : (\r\n              <FormattedMessage id={\"string.deleteIssue\"} />\r\n            )}\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={() => {\r\n              this.handleClose();\r\n            }}\r\n            basic\r\n            color=\"green\"\r\n            inverted\r\n          >\r\n            <Icon name=\"remove\" /> {<FormattedMessage id={\"interface.no\"} />}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              this.props.delete(this.props._id, this.props.replyId);\r\n              this.handleClose();\r\n            }}\r\n            color=\"red\"\r\n            inverted\r\n          >\r\n            <Icon name=\"checkmark\" />{\" \"}\r\n            {<FormattedMessage id={\"interface.yes\"} />}\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nIssueDelete.propTypes = {};\r\n\r\nexport default IssueDelete;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Icon, Modal, Popup, TextArea } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass IssueEdit extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      modalOpen: false,\r\n      text: props.text\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ text: event.target.value });\r\n  }\r\n\r\n  handleOpen = () => this.setState({ modalOpen: true });\r\n\r\n  handleClose = () => this.setState({ modalOpen: false });\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.state.modalOpen}\r\n        onClose={this.handleClose}\r\n        trigger={\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                onClick={() => this.handleOpen()}\r\n                name={\"edit\"}\r\n                className={\"pointer_on_hover green_color_on_hover\"}\r\n              />\r\n            }\r\n            content={\r\n              this.props.replyId ? (\r\n                <FormattedMessage id={\"interface.editReply\"} />\r\n              ) : (\r\n                <FormattedMessage id={\"interface.editIssue\"} />\r\n              )\r\n            }\r\n            basic\r\n          />\r\n        }\r\n        size={\"tiny\"}\r\n      >\r\n        <Modal.Header>\r\n          {this.props.replyId ? (\r\n            <FormattedMessage id={\"interface.editReply\"} />\r\n          ) : (\r\n            <FormattedMessage id={\"interface.editIssue\"} />\r\n          )}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextArea\r\n            rows={4}\r\n            style={{ width: \"100%\", display: \"block\" }}\r\n            value={this.state.text}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={() => {\r\n              this.handleClose();\r\n            }}\r\n          >\r\n            <FormattedMessage id={\"interface.cancel\"} />\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              this.handleClose();\r\n              this.props.patch(\r\n                { message: this.state.text },\r\n                this.props._id,\r\n                this.props.replyId\r\n              );\r\n            }}\r\n            positive\r\n            icon=\"save\"\r\n            labelPosition=\"right\"\r\n            content={<FormattedMessage id={\"interface.save\"} />}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nIssueEdit.propTypes = {};\r\n\r\nexport default IssueEdit;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Comment,\r\n  Divider,\r\n  Form,\r\n  Header,\r\n  Icon\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  FormattedDate,\r\n  FormattedMessage,\r\n  FormattedRelative,\r\n  FormattedTime,\r\n  injectIntl\r\n} from \"react-intl\";\r\nimport {\r\n  deleteIssue,\r\n  getIssues,\r\n  patchIssue,\r\n  sendIssue\r\n} from \"../actions/issuesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Load from \"../helpers/Load\";\r\nimport CommentReplyForm from \"../molecules/CommentReplyForm\";\r\nimport IssueUnlock from \"../molecules/IssueUnlock\";\r\nimport { getUserId } from \"../actions/userActions\";\r\nimport IssueDelete from \"../molecules/IssueDelete\";\r\nimport IssueEdit from \"../molecules/IssueEdit\";\r\n\r\nclass Issues extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      issue: \"\",\r\n      collapsed: false\r\n    };\r\n\r\n    this.handleIssueForm = this.handleIssueForm.bind(this);\r\n    this.unlockIssue = this.unlockIssue.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n    this.patchIssue = this.patchIssue.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getIssues(\"hub\", this.props.hub._id);\r\n    this.props.getUserId();\r\n  }\r\n\r\n  handleIssueForm(value) {\r\n    this.setState({\r\n      issue: value\r\n    });\r\n  }\r\n\r\n  handleCheckbox = (e, { checked }) => this.setState({ collapsed: checked });\r\n\r\n  unlockIssue(issueId) {\r\n    this.props.patchIssue(null, issueId, true);\r\n  }\r\n\r\n  patchIssue(issue, issueId, replyId = false) {\r\n    if (replyId) {\r\n      this.props.patchIssue(issue, issueId, false, replyId);\r\n    } else {\r\n      this.props.patchIssue(issue, issueId);\r\n    }\r\n  }\r\n\r\n  deleteIssue(issueId, replyId = false) {\r\n    this.props.deleteIssue(issueId, replyId);\r\n  }\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    const { intl } = this.props;\r\n    let view = <></>;\r\n    const id = this.props.hub._id;\r\n    const issues = this.props.issuesReducer[id] || [];\r\n    if (this.props.issuesReducer.isIssuesFetching[id]) {\r\n      view = (\r\n        <div className=\"row\">\r\n          <Load />\r\n        </div>\r\n      );\r\n    } else if (this.props.issuesReducer.issuesError[id]) {\r\n      view = (\r\n        <div className=\"row\">\r\n          <div className=\"eight wide column center aligned\">\r\n            <Header icon>\r\n              <Icon name=\"frown outline\" />\r\n              Oops! Something went wrong...\r\n            </Header>\r\n            <Divider />\r\n            <code>{this.props.issuesReducer.error.toString()}</code>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (issues) {\r\n      const comments = issues.map(comment => {\r\n        return (\r\n          <Comment key={comment._id}>\r\n            <Comment.Avatar src={comment.user.picture} />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">{comment.user.name}</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>\r\n                  <FormattedDate value={comment.date} />{\" \"}\r\n                  <FormattedTime value={comment.date} /> (\r\n                  <FormattedRelative value={comment.date} />\r\n                  {comment.edited && (\r\n                    <>\r\n                      {\", \"}\r\n                      <FormattedMessage id={\"interface.edited\"} />{\" \"}\r\n                      <FormattedRelative value={comment.edited} />\r\n                    </>\r\n                  )}\r\n                  ){\" \"}\r\n                  {this.props.userId === comment.user._id && (\r\n                    <IssueEdit\r\n                      text={comment.message}\r\n                      _id={comment._id}\r\n                      replyId={false}\r\n                      patch={this.patchIssue}\r\n                    />\r\n                  )}\r\n                  {this.props.userId === comment.user._id && (\r\n                    <IssueDelete\r\n                      _id={comment._id}\r\n                      replyId={false}\r\n                      delete={this.deleteIssue}\r\n                    />\r\n                  )}\r\n                  {!comment.open && this.props.userId === comment.user._id && (\r\n                    <IssueUnlock _id={comment._id} unlock={this.unlockIssue} />\r\n                  )}\r\n                </div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>{comment.message}</Comment.Text>\r\n            </Comment.Content>\r\n            <Comment.Group collapsed={collapsed}>\r\n              {comment.replies.map(reply => {\r\n                return (\r\n                  <Comment key={reply._id}>\r\n                    <Comment.Avatar src={reply.user.picture} />\r\n                    <Comment.Content>\r\n                      <Comment.Author as=\"a\">{reply.user.name}</Comment.Author>\r\n                      <Comment.Metadata>\r\n                        <div>\r\n                          <FormattedDate value={reply.date} />{\" \"}\r\n                          <FormattedTime value={reply.date} /> (\r\n                          <FormattedRelative value={reply.date} />\r\n                          {reply.edited && (\r\n                            <>\r\n                              {\", \"}\r\n                              <FormattedMessage id={\"interface.edited\"} />{\" \"}\r\n                              <FormattedRelative value={reply.edited} />\r\n                            </>\r\n                          )}\r\n                          ){\" \"}\r\n                          {this.props.userId === reply.user._id && (\r\n                            <IssueEdit\r\n                              text={reply.reply}\r\n                              _id={comment._id}\r\n                              replyId={reply._id}\r\n                              patch={this.patchIssue}\r\n                            />\r\n                          )}\r\n                          {this.props.userId === reply.user._id && (\r\n                            <IssueDelete\r\n                              _id={comment._id}\r\n                              replyId={reply._id}\r\n                              delete={this.deleteIssue}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </Comment.Metadata>\r\n                      <Comment.Text>{reply.reply}</Comment.Text>\r\n                    </Comment.Content>\r\n                  </Comment>\r\n                );\r\n              })}\r\n              {comment.open && (\r\n                <CommentReplyForm\r\n                  issue={comment._id}\r\n                  sendIssue={this.props.sendIssue}\r\n                />\r\n              )}\r\n            </Comment.Group>\r\n          </Comment>\r\n        );\r\n      });\r\n      view = (\r\n        <div className=\"row viewer-block-margin\">\r\n          <div className=\"sixteen wide column\">\r\n            <Comment.Group threaded>\r\n              <Header as=\"h2\">\r\n                <Icon name={\"stethoscope\"} />{\" \"}\r\n                <FormattedMessage id=\"interface.issue\" />\r\n              </Header>\r\n              <Checkbox\r\n                checked={this.state.collapsed}\r\n                label={intl.formatMessage({\r\n                  id: \"interface.collapseComments\"\r\n                })}\r\n                onChange={this.handleCheckbox}\r\n              />\r\n              {comments}\r\n              <Divider />\r\n              {this.props.update && (\r\n                <Form reply>\r\n                  <Form.TextArea\r\n                    onChange={(e, { value }) =>\r\n                      this.handleIssueForm(value)\r\n                    }\r\n                  />\r\n                  <Button\r\n                    type={\"button\"}\r\n                    content={<FormattedMessage id=\"interface.addIssue\" />}\r\n                    labelPosition=\"left\"\r\n                    icon=\"bug\"\r\n                    primary\r\n                    disabled={this.state.issue.length < 1}\r\n                    onClick={() =>\r\n                      this.props.sendIssue({\r\n                        hub: this.props.hub._id,\r\n                        issue: this.state.issue\r\n                      })\r\n                    }\r\n                  />\r\n                </Form>\r\n              )}\r\n            </Comment.Group>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return view;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    issuesReducer: state.issuesReducer,\r\n    userId: state.userReducer.userId || false\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    sendIssue: (issue, issueId) => {\r\n      dispatch(sendIssue(issue, issueId));\r\n    },\r\n    getIssues: (byWhat, id) => {\r\n      dispatch(getIssues(byWhat, id));\r\n    },\r\n    getUserId: () => dispatch(getUserId()),\r\n    patchIssue: (issue, issueId, unlock, replyId) => {\r\n      dispatch(patchIssue(issue, issueId, unlock, replyId));\r\n    },\r\n    deleteIssue: (issueId, replyId) => {\r\n      dispatch(deleteIssue(issueId, replyId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Issues)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Divider } from \"semantic-ui-react\";\r\nimport HubView from \"../organisms/HubView\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\nimport HubSettings from \"../molecules/HubSettings\";\r\nimport Issues from \"../organisms/Issues\";\r\nimport DocsOrganism from \"../organisms/DocsOrganism\";\r\nimport LogoPhotosHeaders from \"../organisms/LogoPhotosHeaders\";\r\n\r\nconst HubViewTemplate = props => {\r\n  const hub = props.hub;\r\n  const company = hub.company;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <LogoPhotosHeaders logo={company.logo} photos={hub.photos} />\r\n        <Divider />\r\n        {hub.update && (\r\n          <HubSettings\r\n            create={hub.create}\r\n            update={hub.update}\r\n            hub={hub}\r\n            deleteHub={hub.delete}\r\n          />\r\n        )}\r\n        <div className={\"row stackable\"}>\r\n          <HubView hub={hub} />\r\n          {hub.LatLng && (\r\n            <div className=\"eight wide column\">\r\n              <MapWrapper defaultCenter={hub.LatLng} marker={hub.LatLng} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {hub.documents && hub.documents.length > 0 && <DocsOrganism documents={hub.documents} />}\r\n        <Issues update={hub.update} hub={hub} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHubViewTemplate.propTypes = {\r\n  hub: PropTypes.object.isRequired\r\n};\r\n\r\nexport default HubViewTemplate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { hubResource } from \"../helpers/resourceNames\";\r\nimport HubViewTemplate from \"../templates/HubViewTemplate\";\r\n\r\nconst HubViewer = props => {\r\n  const hub = props.item;\r\n  return <HubViewTemplate hub={hub} />;\r\n};\r\n\r\nHubViewer.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(HubViewer, hubResource);\r\n","const getDeviceIcon = deviceType => {\r\n  switch (deviceType) {\r\n    case \"camera\":\r\n      return \"record\";\r\n    case \"recorder\":\r\n      return \"hdd\";\r\n    case \"netdev\":\r\n      return \"microchip\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport default getDeviceIcon;\r\n","import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field, formValueSelector } from \"redux-form\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\nimport inputField from \"../molecules/FileInputField\";\r\nimport { connect } from \"react-redux\";\r\nimport { EditorReduxFormName } from \"../helpers/editorReduxFormName\";\r\nimport PropTypes from \"prop-types\";\r\nimport getDeviceIcon from \"../helpers/getDeviceIcon\";\r\n\r\n// TODO ptz\r\nconst DeviceEditForm = props => {\r\n  let iconName = getDeviceIcon(props.deviceType);\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.name\" />\r\n        </label>\r\n        <Field\r\n          icon={iconName}\r\n          iconPosition=\"left\"\r\n          name=\"name\"\r\n          component={renderField}\r\n          type=\"text\"\r\n          validate={requiredValidator}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.ip\" />\r\n        </label>\r\n        <Field\r\n          icon=\"terminal\"\r\n          iconPosition=\"left\"\r\n          name=\"ip\"\r\n          component={renderField}\r\n          type=\"text\"\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.serial\" />\r\n        </label>\r\n        <Field\r\n          icon=\"barcode\"\r\n          iconPosition=\"left\"\r\n          name=\"serial\"\r\n          component={renderField}\r\n          type=\"text\"\r\n        />\r\n      </Form.Field>\r\n      {props.deviceType === \"camera\" && (\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.ptz\" />\r\n          </label>\r\n          <Field name=\"ptz\" id=\"ptz\" component=\"input\" type=\"checkbox\" />\r\n        </Form.Field>\r\n      )}\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.note\" />\r\n        </label>\r\n        <Field name=\"note\" component=\"textarea\" rows={3} />\r\n      </Form.Field>\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"interface.uploadPhotos\"} />}\r\n        icon=\"file image\"\r\n        name=\"photos\"\r\n      />\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"interface.uploadDocuments\"} />}\r\n        icon=\"file pdf\"\r\n        name=\"documents\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nDeviceEditForm.propTypes = {\r\n  deviceType: PropTypes.string.isRequired\r\n};\r\n\r\nconst selector = formValueSelector(EditorReduxFormName); // <-- same as form name\r\nexport default connect(state => {\r\n  const deviceType = selector(state, \"deviceType\");\r\n  return { deviceType };\r\n})(DeviceEditForm);\r\n","import React from \"react\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\nimport DeviceEditForm from \"../organisms/DeviceEditForm\";\r\n\r\nconst DeviceAdder = props => {\r\n  const hub = props.match.params.hubId;\r\n  const deviceType = props.match.params.deviceType;\r\n  const lat = Number(props.match.params.lat) || undefined;\r\n  const lng = Number(props.match.params.lng) || undefined;\r\n  return (\r\n    <Editor\r\n      resource={deviceResource}\r\n      initialValues={{\r\n        hub: hub,\r\n        deviceType: deviceType,\r\n        LatLng: lat && lng ? {lat: lat, lng: lng} : undefined\r\n      }}\r\n    >\r\n      <DeviceEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nexport default DeviceAdder;\r\n","import React from \"react\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport DeviceEditForm from \"../organisms/DeviceEditForm\";\r\n\r\nfunction DeviceEditor(props) {\r\n  const device = props.item;\r\n  return (\r\n    <Editor\r\n      resource={deviceResource}\r\n      initialValues={{ ...device, photos: undefined, documents: undefined }}\r\n      photos={device.photos}\r\n      documents={device.documents}\r\n    >\r\n      <DeviceEditForm deviceType={device.deviceType} />\r\n    </Editor>\r\n  );\r\n}\r\n\r\nexport default getItemLoader(DeviceEditor, deviceResource);\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport getDeviceIcon from \"../helpers/getDeviceIcon\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst DeviceView = props => {\r\n  let iconName = getDeviceIcon(props.device.deviceType);\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Header as=\"h2\">\r\n        <Icon name={iconName} />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"interface.name\" />\r\n          </Header.Subheader>\r\n          {props.device.name}\r\n        </Header.Content>\r\n      </Header>\r\n      <Header as=\"h2\">\r\n        <Icon name=\"warehouse\" />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"interface.hub\" />\r\n          </Header.Subheader>\r\n          <Link to={\"/r/hubs/view/\" + props.device.hub._id}>\r\n            {props.device.hub.name}\r\n          </Link>\r\n        </Header.Content>\r\n      </Header>\r\n      {props.device.deviceType === \"camera\" && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"expand\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.ptz\" />\r\n            </Header.Subheader>\r\n            {props.device.ptz ? \"Yes\" : \"No\"}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.device.ip && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"terminal\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.ip\" />\r\n            </Header.Subheader>\r\n            {props.device.ip}{\" \"}\r\n            <CopyToClipboard text={props.device.ip}>\r\n              <Icon color={\"blue\"} name=\"copy outline\" />\r\n            </CopyToClipboard>\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.device.serial && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"barcode\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.serial\" />\r\n            </Header.Subheader>\r\n            {props.device.serial}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.device.note && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"sticky note\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.note\" />\r\n            </Header.Subheader>\r\n            {props.device.note}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DeleteDataByIdDialog from \"./DeleteDataByIdDialog\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\n\r\nconst DeviceSettings = props => {\r\n  const update = props.update;\r\n  const device = props.device;\r\n  const deleteDevice = props.deleteDevice;\r\n  return (\r\n    <Dropdown\r\n      pointing={\"top right\"}\r\n      item\r\n      icon={{ name: \"wrench\", size: \"big\" }}\r\n    >\r\n      <Dropdown.Menu>\r\n        {update && (\r\n          <>\r\n            <Dropdown.Item as={Link} to={\"/r/devices/edit/\" + device._id}>\r\n              <Icon name=\"edit\" /> <FormattedMessage id=\"interface.edit\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item disabled>\r\n              <Icon name=\"archive\" />{\" \"}\r\n              <FormattedMessage id=\"interface.archive\" />\r\n            </Dropdown.Item>\r\n            {deleteDevice && (\r\n              <DeleteDataByIdDialog\r\n                header={<FormattedMessage id={\"string.deleteDeviceHeader\"} />}\r\n                body={\r\n                  <FormattedMessage\r\n                    id={\"string.deleteDeviceBody\"}\r\n                    values={{ device: device.name }}\r\n                  />\r\n                }\r\n                id={device._id}\r\n                resourceName={deviceResource}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nDeviceSettings.propTypes = {\r\n  update: PropTypes.bool.isRequired,\r\n  device: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DeviceSettings;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Divider, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Photos from \"../organisms/Photos\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DeviceView from \"../organisms/DeviceView\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport DeviceSettings from \"../molecules/DeviceSettings\";\r\nimport DocsOrganism from \"../organisms/DocsOrganism\";\r\nimport LogoPhotosHeaders from \"../organisms/LogoPhotosHeaders\";\r\n\r\nconst DeviceViewTemplate = props => {\r\n  const device = props.device;\r\n  const company = props.company;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <LogoPhotosHeaders logo={company.logo} photos={device.photos}/>\r\n        <Divider />\r\n        {device.update && (\r\n          <DeviceSettings update={device.update} device={device} deleteDevice={device.delete} />\r\n        )}\r\n        <div className=\"row stackable\">\r\n          <DeviceView device={device} />\r\n          {device.LatLng && (\r\n            <div className=\"eight wide column\">\r\n              <MapWrapper\r\n                defaultCenter={device.LatLng}\r\n                marker={device.LatLng || null}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {device.documents && device.documents.length > 0 && <DocsOrganism documents={device.documents}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDeviceViewTemplate.propTypes = {\r\n  device: PropTypes.object.isRequired,\r\n  company: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DeviceViewTemplate;\r\n","import React from \"react\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\nimport DeviceViewTemplate from \"../templates/DeviceViewTemplate\";\r\n\r\nconst DeviceViewer = props => {\r\n  const device = props.item;\r\n  const company = device.hub.company;\r\n  return (\r\n    <DeviceViewTemplate\r\n      device={device}\r\n      company={company}\r\n    />\r\n  );\r\n};\r\n\r\nexport default getItemLoader(DeviceViewer, deviceResource);\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\n\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const REQUEST_USERS = \"REQUEST_USERS\";\r\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\r\nexport const RECEIVE_PERMISSIONS = \"RECEIVE_PERMISSIONS\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestUser() {\r\n  return {\r\n    type: REQUEST_USERS\r\n  };\r\n}\r\n\r\nexport function receiveUser(user) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    payload: user\r\n  };\r\n}\r\n\r\nexport function receivePermissions(permissions) {\r\n  return {\r\n    type: RECEIVE_PERMISSIONS,\r\n    payload: permissions\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\nexport function getUser(id) {\r\n  return dispatch => {\r\n    dispatch(requestUser());\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.get(\"users/\" + id, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(\r\n        result => {\r\n          console.log(result);\r\n          if (result.data.ok) {\r\n            dispatch(receiveUser(result.data.result));\r\n          }\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function postPermissions(company, user, CRUD) {\r\n  return dispatch => {\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient\r\n          .post(\r\n            \"permissions/\",\r\n            {\r\n              company: company,\r\n              user: user,\r\n              create: CRUD.create,\r\n              read: CRUD.read,\r\n              update: CRUD.update,\r\n              delete: CRUD.delete\r\n            },\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            }\r\n          )\r\n          .then(result => {\r\n            dispatch(getPermissions(company));\r\n          })\r\n      );\r\n  };\r\n}\r\n\r\nexport function getPermissions(companyId) {\r\n  return dispatch => {\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.get(\"permissions/?company=\" + companyId, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(result => {\r\n        dispatch(receivePermissions(result.data.result));\r\n      });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Checkbox, Header, Icon, Search } from \"semantic-ui-react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { getUser, postPermissions } from \"../actions/permissionsActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PermissionsSearchUser extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      user: false\r\n    };\r\n  }\r\n\r\n  handleResultSelect = (e, { result }) => this.setState({ user: result._id });\r\n\r\n  handleCheckbox = (e, { label, checked }) => {\r\n    this.setState({\r\n      [label]: checked\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { intl } = this.props;\r\n    const getUser = this.props.getUser;\r\n    const postPermissions = this.props.postPermissions;\r\n    const users = this.props.users.map(user => {\r\n      return { title: user.name, image: user.picture, _id: user._id };\r\n    });\r\n    const company = this.props.company;\r\n    return (\r\n      <div className=\"row stackable viewer-block-margin\">\r\n        <div className=\"sixteen wide wide column\">\r\n          <Header as=\"h4\">\r\n            <FormattedMessage id={\"interface.findUserById\"} />\r\n          </Header>\r\n          <Search\r\n            onSearchChange={(e, { value }) => getUser(value)}\r\n            results={users}\r\n            onResultSelect={this.handleResultSelect}\r\n          />\r\n        </div>\r\n        <div className=\"sixteen wide wide column\">\r\n          <Checkbox\r\n            label={intl.formatMessage({ id: \"interface.crudCreate\" })}\r\n            onChange={this.handleCheckbox}\r\n          />\r\n          <Checkbox\r\n            label={intl.formatMessage({ id: \"interface.crudRead\" })}\r\n            onChange={this.handleCheckbox}\r\n          />\r\n          <Checkbox\r\n            label={intl.formatMessage({ id: \"interface.crudUpdate\" })}\r\n            onChange={this.handleCheckbox}\r\n          />\r\n          <Checkbox\r\n            label={intl.formatMessage({ id: \"interface.crudDelete\" })}\r\n            onChange={this.handleCheckbox}\r\n          />\r\n        </div>\r\n        <div className=\"sixteen wide column\">\r\n          <Button\r\n            disabled={!this.state.user}\r\n            type=\"button\"\r\n            onClick={() =>\r\n              postPermissions(company, this.state.user, {\r\n                create: this.state[\"create\"] || false,\r\n                read: this.state[\"read\"] || false,\r\n                update: this.state[\"update\"] || false,\r\n                delete: this.state[\"delete\"] || false\r\n              })\r\n            }\r\n            icon\r\n            labelPosition=\"right\"\r\n            positive\r\n          >\r\n            <FormattedMessage id=\"interface.add\" /> <Icon name=\"save\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.permissionsReducer.users\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getUser: id => dispatch(getUser(id)),\r\n    postPermissions: (company, user, CRUD) =>\r\n      dispatch(postPermissions(company, user, CRUD))\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(PermissionsSearchUser)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Checkbox, Image } from \"semantic-ui-react\";\r\nimport { postPermissions } from \"../actions/permissionsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\n\r\nconst PermissionOrganism = props => {\r\n  const intl = props.intl;\r\n  const permission = props.permission;\r\n  const user = permission.user;\r\n  const postPermission = (p, value) => {\r\n    permission[p] = value;\r\n    props.postPermissions(props.companyId, user, permission);\r\n  };\r\n  console.log(permission);\r\n  // if (!permission) return;\r\n  return (\r\n    <div className={\"middle aligned row\"}>\r\n      <div className=\"column\">\r\n        <Image size=\"tiny\" src={user.picture} />\r\n      </div>\r\n      <div className=\"three wide column\">{user.name}</div>\r\n      <div className=\"ten wide column\">\r\n        <Checkbox\r\n          onChange={() => postPermission(\"create\", !permission.create)}\r\n          label={intl.formatMessage({ id: \"interface.crudCreate\" })}\r\n          checked={permission.create}\r\n        />{\" \"}\r\n        <Checkbox\r\n          onChange={() => postPermission(\"read\", !permission.read)}\r\n          label={intl.formatMessage({ id: \"interface.crudRead\" })}\r\n          checked={permission.read}\r\n        />\r\n        <Checkbox\r\n          onChange={() => postPermission(\"update\", !permission.update)}\r\n          label={intl.formatMessage({ id: \"interface.crudUpdate\" })}\r\n          checked={permission.update}\r\n        />\r\n        <Checkbox\r\n          onChange={() => postPermission(\"delete\", !permission.delete)}\r\n          label={intl.formatMessage({ id: \"interface.crudDelete\" })}\r\n          checked={permission.delete}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPermissionOrganism.propTypes = {\r\n  permission: PropTypes.object.isRequired,\r\n  companyId: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    postPermissions: (company, user, CRUD) =>\r\n      dispatch(postPermissions(company, user, CRUD))\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(PermissionOrganism)\r\n);\r\n","import React from \"react\";\r\nimport PermissionsSearchUser from \"../organisms/PermissionsSearchUser\";\r\nimport PermissionOrganism from \"../organisms/PermissionOrganism\";\r\nimport {Header, Icon} from \"semantic-ui-react\";\r\n\r\nconst PermissionsTemplate = props => {\r\n  const permissions = props.permissions;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"column\">\r\n            <Header as={\"h2\"}><Icon name={\"industry\"}/>{props.companyName}</Header>\r\n          </div>\r\n        </div>\r\n        {permissions.map(permission => (\r\n          <PermissionOrganism\r\n            companyId={props.company}\r\n            key={permission._id}\r\n            permission={permission}\r\n          />\r\n        ))}\r\n        <PermissionsSearchUser company={props.company} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PermissionsTemplate;\r\n","import React, { Component } from \"react\";\r\nimport PermissionsTemplate from \"../templates/PermissionsTemplate\";\r\nimport { getPermissions } from \"../actions/permissionsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\n\r\nclass Permissions extends Component {\r\n  componentDidMount() {\r\n    this.props.getPermissions(this.props.match.params.companyId);\r\n  }\r\n  render() {\r\n    const permissions = this.props.permissions;\r\n    return (\r\n      <>\r\n        {!permissions && <LoadingTemplate />}\r\n        {permissions && permissions.length > 0 && (\r\n          <PermissionsTemplate\r\n            permissions={permissions}\r\n            company={this.props.match.params.companyId}\r\n            companyName={this.props.match.params.companyName}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    permissions: state.permissionsReducer.permissions || []\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPermissions: companyId => dispatch(getPermissions(companyId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Permissions);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Grid, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst UserTemplate = props => {\r\n  const user = props.user;\r\n  const companies = props.companies;\r\n  const logout = props.logout;\r\n  const userId = props.userId;\r\n  return (\r\n    <div className={\"ui container\"}>\r\n      <Grid stackable>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Image src={user.photoURL} size=\"tiny\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={6}>\r\n            <Header as=\"h2\">{user.displayName}</Header>\r\n            Id: {userId}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row columns={4} divided centered>\r\n            {companies.map(company => (\r\n              <Grid.Column style={{fontSize: \"1.4rem\"}} key={company._id}>\r\n                <Link to={\"/r/companies/view/\" + company._id}>\r\n                  {company.name}\r\n                </Link>{\" \"}\r\n                <Link to={\"/r/permissions/\" + company._id + \"/\" + company.name}>\r\n                  <Icon name={\"shield alternate\"} />\r\n                </Link>\r\n              </Grid.Column>\r\n            ))}\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Button\r\n              color=\"green\"\r\n              type=\"button\"\r\n              onClick={() => logout()}\r\n              icon\r\n              labelPosition=\"right\"\r\n            >\r\n              <FormattedMessage id=\"interface.signOut\" />\r\n              <Icon name=\"sign-out\" />\r\n            </Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserTemplate.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  companies: PropTypes.array.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default UserTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { getUserId, logout } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport UserTemplate from \"../templates/UserTemplate\";\r\n\r\nclass User extends Component {\r\n  componentDidMount() {\r\n    this.props.getUserId();\r\n  }\r\n  render() {\r\n    const reducer = this.props.userReducer;\r\n    return (\r\n      <UserTemplate\r\n        user={reducer.user}\r\n        companies={reducer.companies}\r\n        logout={this.props.logout}\r\n        userId={reducer.userId}\r\n      />\r\n    );\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"one column row user\">\r\n            <div className=\"column\">\r\n              <Image\r\n                src={this.props.userReducer.user.photoURL}\r\n                centered\r\n                size=\"tiny\"\r\n              />\r\n            </div>\r\n            <div className=\"column center aligned\">\r\n              <Header as=\"h2\">{this.props.userReducer.user.displayName}</Header>\r\n            </div>\r\n            <div className=\"column center aligned\">\r\n              Id: {this.props.userReducer.userId}\r\n            </div>\r\n            <div className=\"column right aligned\">\r\n              <Button\r\n                color=\"green\"\r\n                type=\"button\"\r\n                onClick={() => this.props.logout()}\r\n                icon\r\n                labelPosition=\"right\"\r\n              >\r\n                <FormattedMessage id=\"interface.signOut\" />\r\n                <Icon name=\"sign-out\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { userReducer: state.userReducer };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n    getUserId: () => dispatch(getUserId())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(User);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flag, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\n\r\nconst AboutUsProfile = props => {\r\n  return (\r\n    <>\r\n      <Image src={props.imageSrc} size=\"small\" circular centered />\r\n      <Header as={\"h5\"}>{props.position}</Header>\r\n      <Header>\r\n        {props.name}{\" \"}\r\n        {props.linkedin && (\r\n          <a href={props.linkedin}>\r\n            <Icon name=\"linkedin\" />\r\n          </a>\r\n        )}\r\n        {props.telegram && (\r\n          <a href={props.telegram}>\r\n            <Icon name=\"telegram\" />\r\n          </a>\r\n        )}\r\n      </Header>\r\n      <span>Location: </span>\r\n      <Flag name={props.flag} />\r\n      <span>{props.location}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nAboutUsProfile.propTypes = {\r\n  imageSrc: PropTypes.string,\r\n  position: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  linkedin: PropTypes.string,\r\n  telegram: PropTypes.string,\r\n  location: PropTypes.string.isRequired,\r\n  flag: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AboutUsProfile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flag, Grid, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport AboutUsProfile from \"../organisms/AboutUsProfile\";\r\n\r\nconst AboutUsTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"twelve wide centered column\">\r\n            <Header as={\"h1\"} textAlign={\"center\"}>\r\n              <FormattedMessage id=\"about_us.title\" />\r\n            </Header>\r\n            <FormattedMessage id=\"about_us.description\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Grid divided>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Header as={\"h3\"} textAlign={\"center\"}>\r\n              <FormattedMessage id=\"about_us.team\" />\r\n            </Header>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={4}>\r\n            <AboutUsProfile\r\n              imageSrc={\r\n                \"https://instagram.fiev15-1.fna.fbcdn.net/vp/dd9779b63516ee8b592d577130aeedaf/5CFE67AA/t51.2885-15/e35/s320x320/12142209_1918743445016611_999285338_n.jpg?_nc_ht=instagram.fiev15-1.fna.fbcdn.net\"\r\n              }\r\n              position={\"Developer\"}\r\n              name={\"Artem Trachuk\"}\r\n              linkedin={\"https://www.linkedin.com/in/artem-trachuk/\"}\r\n              telegram={\"https://t.me/artem_trachuk\"}\r\n              flag={\"ua\"}\r\n              location={\"Odessa, Ukraine\"}\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <AboutUsProfile\r\n              imageSrc={\r\n                \"https://instagram.fiev15-1.fna.fbcdn.net/vp/ae1fface2753302001d27f276748c28f/5CDE193E/t51.2885-15/sh0.08/e35/s640x640/36753575_466378133826623_7677412311144857600_n.jpg?_nc_ht=instagram.fiev15-1.fna.fbcdn.net\"\r\n              }\r\n              position={\"Translator\"}\r\n              name={\"Михаил Пожарников\"}\r\n              linkedin={\"\"}\r\n              telegram={\"\"}\r\n              flag={\"ee\"}\r\n              location={\"Narva, Estonia\"}\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <AboutUsProfile\r\n              imageSrc={\r\n                \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n              }\r\n              position={\"Tester\"}\r\n              name={\"Максим Саенко\"}\r\n              flag={\"ua\"}\r\n              location={\"Odessa, Ukraine\"}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nAboutUsTemplate.propTypes = {};\r\n\r\nexport default AboutUsTemplate;\r\n","import React from \"react\";\r\nimport AboutUsTemplate from \"../templates/AboutUsTemplate\";\r\n\r\nconst AboutUs = () => {\r\n  return <AboutUsTemplate />;\r\n};\r\n\r\nexport default AboutUs;\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Table } from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport getDeviceIcon from \"../helpers/getDeviceIcon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass IpTableTemplate extends Component {\r\n  state = {\r\n    column: null,\r\n    data: this.props.ip,\r\n    direction: null\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.ip !== state.data) {\r\n      return { data: props.ip };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleSort = clickedColumn => () => {\r\n    const { column, data, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        data: _.sortBy(data, [clickedColumn]),\r\n        direction: \"ascending\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      data: data.reverse(),\r\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { column, data, direction } = this.state;\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"row\">\r\n            <Table sortable celled fixed>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell\r\n                    sorted={column === \"ip\" ? direction : null}\r\n                    onClick={this.handleSort(\"ip\")}\r\n                  >\r\n                    <FormattedMessage id={\"interface.ip\"} />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell\r\n                    sorted={column === \"device\" ? direction : null}\r\n                    onClick={this.handleSort(\"device\")}\r\n                  >\r\n                    <FormattedMessage id={\"interface.device\"} />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell\r\n                    sorted={column === \"hub\" ? direction : null}\r\n                    onClick={this.handleSort(\"hub\")}\r\n                  >\r\n                    <FormattedMessage id={\"interface.hub\"} />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell\r\n                    sorted={column === \"company\" ? direction : null}\r\n                    onClick={this.handleSort(\"company\")}\r\n                  >\r\n                    <FormattedMessage id={\"interface.company\"} />\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {_.map(this.props.ip, ({ ip, hub, name, deviceType, _id }) => (\r\n                  <Table.Row key={name}>\r\n                    <Table.Cell>{ip}</Table.Cell>\r\n                    <Table.Cell>\r\n                      <Icon name={getDeviceIcon(deviceType)} />{\" \"}\r\n                      <Link to={\"/r/devices/view/\" + _id}>{name}</Link>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Link to={\"/r/hubs/view/\" + hub._id}>{hub.name}</Link>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Link to={\"/r/companies/view/\" + hub.company._id}>\r\n                        {hub.company.name}\r\n                      </Link>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IpTableTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { companyResource, ipResource } from \"../helpers/resourceNames\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport { getDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorTemplate from \"./Networks\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\nimport IpTableTemplate from \"../organisms/IpTableTemplate\";\r\n\r\nclass IpTable extends Component {\r\n  componentDidMount() {\r\n    this.props.setNavigatedLink(\"iptable\");\r\n    this.props.getDataByAPI(ipResource);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const isFetching = this.props.isFetching;\r\n    const ip = this.props.ip;\r\n    const error = this.props.error;\r\n    const length = ip.length;\r\n    return (\r\n      <>\r\n        {error && <ErrorTemplate />}\r\n        {isFetching && length === 0 && <LoadingTemplate />}\r\n        {!isFetching && length === 0 && <NoDataTemplate />}\r\n        {length > 0 && <IpTableTemplate ip={ip} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const ip = state.dataReducer[ipResource] || [];\r\n  const error = state.issuesReducer.issuesError[ipResource] || null;\r\n  const isFetching = state.dataReducer.isFetching || false;\r\n  return {\r\n    ip,\r\n    error,\r\n    isFetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    },\r\n    getDataByAPI: (resource, id) => {\r\n      dispatch(getDataByAPI(resource, id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IpTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ContactOrganism = props => {\r\n  const contact = props.contact;\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Header as=\"h2\">\r\n        <Icon name=\"user\" />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"interface.humanName\" />\r\n          </Header.Subheader>\r\n          {contact.name}\r\n        </Header.Content>\r\n      </Header>\r\n      <Header as=\"h2\">\r\n        <Icon name=\"phone\" />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"interface.phone\" />\r\n          </Header.Subheader>\r\n          {<a href={\"tel:\" + contact.phone}>{contact.phone}</a>}\r\n        </Header.Content>\r\n      </Header>\r\n      {contact.company && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"industry\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.company\" />\r\n            </Header.Subheader>\r\n            <Link to={\"/r/companies/view/\" + contact.company._id}>\r\n              {contact.company.name}\r\n            </Link>\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {contact.note && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"sticky note\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.note\" />\r\n            </Header.Subheader>\r\n            {contact.note}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactOrganism.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ContactOrganism;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QRCode from \"qrcode.react\";\r\n\r\nconst QrOrganism = props => {\r\n  const contact = props.contact;\r\n  const contactNote = contact.note ? \"NOTE:\" + contact.note + \"\\n\" : \"\";\r\n  const QRCodeValue =\r\n      \"BEGIN:VCARD\\n\" +\r\n      \"VERSION:3.0\\n\" +\r\n      \"ORG:\" +\r\n      contact.company.name +\r\n      \"\\n\" +\r\n      \"FN:\" +\r\n      contact.name +\r\n      \"\\n\" +\r\n      \"TEL;TYPE=WORK,VOICE:\" +\r\n      contact.phone +\r\n      \"\\n\" +\r\n      contactNote +\r\n      \"END:VCARD\";\r\n  return (\r\n      <div className=\"eight wide column center aligned\">\r\n        <QRCode value={QRCodeValue} size={256} />\r\n      </div>\r\n  );\r\n};\r\n\r\nQrOrganism.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default QrOrganism;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport AddContact from \"../organisms/AddContact\";\r\nimport DeleteDataByIdDialog from \"./DeleteDataByIdDialog\";\r\nimport { contactsResource } from \"../helpers/resourceNames\";\r\n\r\nconst ContactSettings = props => {\r\n  const update = props.update;\r\n  const contact = props.contact;\r\n  const deleteContact = props.deleteContact;\r\n  return (\r\n    <div className={\"row\"}>\r\n      <div className=\"column right aligned\">\r\n        <Dropdown\r\n          pointing={\"top right\"}\r\n          item\r\n          icon={{ name: \"wrench\", size: \"big\" }}\r\n        >\r\n          <Dropdown.Menu>\r\n            {update && (\r\n              <AddContact\r\n                initialValues={contact}\r\n                company={contact.company._id}\r\n              />\r\n            )}\r\n            {deleteContact && (\r\n              <DeleteDataByIdDialog\r\n                resourceName={contactsResource}\r\n                id={contact._id}\r\n                header={<FormattedMessage id={\"string.deleteContactHeader\"} />}\r\n                body={\r\n                  <FormattedMessage\r\n                    id={\"string.deleteContactBody\"}\r\n                    values={{ contact: contact.name }}\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactSettings.propTypes = {\r\n  update: PropTypes.bool.isRequired,\r\n  contact: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default ContactSettings;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactOrganism from \"../organisms/ContactOrganism\";\r\nimport QrOrganism from \"../organisms/QrOrganism\";\r\nimport ContactSettings from \"../molecules/ContactSettings\";\r\n\r\nconst ContactTemplate = props => {\r\n  const contact = props.contact;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        {contact.update && (\r\n          <ContactSettings\r\n            deleteContact={contact.delete}\r\n            contact={contact}\r\n            update={contact.update}\r\n          />\r\n        )}\r\n        <div className=\"sixteen wide row stackable\">\r\n          <ContactOrganism contact={contact} />\r\n          <QrOrganism contact={contact} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactTemplate.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ContactTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { fetchContact } from \"../actions/contactsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactTemplate from \"../templates/ContactTemplate\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\n\r\nclass ContactPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContact(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const contact =\r\n      this.props.contacts.find(c => c._id === this.props.match.params.id) ||\r\n      undefined;\r\n    const isFetching = this.props.isFetching;\r\n    return (\r\n      <>\r\n        {!contact && !isFetching && <NoDataTemplate />}\r\n        {!contact && isFetching && <LoadingTemplate />}\r\n        {contact && <ContactTemplate contact={contact} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contactsReducer.contacts || [],\r\n    isFetching: state.contactsReducer.isFetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchContact: id => dispatch(fetchContact(id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContactPage);\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Networks from \"./Networks\";\r\nimport Contacts from \"./Contacts\";\r\nimport CompanyAdder from \"./CompanyAdder\";\r\nimport CompanyEditor from \"./CompanyEditor\";\r\nimport CompanyViewer from \"./CompanyViewer\";\r\nimport HubAdder from \"./HubAdder\";\r\nimport HubEditor from \"./HubEditor\";\r\nimport HubViewer from \"./HubViewer\";\r\nimport DeviceAdder from \"./DeviceAdder\";\r\nimport DeviceEditor from \"./DeviceEditor\";\r\nimport DeviceViewer from \"./DeviceViewer\";\r\nimport Permissions from \"./Permissions\";\r\nimport User from \"./User\";\r\nimport AboutUs from \"./AboutUs\";\r\nimport IpTable from \"./IpTable\";\r\nimport ContactPage from \"./ContactPage\";\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/r/home\" component={Home} />\r\n        <Route path=\"/r/networks\" component={Networks} />\r\n        <Route exact path=\"/r/contacts\" component={Contacts} />\r\n        <Route exact path=\"/r/companies/add\" component={CompanyAdder} />\r\n        <Route exact path=\"/r/companies/edit/:id\" component={CompanyEditor} />\r\n        <Route exact path=\"/r/companies/view/:id\" component={CompanyViewer} />\r\n        <Route\r\n          exact\r\n          path=\"/r/hubs/add/:companyId/:companyName\"\r\n          component={HubAdder}\r\n        />\r\n        <Route exact path=\"/r/hubs/edit/:id\" component={HubEditor} />\r\n        <Route exact path=\"/r/hubs/view/:id\" component={HubViewer} />\r\n        <Route\r\n          exact\r\n          path=\"/r/devices/add/:deviceType/:hubId/:hubName\"\r\n          component={DeviceAdder}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/r/devices/add/:deviceType/:hubId/:hubName/:lat/:lng\"\r\n          component={DeviceAdder}\r\n        />\r\n        <Route exact path=\"/r/devices/edit/:id\" component={DeviceEditor} />\r\n        <Route exact path=\"/r/devices/view/:id\" component={DeviceViewer} />\r\n        <Route path=\"/r/permissions/:companyId/:companyName\" component={Permissions} />\r\n        <Route exact path=\"/r/user\" component={User} />\r\n        <Route path={\"/r/about_us\"} component={AboutUs} />\r\n        <Route exact path={\"/r/iptable\"} component={IpTable} />\r\n        <Route exact path={\"/r/contacts/:id\"} component={ContactPage} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Image, Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\n\r\nclass TopNavigation extends Component {\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ui container\"\r\n        style={{ marginBottom: \"5vh\", marginTop: \"3vh\" }}\r\n      >\r\n        <Menu secondary stackable>\r\n          <Menu.Item>\r\n            <Icon name=\"record\" className=\"blue\" /> <b>Monitor PS</b>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/\"\r\n            name=\"home\"\r\n            active={this.props.navigationReducer.currentLink === \"home\"}\r\n          >\r\n            <Icon name=\"home\" /> <FormattedMessage id=\"interface.home\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/r/networks\"\r\n            name=\"networks\"\r\n            active={this.props.navigationReducer.currentLink === \"networks\"}\r\n          >\r\n            <Icon name=\"server\" /> <FormattedMessage id=\"interface.networks\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/r/iptable\"\r\n            name=\"iptable\"\r\n            active={this.props.navigationReducer.currentLink === \"iptable\"}\r\n          >\r\n            <Icon name=\"terminal\" /> <FormattedMessage id=\"interface.iptable\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/r/contacts\"\r\n            name=\"contacts\"\r\n            active={this.props.navigationReducer.currentLink === \"contacts\"}\r\n          >\r\n            <Icon name=\"address book\" /> <FormattedMessage id=\"interface.contacts\" />\r\n          </Menu.Item>\r\n          {/*<Menu.Item*/}\r\n            {/*disabled*/}\r\n            {/*as={Link}*/}\r\n            {/*to=\"/r/documents\"*/}\r\n            {/*name=\"documents\"*/}\r\n            {/*active={this.props.navigationReducer.currentLink === \"documents\"}*/}\r\n          {/*>*/}\r\n            {/*<Icon name=\"file pdf\" />{\" \"}*/}\r\n            {/*<FormattedMessage id=\"companyEditor.documents\" />*/}\r\n          {/*</Menu.Item>*/}\r\n          <Menu.Menu position=\"right\">\r\n            {this.props.displayName && (\r\n              <>\r\n                <Menu.Item as={Link} to=\"/r/user\">\r\n                  <Image src={this.props.photo} avatar />\r\n                  {this.props.displayName}\r\n                </Menu.Item>\r\n                {/*<Menu.Item onClick={this.props.signOut}>*/}\r\n                {/*<Icon name=\"sign-out\" /> <FormattedMessage id=\"interface.signOut\" />*/}\r\n                {/*</Menu.Item>*/}\r\n              </>\r\n            )}\r\n          </Menu.Menu>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    navigationReducer: state.navigationReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TopNavigation)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Flag } from \"semantic-ui-react\";\r\nimport { changeLanguage } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { injectIntl } from \"react-intl\";\r\n\r\nconst LanguageDropdown = props => {\r\n  const { intl } = props;\r\n  const onLanguageChange = language => {\r\n    props.changeLanguage(language);\r\n  };\r\n  return (\r\n    <Dropdown floating text={intl.formatMessage({ id: \"interface.language\" })}>\r\n      <Dropdown.Menu>\r\n        <Dropdown.Header>America</Dropdown.Header>\r\n        <Dropdown.Item onClick={() => onLanguageChange(\"en-US\")}>\r\n          <Flag name=\"us\" />\r\n          English (US)\r\n        </Dropdown.Item>\r\n        <Dropdown.Header>Europe</Dropdown.Header>\r\n        <Dropdown.Item disabled onClick={() => onLanguageChange(\"ee\")}>\r\n          <Flag name=\"ee\" />\r\n          Eesti\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={() => onLanguageChange(\"en-GB\")}>\r\n          <Flag name=\"gb\" />\r\n          English (UK)\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={() => onLanguageChange(\"uk\")}>\r\n          <Flag name=\"ua\" />\r\n          Українська\r\n        </Dropdown.Item>\r\n        <Dropdown.Header>Asia</Dropdown.Header>\r\n        <Dropdown.Item onClick={() => onLanguageChange(\"ru\")}>\r\n          <Flag name=\"ru\" />\r\n          Русский\r\n        </Dropdown.Item>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeLanguage: language => {\r\n      dispatch(changeLanguage(language));\r\n    }\r\n  };\r\n};\r\n\r\nLanguageDropdown.propTypes = {};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    null,\r\n    mapDispatchToProps\r\n  )(LanguageDropdown)\r\n);\r\n","import React from 'react';\r\nimport {Grid} from \"semantic-ui-react\";\r\n\r\nconst DevelopedBy = () => {\r\n  return (\r\n      <Grid columns={1}>\r\n        <Grid.Row>\r\n          <Grid.Column textAlign=\"right\">\r\n            <span className={\"developed-by\"}>\r\n              Developed by private entrepreneur{\" \"}\r\n              <a rel=\"noopener noreferrer\"\r\n                 href=\"https://www.linkedin.com/in/artem-trachuk/\"\r\n                 target=\"_blank\"\r\n              >\r\n                Artem Trachuk\r\n              </a>{\" \"}\r\n              in Ukraine\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default DevelopedBy;","import React, { Component } from \"react\";\r\nimport Now from \"../now.png\";\r\nimport Messenger from \"../images/Messenger.png\";\r\nimport Telegram from \"../images/Telegram.png\";\r\nimport {\r\n  Divider,\r\n  Dropdown,\r\n  Flag,\r\n  Grid,\r\n  Icon,\r\n  Image,\r\n  List\r\n} from \"semantic-ui-react\";\r\nimport { changeLanguage } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LanguageDropdown from \"../molecules/LanguageDropdown\";\r\nimport DevelopedBy from \"../molecules/DevelopedBy\";\r\n\r\nclass BottomNavigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onLanguageChange = this.onLanguageChange.bind(this);\r\n    this.state = {\r\n      language: props.user.language\r\n    };\r\n  }\r\n  onLanguageChange = language => {\r\n    this.props.changeLanguage(language);\r\n  };\r\n  render() {\r\n    const { intl } = this.props;\r\n    return (\r\n      <div className=\"ui container bottom-navigation\">\r\n        <Grid columns='equal'>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <LanguageDropdown />\r\n            </Grid.Column>\r\n            <Grid.Column width={8} />\r\n            <Grid.Column textAlign=\"right\">\r\n              <a\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                href={\"https://m.me/100016534417211\"}\r\n              >\r\n                <Image\r\n                  id={\"messenger-bottom\"}\r\n                  className={\"footer-messenger-image\"}\r\n                  src={Messenger}\r\n                  alt=\"Messenger\"\r\n                />\r\n              </a>\r\n              <a\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                href={\"https://t.me/artem_trachuk\"}\r\n              >\r\n                <Image\r\n                  id={\"telegram-bottom\"}\r\n                  className={\"footer-messenger-image\"}\r\n                  src={Telegram}\r\n                  alt=\"Telegram\"\r\n                />\r\n              </a>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <DevelopedBy/>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: \"10vh\" }}>\r\n        <div className=\"ui grid\">\r\n          <div className=\"middle aligned stackable row\">\r\n            <div className=\"three wide column\">\r\n              <Dropdown\r\n                floating\r\n                text={intl.formatMessage({ id: \"interface.language\" })}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Header>America</Dropdown.Header>\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"en-US\")}>\r\n                    <Flag name=\"us\" />\r\n                    English (US)\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Header>Europe</Dropdown.Header>\r\n                  {/*<Dropdown.Item onClick={() => this.onLanguageChange(\"ee\")}>*/}\r\n                  {/*<Flag name=\"ee\" />*/}\r\n                  {/*Eesti*/}\r\n                  {/*</Dropdown.Item>*/}\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"en-GB\")}>\r\n                    <Flag name=\"gb\" />\r\n                    English (UK)\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"uk\")}>\r\n                    <Flag name=\"ua\" />\r\n                    Українська\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Header>Asia</Dropdown.Header>\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"ru\")}>\r\n                    <Flag name=\"ru\" />\r\n                    Русский\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n            <div className=\"six wide column center aligned\">\r\n              <List bulleted horizontal link>\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"bullhorn\" /> Newsroom*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"bug\" /> <FormattedMessage id=\"interface.reportbug\" />*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"github\" /> GitHub*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as={Link} to={\"/r/about_us\"}>*/}\r\n                {/*<Icon name=\"users\" /> <FormattedMessage id=\"about_us.title\" />*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"heart outline\" /> Donate*/}\r\n                {/*</List.Item>*/}\r\n              </List>\r\n            </div>\r\n            <div className=\"two wide column center aligned\">\r\n              <a target=\"_blank\" href={\"http://m.me/100016534417211\"}>\r\n                <Image\r\n                  className={\"viewerLogo\"}\r\n                  src={Messenger}\r\n                  alt=\"Messenger\"\r\n                />\r\n              </a>\r\n            </div>\r\n            <div className=\"two wide column center aligned\">\r\n              <a target=\"_blank\" href={\"http://t.me/artem_trachuk\"}>\r\n                <Image className={\"viewerLogo\"} src={Telegram} alt=\"Telegram\" />\r\n              </a>\r\n            </div>\r\n            <div className=\"three wide column right aligned column\">\r\n              <img src={Now} alt=\"Ukraine Now\" className=\"ukraine_now_logo\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { user: state.userReducer };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeLanguage: language => {\r\n      dispatch(changeLanguage(language));\r\n    }\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BottomNavigation)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Header, Image, Modal } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\n\r\nconst GuestPhotosColumn = props => {\r\n  return (\r\n    <Grid.Column className={\"guest-photos-column\"} textAlign=\"center\">\r\n      <Modal\r\n        trigger={\r\n          <Image className={\"guest-photo-image\"} centered src={props.preview} />\r\n        }\r\n        basic\r\n        size=\"small\"\r\n        closeIcon\r\n      >\r\n        <Modal.Content>\r\n          <Image fluid src={props.src} />\r\n        </Modal.Content>\r\n      </Modal>\r\n      <Header as={\"h3\"} style={{color: \"#3ac0ff\"}}>{props.text}</Header>\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nGuestPhotosColumn.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  preview: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default GuestPhotosColumn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Divider, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport GuestPhotosColumn from \"../molecules/GuestPhotosColumn\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\n\r\nconst GuestPhotos = props => {\r\n  return (\r\n    <div className={\"guest-photos\"}>\r\n      <Grid className={\"guest-photos\"} relaxed columns={3} centered stackable>\r\n        <GuestPhotosColumn\r\n          preview={serverURL + \"guest/card1preview.png\"}\r\n          src={serverURL + \"guest/card1.png\"}\r\n          text={<FormattedMessage id={\"string.guestCard1\"} />}\r\n        />\r\n        <GuestPhotosColumn\r\n          preview={serverURL + \"guest/card2preview.png\"}\r\n          src={serverURL + \"guest/card2.png\"}\r\n          text={<FormattedMessage id={\"string.guestCard2\"} />}\r\n        />\r\n        <GuestPhotosColumn\r\n          preview={serverURL + \"guest/card3preview.png\"}\r\n          src={serverURL + \"guest/card3.png\"}\r\n          text={<FormattedMessage id={\"string.guestCard3\"} />}\r\n        />\r\n        <GuestPhotosColumn\r\n          preview={serverURL + \"guest/card4preview.png\"}\r\n          src={serverURL + \"guest/card4.png\"}\r\n          text={<FormattedMessage id={\"string.guestCard4\"} />}\r\n        />\r\n        <GuestPhotosColumn\r\n            preview={serverURL + \"guest/card5p.png\"}\r\n            src={serverURL + \"guest/card5.png\"}\r\n          text={<FormattedMessage id={\"string.guestCard5\"} />}\r\n        />\r\n        <GuestPhotosColumn\r\n          preview={serverURL + \"guest/card6preview.png\"}\r\n          src={serverURL + \"guest/card6.png\"}\r\n          text={<FormattedMessage id={\"string.guestCard6\"} />}\r\n        />\r\n        <GuestPhotosColumn\r\n          preview={serverURL + \"guest/card7preview.png\"}\r\n          src={serverURL + \"guest/card7.png\"}\r\n          text={<FormattedMessage id={\"string.guestCard7\"} />}\r\n        />\r\n        <GuestPhotosColumn\r\n          preview={serverURL + \"guest/card8pr.png\"}\r\n          src={serverURL + \"guest/card8.png\"}\r\n          text={<FormattedMessage id={\"string.guestCard8\"} />}\r\n        />\r\n        <GuestPhotosColumn\r\n            preview={serverURL + \"guest/card9p.png\"}\r\n            src={serverURL + \"guest/card9.png\"}\r\n          text={<FormattedMessage id={\"string.guestCard9\"} />}\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuestPhotos.propTypes = {};\r\n\r\nexport default GuestPhotos;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {FormattedMessage} from \"react-intl\";\r\nimport GuestPhotos from \"../organisms/GuestPhotos\";\r\nimport {Header, Icon} from \"semantic-ui-react\";\r\n\r\nconst GuestTemplate = props => {\r\n  return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"sixteen wide column center aligned\">\r\n            <Header as=\"h1\">\r\n              <Icon name=\"record\" className=\"blue\" /> Monitor PS\r\n            </Header>\r\n            <Header as=\"h3\">\r\n              <FormattedMessage id={\"string.guestMessage\"}/>\r\n            </Header>\r\n          </div>\r\n        </div>\r\n        <GuestPhotos />\r\n      </div>\r\n  );\r\n};\r\n\r\nGuestTemplate.propTypes = {\r\n\r\n};\r\n\r\nexport default GuestTemplate;","import React, { Component } from \"react\";\r\nimport {Divider, Header, Icon} from \"semantic-ui-react\";\r\nimport GuestPhotos from \"../organisms/GuestPhotos\";\r\nimport GuestTemplate from \"../templates/GuestTemplate\";\r\n\r\nclass Guest extends Component {\r\n  render() {\r\n    return <GuestTemplate/>\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"sixteen wide column center aligned\">\r\n            <Header as=\"h1\">\r\n              <Icon name=\"record\" className=\"green\" /> Monitor PS\r\n            </Header>\r\n            <Header as=\"h4\">\r\n              Tool for installed surveillance devices monitoring. We will help\r\n              you to keep the networks be structured and categorized.\r\n            </Header>\r\n          </div>\r\n          <div className=\"sixteen wide column\">{this.props.auth}</div>\r\n        </div>\r\n        <div className=\"sixteen wide column\">\r\n          <span>share access with co-workers</span>\r\n          <span>\r\n            don't rely on multiple text documents, chat history or even your\r\n            memory\r\n          </span>\r\n          <span>track issues</span>\r\n          <span>all your networks in one place</span>\r\n          <span>save locations, photos, documents</span>\r\n        </div>\r\n        <GuestPhotos />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Guest;\r\n","import React from \"react\";\r\nimport AboutUs from \"../pages/AboutUs\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport Guest from \"../pages/Guest\";\r\n\r\nconst UnprotectedRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={\"/\"} component={Guest} />\r\n      <Route path={\"/r/about_us\"} component={AboutUs} />\r\n      <Route component={Guest} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default UnprotectedRoutes;\r\n","import React from \"react\";\r\nimport { Icon, Label, Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LanguageDropdown from \"../molecules/LanguageDropdown\";\r\n\r\nconst GuestTopBar = props => {\r\n  return (\r\n    <div\r\n      className=\"ui container\"\r\n      style={{ marginBottom: \"5vh\", marginTop: \"3vh\" }}\r\n    >\r\n      <Menu secondary stackable>\r\n        <Menu.Item as={Link} to=\"/\">\r\n          <Icon name=\"record\" className=\"blue\" /> <b>Monitor PS</b>\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item>{props.auth}</Menu.Item>\r\n        </Menu.Menu>\r\n        <Menu.Item>\r\n          <LanguageDropdown />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuestTopBar.propTypes = {};\r\n\r\nexport default GuestTopBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Image } from \"semantic-ui-react\";\r\nimport Messenger from \"../images/Messenger.png\";\r\nimport Telegram from \"../images/Telegram.png\";\r\nimport Now from \"../now.png\";\r\nimport DevelopedBy from \"../molecules/DevelopedBy\";\r\n\r\nconst GuestFooter = props => {\r\n  return (\r\n    <div className={\"ui container\"}>\r\n      <Grid verticalAlign=\"middle\" columns={2} divided stackable>\r\n        <Grid.Row>\r\n          <Grid.Column textAlign=\"right\">\r\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://m.me/100016534417211\"}>\r\n              <Image\r\n                id={\"messenger-guest\"}\r\n                className={\"footer-messenger-image\"}\r\n                src={Messenger}\r\n                alt=\"Messenger\"\r\n              />\r\n            </a>\r\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href={\"https://t.me/artem_trachuk\"}>\r\n              <Image\r\n                id={\"telegram-guest\"}\r\n                className={\"footer-messenger-image\"}\r\n                src={Telegram}\r\n                alt=\"Telegram\"\r\n              />\r\n            </a>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Image id={\"ukraine-now-guest\"} src={Now} alt=\"Ukraine Now\" />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n      <DevelopedBy/>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuestFooter.propTypes = {};\r\n\r\nexport default GuestFooter;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// react-router\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// redux\nimport { connect } from \"react-redux\";\n// components\nimport Routes from \"./pages/Routes\";\nimport {\n  getDefaultCenterFromUserAgent,\n  login,\n  logout,\n  updateUser\n} from \"./actions/userActions\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport TopNavigation from \"./organisms/TopNavigation\";\n// react-intl\nimport { FormattedMessage, IntlProvider } from \"react-intl\";\nimport { addLocaleData } from \"react-intl\";\nimport en from \"react-intl/locale-data/en\";\nimport uk from \"react-intl/locale-data/uk\";\nimport ru from \"react-intl/locale-data/ru\";\nimport messages_uk from \"./locales/uk\";\nimport messages_en from \"./locales/en\";\nimport messages_ru from \"./locales/ru\";\n// Import FirebaseAuth and firebase.\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport ErrorTemplate from \"./templates/ErrorTemplate\";\nimport BottomNavigation from \"./organisms/BottomNavigation\";\nimport UnprotectedRoutes from \"./helpers/UnprotectedRoutes\";\nimport GuestTopBar from \"./organisms/GuestTopBar\";\nimport GuestFooter from \"./organisms/GuestFooter\";\n\n// Configure Firebase.\nconst config = {\n  apiKey: \"AIzaSyAFo_lb3m4A7-PmXuahyeVD3xhGdCZGJi8\",\n  authDomain: \"monitor-ps.firebaseapp.com\",\n  databaseURL: \"https://monitor-ps.firebaseio.com\",\n  projectId: \"monitor-ps\",\n  storageBucket: \"monitor-ps.appspot.com\",\n  messagingSenderId: \"497412012279\"\n};\n\nfirebase.initializeApp(config);\n\naddLocaleData([...en, ...uk, ...ru]);\n\nconst messages = {\n  uk: messages_uk,\n  \"en-US\": messages_en,\n  \"en-GB\": messages_en,\n  ru: messages_ru\n};\n\n// TODO bookmarks, tags\n\nclass App extends Component {\n  // The component's Local state.\n  state = {\n    isSignedIn: false, // Local signed-in state.,\n    hasError: false\n  };\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error: error };\n  }\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n      this.props.updateUser(user);\n      if (user) {\n        this.props.login();\n        this.props.getDefaultCenterFromUserAgent();\n      }\n    });\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    const user = this.props.userR.user;\n    let view = <></>;\n    if (this.state.hasError || this.props.userR.error) {\n      view = (\n        <ErrorTemplate error={this.state.hasError || this.props.userR.error} />\n      );\n    } else if (user === undefined) {\n      view = (\n        <div className=\"ui container\">\n          <Dimmer active inverted>\n            <Loader size=\"large\">\n              <FormattedMessage id={\"interface.loading\"} />\n            </Loader>\n          </Dimmer>\n        </div>\n      );\n    } else if (user === null) {\n      view = (\n        <>\n          <GuestTopBar\n            auth={\n              <StyledFirebaseAuth\n                uiConfig={this.uiConfig}\n                firebaseAuth={firebase.auth()}\n              />\n            }\n          />\n          {/*<Guest*/}\n          {/*auth={*/}\n          {/*<StyledFirebaseAuth*/}\n          {/*uiConfig={this.uiConfig}*/}\n          {/*firebaseAuth={firebase.auth()}*/}\n          {/*/>*/}\n          {/*}*/}\n          {/*/>*/}\n          <div style={{ flexGrow: 1 }}>\n            <UnprotectedRoutes />\n          </div>\n          {/*<BottomNavigation />*/}\n          <GuestFooter />\n        </>\n      );\n    } else if (user && this.props.userR.isLoggedIn) {\n      view = (\n        <>\n          <TopNavigation\n            displayName={this.props.userR.user.displayName}\n            photo={this.props.userR.user.photoURL}\n            signOut={this.props.logout}\n          />\n          <div style={{ flexGrow: 1 }}>\n            <Routes />\n          </div>\n          <BottomNavigation />\n        </>\n      );\n    }\n    return (\n      <IntlProvider\n        textComponent={React.Fragment}\n        locale={this.props.userR.language}\n        messages={messages[this.props.userR.language]}\n      >\n        <Router>\n          <>{view}</>\n        </Router>\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userR: state.userReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: name => {\n      dispatch(updateUser(name));\n    },\n    login: () => {\n      dispatch(login());\n    },\n    logout: () => {\n      dispatch(logout());\n    },\n    getDefaultCenterFromUserAgent: () => {\n      dispatch(getDefaultCenterFromUserAgent());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport dataReducer from \"./reducers/dataReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { issuesReducer } from \"./reducers/issuesReducer\";\r\nimport { navigationReducer } from \"./reducers/navigationReducer\";\r\nimport contactsReducer from \"./reducers/contactsReducer\";\r\nimport { permissionsReducer } from \"./reducers/permissionsReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    userReducer: userReducer,\r\n    dataReducer: dataReducer,\r\n    form: formReducer,\r\n    issuesReducer: issuesReducer,\r\n    navigationReducer: navigationReducer,\r\n    contactsReducer: contactsReducer,\r\n    permissionsReducer: permissionsReducer\r\n  }),\r\n  {},\r\n  applyMiddleware(thunkMiddleware, logger)\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  SET_DEFAULT_CENTER,\r\n  SET_ERROR,\r\n  SET_IS_LOGGED,\r\n  SET_USER_COMPANIES,\r\n  SET_USER_ID,\r\n  UPDATE_USER\r\n} from \"../actions/userActions\";\r\n\r\nexport default function userReducer(\r\n  state = {\r\n    language: localStorage.getItem(\"Language\") || \"en-US\",\r\n    user: undefined,\r\n    error: null,\r\n    isLoggedIn: false,\r\n    defaultCenter: null,\r\n    userId: \"\",\r\n    companies: []\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      state = {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n      break;\r\n    case SET_ERROR:\r\n      state = {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n      break;\r\n    case SET_IS_LOGGED:\r\n      state = {\r\n        ...state,\r\n        isLoggedIn: true\r\n      };\r\n      break;\r\n    case \"CHANGE_LANGUAGE\":\r\n      if (typeof Storage !== \"undefined\") {\r\n        localStorage.setItem(\"Language\", action.payload);\r\n      }\r\n      state = {\r\n        ...state,\r\n        language: action.payload\r\n      };\r\n      break;\r\n    case SET_DEFAULT_CENTER:\r\n      state = {\r\n        ...state,\r\n        defaultCenter: action.payload\r\n      };\r\n      break;\r\n    case SET_USER_ID:\r\n      state = {\r\n        ...state,\r\n        userId: action.payload\r\n      };\r\n      break;\r\n    case SET_USER_COMPANIES:\r\n      state = {\r\n        ...state,\r\n        companies: action.payload\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","import {\r\n  DELETE_ITEM,\r\n  RECEIVE_ITEM,\r\n  RECEIVE_ITEMS,\r\n  REQUEST_API\r\n} from \"../actions/dataActions\";\r\n\r\nexport default function dataReducer(state = { isFetching: false }, action) {\r\n  let items = [];\r\n  switch (action.type) {\r\n    case RECEIVE_ITEMS:\r\n      if (state[action.resource]) {\r\n        items = [...state[action.resource]];\r\n        if (action.payload.length === 0) {\r\n          items = [];\r\n        } else {\r\n          // action.payload.forEach(item => {\r\n          //   const index = items.findIndex(i => i._id === item._id);\r\n          //   if (index === -1) {\r\n          //     items.push(item);\r\n          //   } else {\r\n          //     items[index] = { ...items[index], ...item };\r\n          //   }\r\n          // });\r\n          items = action.payload;\r\n        }\r\n      } else {\r\n        items = action.payload;\r\n      }\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        [action.resource]: items\r\n      };\r\n    case RECEIVE_ITEM:\r\n      if (state[action.resource]) {\r\n        items = [...state[action.resource]];\r\n        const index = items.findIndex(i => i._id === action.payload._id);\r\n        index === -1\r\n          ? items.push(action.payload)\r\n          : (items[index] = action.payload);\r\n      } else {\r\n        items.push(action.payload);\r\n      }\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        [action.resource]: items\r\n      };\r\n    case REQUEST_API:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        [action.resource]: state[action.resource].filter(\r\n          i => i._id !== action.id\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_ISSUES_ERROR,\r\n  RECEIVE_ISSUES,\r\n  REQUEST_ISSUES\r\n} from \"../actions/issuesActions\";\r\n\r\nexport function issuesReducer(\r\n  state = { isIssuesFetching: {}, issuesError: {} },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REQUEST_ISSUES:\r\n      return {\r\n        ...state,\r\n        isIssuesFetching: { [action.payload]: true }\r\n      };\r\n    case SET_ISSUES_ERROR:\r\n      return {\r\n        ...state,\r\n        isIssuesFetching: { [action.payload.resource]: false },\r\n        issuesError: { [action.payload.resource]: action.payload.error }\r\n      };\r\n    case RECEIVE_ISSUES:\r\n      return {\r\n        ...state,\r\n        isIssuesFetching: { [action.payload.resource]: false },\r\n        [action.payload.resource]: action.payload.data,\r\n        issuesError: { [action.payload.resource]: undefined }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_NAVIGATED_LINK } from \"../actions/navigationActions\";\r\n\r\nexport function navigationReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_NAVIGATED_LINK:\r\n      state = {\r\n        ...state,\r\n        currentLink: action.payload\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","import {\r\n  RECEIVE_CONTACT,\r\n  RECEIVE_CONTACTS,\r\n  REMOVE_CONTACT,\r\n  REQUEST_CONTACTS,\r\n  SET_CONTACTS_ERROR\r\n} from \"../actions/contactsActions\";\r\n\r\nexport default function contacts(\r\n  state = { isFetching: false, contacts: [], error: null },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REQUEST_CONTACTS:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case RECEIVE_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        isFetching: false,\r\n        error: null\r\n      };\r\n    case SET_CONTACTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n    case RECEIVE_CONTACT:\r\n      const contactsCopy = [...state.contacts];\r\n      const contactIndex = contactsCopy.findIndex(\r\n        c => c._id === action.payload._id\r\n      );\r\n      if (contactIndex !== -1) {\r\n        contactsCopy[contactIndex] = action.payload;\r\n      } else {\r\n        contactsCopy.push(action.payload);\r\n      }\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        contacts: contactsCopy\r\n      };\r\n    case REMOVE_CONTACT:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        contacts: state.contacts.filter(c => c._id !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  RECEIVE_PERMISSIONS,\r\n  RECEIVE_USERS,\r\n  REQUEST_USERS\r\n} from \"../actions/permissionsActions\";\r\n\r\nexport function permissionsReducer(\r\n  state = { users: [], permissions: [] },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REQUEST_USERS:\r\n      return {\r\n        ...state\r\n      };\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        users: [action.payload]\r\n      };\r\n    case RECEIVE_PERMISSIONS:\r\n      return {\r\n        ...state,\r\n        permissions: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// redux\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxStore\";\n// styles\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}