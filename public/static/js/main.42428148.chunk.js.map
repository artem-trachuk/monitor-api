{"version":3,"sources":["warehouseSolid.svg","now.png","helpers/serverURL.js","axiosInstance.js","actions/issuesActions.js","actions/navigationActions.js","templates/LoadingTemplate.js","organisms/HomeIssue.js","organisms/MapWrapper.js","templates/HomeTemplate.js","templates/NoDataTemplate.js","templates/ErrorTemplate.js","pages/Home.js","helpers/resourceNames.js","actions/dataActions.js","molecules/CompanyHub.js","organisms/NetworksCompany.js","templates/NetworksTemplate.js","pages/Networks.js","molecules/Contact.js","templates/ContactsTemplate.js","actions/contactsActions.js","pages/Contacts.js","HOCs/Editor.js","helpers/editorReduxFormName.js","molecules/renderField.js","helpers/reduxFormValidators.js","molecules/FileInputField.js","organisms/CompanyEditForm.js","molecules/CompanyAddHeader.js","pages/CompanyAdder.js","HOCs/ItemLoader.js","molecules/CompanyEditHeader.js","pages/CompanyEditor.js","organisms/Photos.js","organisms/CompanyView.js","organisms/AddContact.js","molecules/CompanySettings.js","organisms/CompanyContacts.js","templates/CompanyViewTemplate.js","pages/CompanyViewer.js","organisms/HubEditForm.js","pages/HubAdder.js","pages/HubEditor.js","molecules/CompanyPopup.js","organisms/HubDevices.js","organisms/HubView.js","molecules/HubSettings.js","helpers/Load.js","molecules/CommentReplyForm.js","organisms/Issues.js","templates/HubViewTemplate.js","pages/HubViewer.js","helpers/getDeviceIcon.js","organisms/DeviceEditForm.js","pages/DeviceAdder.js","pages/DeviceEditor.js","organisms/DeviceView.js","molecules/DeviceSettings.js","templates/DeviceViewTemplate.js","pages/DeviceViewer.js","actions/permissionsActions.js","organisms/PermissionsSearchUser.js","templates/PermissionsTemplate.js","pages/Permissions.js","actions/userActions.js","pages/User.js","organisms/AboutUsProfile.js","templates/AboutUsTemplate.js","pages/AboutUs.js","pages/Routes.js","pages/Guest.js","organisms/TopNavigation.js","organisms/BottomNavigation.js","helpers/UnprotectedRoutes.js","organisms/GuestTopBar.js","App.js","serviceWorker.js","reducers/contactsReducer.js","reduxStore.js","reducers/userReducer.js","reducers/dataReducer.js","reducers/issuesReducer.js","reducers/navigationReducer.js","reducers/permissionsReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","serverURL","axiosHttpClient","axios","create","baseURL","REQUEST_ISSUES","SET_ISSUES_ERROR","RECEIVE_ISSUES","requestIssues","resource","type","payload","setIssuesError","error","receiveIssues","data","byWhat","getIssues","id","dispatch","getState","firebase","auth","currentUser","getIdToken","then","idToken","get","headers","Authorization","result","SET_NAVIGATED_LINK","setNavigatedLink","link","LoadingTemplate","props","react_default","a","createElement","className","Loader","active","inline","size","HomeIssue","issue","Comment","Avatar","src","user","picture","Content","Author","as","name","Metadata","Icon","Link","to","company","_id","hub","Text","message","MapWrapper","compose","withProps","googleMapURL","userR","language","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","warehouse","scaledSize","width","url","warehouseSolid","input","_props$input","value","onChange","lib","mapTypeId","onClick","e","lat","latLng","lng","defaultZoom","defaultCenter","marker","position","markers","map","Fragment","key","LatLng","icon","connect","state","userReducer","HomeTemplate","Header","index_es","description","values","displayName","Group","issues","organisms_HomeIssue","organisms_MapWrapper","filter","i","NoDataTemplate","color","children","ErrorTemplate","Home","this","isFetching","length","templates_ErrorTemplate","templates_LoadingTemplate","templates_NoDataTemplate","templates_HomeTemplate","Component","issuesReducer","isIssuesFetching","issuesError","companyResource","deviceResource","RECEIVE_ITEMS","RECEIVE_ITEM","REQUEST_API","getDataByAPI","item","receiveItem","items","receiveItems","CompanyHub","marginBottom","Card","raised","Popup","trigger","Label","ribbon","one","other","count","content","Description","List","bulleted","horizontal","devices","Item","d","deviceType","equipment","NetworksCompany","logo","Image","hubs","molecules_CompanyHub","Button","Divider","NetworksTemplate","companies","organisms_NetworksCompany","Networks","dataReducer","templates_NetworksTemplate","loadingReducer","Contact","showCompany","contact","contactNote","note","QRCodeValue","phone","Grid","verticalAlign","Column","floated","textAlign","Modal","qrcode_react_lib_default","Subheader","href","ContactsTemplate","itemsPerRow","contacts","molecules_Contact","REQUEST_CONTACTS","RECEIVE_CONTACTS","SET_CONTACTS_ERROR","fetchContacts","setContactsError","Contacts","allContacts","templates_ContactsTemplate","contactsReducer","Editor","_this","_this$props","pristine","submitting","handleSubmit","undefined","currentLink","Redirect","Form","onSubmit","patchData","postData","header","Field","component","initialValues","labelPosition","positive","disabled","navigationReducer","formData","FormData","photos","append","documents","JSON","stringify","Object","assign","objectSpread","post","content-type","postDataByAPI","resourceName","patch","patchDataByAPI","reduxForm","form","renderField","_ref","label","iconPosition","_ref$meta","meta","touched","warning","Input","placeholder","basic","pointing","requiredValidator","FileInputField","text","htmlFor","hidden","multiple","accept","target","files","CompanyEditForm","validate","rows","inputField","CompanyAddHeader","CompanyAdder","HOCs_Editor","molecules_CompanyAddHeader","organisms_CompanyEditForm","getItemLoader","WrappedComponent","ItemLoader","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","match","params","find","CompanyEditHeader","molecules_CompanyEditHeader","Photos","photo","path","fluid","closeIcon","originalname","CompanyView","doc","address","email","AddContact","context","call","open","setState","close","submitForm","addContact","onOpen","onClose","Dropdown","injectIntl","CompanySettings","Menu","organisms_AddContact","isOwner","CompanyContacts","CompanyViewTemplate","CRUD","organisms_Photos","update","molecules_CompanySettings","organisms_CompanyView","organisms_CompanyContacts","templates_CompanyViewTemplate","HubEditForm","HubAdder","companyId","organisms_HubEditForm","CompanyPopup","HubDevices","getListItem","cameras","c","recorders","r","netdevs","n","HubView","flowing","hoverable","molecules_CompanyPopup","organisms_HubDevices","HubSettings","Load","CommentReplyForm","show","reply","checked","handleIssueForm","bind","assertThisInitialized","_this2","intl","Actions","Action","TextArea","sendIssue","formatMessage","primary","Checkbox","Issues","handleCheckbox","collapsed","view","helpers_Load","toString","comments","comment","date","molecules_CommentReplyForm","replies","threaded","_ref2","issueId","HubViewTemplate","molecules_HubSettings","organisms_HubView","organisms_Issues","templates_HubViewTemplate","getDeviceIcon","selector","formValueSelector","iconName","DeviceAdder","hubId","organisms_DeviceEditForm","device","DeviceView","ptz","ip","react_copy_to_clipboard_lib","serial","DeviceSettings","DeviceViewTemplate","molecules_DeviceSettings","organisms_DeviceView","templates_DeviceViewTemplate","REQUEST_USERS","RECEIVE_USERS","getUser","console","log","ok","PermissionsSearchUser","handleResultSelect","defineProperty","postPermissions","users","title","image","Search","onSearchChange","_ref3","results","onResultSelect","read","delete","permissionsReducer","PermissionsTemplate","organisms_PermissionsSearchUser","Permissions","templates_PermissionsTemplate","UPDATE_USER","SET_ERROR","SET_IS_LOGGED","SET_DEFAULT_CENTER","SET_USER_ID","setError","setIsLogged","isLogged","setDefaultCenter","logout","signOut","catch","getUserId","User","photoURL","centered","userId","AboutUsProfile","imageSrc","circular","linkedin","telegram","Flag","flag","location","AboutUsTemplate","divided","Row","organisms_AboutUsProfile","AboutUs","templates_AboutUsTemplate","Routes","Route","exact","CompanyEditor","CompanyViewer","HubEditor","HubViewer","DeviceEditor","DeviceViewer","Guest","TopNavigation","handleItemClick","activeItem","marginTop","secondary","stackable","avatar","BottomNavigation","onLanguageChange","changeLanguage","floating","Now","alt","UnprotectedRoutes","GuestTopBar","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","addLocaleData","concat","toConsumableArray","en","uk","messages","messages_uk","en-US","messages_en","en-GB","App","isSignedIn","hasError","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","updateUser","login","getDefaultCenterFromUserAgent","Dimmer","inverted","organisms_GuestTopBar","StyledFirebaseAuth_default","firebaseAuth","helpers_UnprotectedRoutes","organisms_BottomNavigation","isLoggedIn","organisms_TopNavigation","pages_Routes","textComponent","React","locale","BrowserRouter","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","Boolean","window","hostname","combineReducers","action","store","createStore","localStorage","getItem","Storage","setItem","forEach","index","findIndex","push","formReducer","_objectSpread2","applyMiddleware","thunkMiddleware","logger","ReactDOM","render","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42428148.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/warehouseSolid.6a497d1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/now.273f0bda.png\";","export const serverURL = \"http://192.168.0.107:3000/\";","import axios from 'axios';\r\nimport {serverURL} from \"./helpers/serverURL\";\r\nexport const axiosHttpClient = axios.create({\r\n    baseURL: serverURL + \"api/\"\r\n});","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const REQUEST_ISSUES = \"REQUEST_ISSUES\";\r\nexport const SET_ISSUES_ERROR = \"SET_ISSUES_ERROR\";\r\nexport const RECEIVE_ISSUES = \"RECEIVE_ISSUES\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestIssues(resource) {\r\n  return {\r\n    type: REQUEST_ISSUES,\r\n    payload: resource\r\n  };\r\n}\r\n\r\nexport function setIssuesError(error) {\r\n  return {\r\n    type: SET_ISSUES_ERROR,\r\n    payload: error\r\n  };\r\n}\r\n\r\nexport function receiveIssues(data, byWhat) {\r\n  return {\r\n    type: RECEIVE_ISSUES,\r\n    payload: {\r\n      data: data,\r\n      resource: byWhat\r\n    }\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\n/**\r\n * Send an issue to the API\r\n * @param issue JSON representation of the issue {hub: hubId, issue: string value}\r\n */\r\nexport function sendIssue(issue, issueId = null) {\r\n  return function(dispatch, getState) {\r\n    dispatch(requestIssues(true));\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .post(issueId ? \"issues/\" + issueId : \"issues/\", issue, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(requestIssues(false));\r\n                dispatch(getIssues(\"hub\", result.data.result.hub));\r\n              },\r\n              error => dispatch(setIssuesError(error))\r\n            );\r\n        },\r\n        error => dispatch(setIssuesError(error))\r\n      );\r\n  };\r\n}\r\n\r\nexport function getIssues(byWhat, id) {\r\n  return function(dispatch, getState) {\r\n    dispatch(requestIssues(byWhat));\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(\"issues?\" + byWhat + \"=\" + id, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                if (id) {\r\n                  dispatch(receiveIssues(result.data.result, id));\r\n                } else {\r\n                  dispatch(receiveIssues(result.data.result, byWhat));\r\n                }\r\n              },\r\n              error => {\r\n                dispatch(setIssuesError({ error: error, resource: byWhat }));\r\n              }\r\n            );\r\n        },\r\n        error => dispatch(setIssuesError({ error: error, resource: byWhat }))\r\n      );\r\n  };\r\n}\r\n","/*\r\n * Actions\r\n */\r\n\r\nexport const SET_NAVIGATED_LINK = \"SET_NAVIGATED_LINK\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function setNavigatedLink(link) {\r\n  return {\r\n    type: SET_NAVIGATED_LINK,\r\n    payload: link\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nconst LoadingTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"column\">\r\n          <Loader active inline=\"centered\" size=\"medium\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingTemplate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Comment, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomeIssue = props => {\r\n  const issue = props.issue;\r\n  return (\r\n    <Comment>\r\n      <Comment.Avatar src={issue.user.picture} />\r\n      <Comment.Content>\r\n        <Comment.Author as=\"a\">{issue.user.name}</Comment.Author>\r\n        <Comment.Metadata>\r\n          <div>\r\n            <Icon name={\"industry\"} />\r\n            <Link to={\"/r/companies/view/\" + issue.company._id}>\r\n              {issue.company.name}\r\n            </Link>{\" \"}\r\n            <Icon name=\"warehouse\" />\r\n            <Link to={\"/r/hubs/view/\" + issue.hub._id}>{issue.hub.name}</Link>\r\n          </div>\r\n        </Comment.Metadata>\r\n        <Comment.Text>{issue.message}</Comment.Text>\r\n      </Comment.Content>\r\n    </Comment>\r\n  );\r\n};\r\n\r\nHomeIssue.propTypes = {\r\n  issue: PropTypes.object.isRequired\r\n};\r\n\r\nexport default HomeIssue;\r\n","import React from \"react\";\r\nimport { compose, withProps } from \"recompose\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow\r\n} from \"react-google-maps\";\r\nimport { connect } from \"react-redux\";\r\nimport warehouseSolid from \"../warehouseSolid.svg\";\r\n\r\n/**\r\n * Show Google Maps\r\n * Use MapWrapper only with redux-form Field component\r\n * For example: <Field name=\"LatLng\" component={MapWrapper} />\r\n * Don't forget to change Google API key in googleMapURL property\r\n * Height property for containerElement is required, value is up to you\r\n */\r\n// TODO change Google API key in googleMapURL property, current key is bounded to domain name\r\n// TODO map localization\r\nconst MapWrapper = compose(\r\n  withProps(props => {\r\n    return {\r\n      googleMapURL:\r\n        \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3XXK2YwPFB7amCLqkSg4II77EFu0G9R8&language=\" +\r\n        props.userR.language,\r\n      loadingElement: <div style={{ height: `100%` }} />,\r\n      containerElement: <div style={{ height: `400px` }} />,\r\n      mapElement: <div style={{ height: `100%` }} />\r\n    };\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => {\r\n  const warehouse = {\r\n    scaledSize: {\r\n      height: 20,\r\n      width: 32\r\n    },\r\n    url: warehouseSolid\r\n  };\r\n  if (props.input) {\r\n    // add/edit component\r\n    const {\r\n      input: { value, onChange }\r\n    } = props; // data from redux-form, value has format { lat: ..., lng: ... }\r\n    return (\r\n      // update marker position in redux-form state by firing onChange\r\n      <GoogleMap mapTypeId={\"satellite\"}\r\n        onClick={e => onChange({ lat: e.latLng.lat(), lng: e.latLng.lng() })}\r\n        defaultZoom={13}\r\n        defaultCenter={value || props.defaultCenter}\r\n      >\r\n        {(props.marker || value) && <Marker position={props.marker || value} />}\r\n        {props.markers &&\r\n          props.markers.map(marker => <Marker position={marker} />)}\r\n      </GoogleMap>\r\n    );\r\n  } else {\r\n    // view component\r\n    return (\r\n      <GoogleMap mapTypeId={\"satellite\"}\r\n        defaultZoom={13}\r\n        defaultCenter={props.marker || props.defaultCenter}\r\n      >\r\n        <>{props.marker && <Marker position={props.marker} />}\r\n        {props.markers &&\r\n          props.markers.map(marker => (\r\n            <Marker key={marker._id} position={marker.LatLng} icon={warehouse}>\r\n              <InfoWindow><div>{marker.issue}</div></InfoWindow>\r\n            </Marker>\r\n          ))}</>\r\n      </GoogleMap>\r\n    );\r\n  }\r\n});\r\n\r\nconst mapToStateProps = state => {\r\n  return { userR: state.userReducer };\r\n};\r\n\r\nexport default connect(\r\n  mapToStateProps,\r\n  {}\r\n)(MapWrapper);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Header, Comment } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport HomeIssue from \"../organisms/HomeIssue\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\n\r\nconst HomeTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"one column row center aligned\">\r\n          <div className=\"column\">\r\n            <Header size=\"medium\">\r\n              <FormattedMessage\r\n                id=\"home.greeting\"\r\n                description=\"Greeting to welcome the user to the app\"\r\n                values={{\r\n                  name: <b>{props.displayName}</b>\r\n                }}\r\n              />\r\n            </Header>\r\n          </div>\r\n        </div>\r\n        <div className={\"stackable two column row\"}>\r\n          <div className=\"column\">\r\n            <Comment.Group>\r\n              {props.issues.map(issue => (\r\n                <HomeIssue key={issue._id} issue={issue} />\r\n              ))}\r\n            </Comment.Group>\r\n          </div>\r\n          <div className=\"column\">\r\n            <MapWrapper\r\n              defaultCenter={props.defaultCenter}\r\n              markers={props.issues\r\n                .filter(i => i.hub.LatLng)\r\n                .map(issue => {\r\n                  return {\r\n                    _id: issue._id,\r\n                    issue: issue.message,\r\n                    LatLng: issue.hub.LatLng\r\n                  };\r\n                })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHomeTemplate.propTypes = {\r\n  displayName: PropTypes.string.isRequired,\r\n  defaultCenter: PropTypes.object.isRequired,\r\n  issues: PropTypes.array.isRequired\r\n};\r\n\r\nexport default HomeTemplate;\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NoDataTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui centered column grid\">\r\n        <div className=\"sixteen wide column center aligned\">\r\n          <Header icon>\r\n            <Icon name=\"cloud\" color={\"blue\"} />\r\n            <FormattedMessage id=\"string.noData\" />\r\n          </Header>\r\n        </div>\r\n        {props.children && (\r\n          <div className=\"row\">\r\n            <div className=\"column center aligned\">{props.children}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNoDataTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default NoDataTemplate;\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst ErrorTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui centered three column grid\">\r\n        <div className=\"column center aligned\">\r\n          <Header icon>\r\n            <Icon name=\"cloud\" color={\"red\"} />\r\n            <FormattedMessage id=\"string.error\" />\r\n            {props.error}\r\n          </Header>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { getIssues } from \"../actions/issuesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport HomeTemplate from \"../templates/HomeTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\nimport ErrorTemplate from \"../templates/ErrorTemplate\";\r\n\r\nconst issuesResource = \"all\";\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    this.props.setNavigatedLink(\"home\");\r\n    // get issues from the API\r\n    this.props.getIssues(issuesResource);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove page name to remove highlight in the navigation bar\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const isFetching = this.props.isFetching;\r\n    const issues = this.props.issues;\r\n    const length = issues.length;\r\n    const displayName = this.props.userReducer.user.displayName;\r\n    const defaultCenter = this.props.userReducer.defaultCenter;\r\n    const error = this.props.error;\r\n    return (\r\n      <>\r\n        {error && <ErrorTemplate />}\r\n        {isFetching && length === 0 && <LoadingTemplate />}\r\n        {!isFetching && length === 0 && <NoDataTemplate />}\r\n        {length > 0 && (\r\n          <HomeTemplate\r\n            displayName={displayName}\r\n            issues={issues}\r\n            defaultCenter={defaultCenter}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const issues = state.issuesReducer[issuesResource] || [];\r\n  const isFetching =\r\n    state.issuesReducer.isIssuesFetching[issuesResource] || false;\r\n  const error = state.issuesReducer.issuesError[issuesResource] || null;\r\n  return {\r\n    error,\r\n    issues,\r\n    isFetching,\r\n    userReducer: state.userReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getIssues: (byWhat, id) => {\r\n      dispatch(getIssues(byWhat, id));\r\n    },\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","export const companyResource = \"companies\";\r\nexport const hubResource = \"hubs\";\r\nexport const deviceResource = \"devices\";\r\nexport const networkResource = \"networks\";\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\nimport { setNavigatedLink } from \"./navigationActions\";\r\n\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const RECEIVE_ITEMS = \"RECEIVE_ITEMS\";\r\nexport const RECEIVE_ITEM = \"RECEIVE_ITEM\";\r\nexport const REQUEST_API = \"REQUEST_API\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestAPI() {\r\n  return {\r\n    type: REQUEST_API\r\n  };\r\n}\r\n\r\nexport function receiveItem(item, resource) {\r\n  return {\r\n    type: RECEIVE_ITEM,\r\n    payload: item,\r\n    resource: resource\r\n  };\r\n}\r\n\r\nexport function receiveItems(items, resource) {\r\n  return {\r\n    type: RECEIVE_ITEMS,\r\n    payload: items,\r\n    resource: resource\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\nexport function getDataByAPI(resource, id) {\r\n  return function(dispatch, getState) {\r\n    dispatch(requestAPI());\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(id ? resource + \"/\" + id : resource, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                if (id) {\r\n                  dispatch(receiveItem(result.data.result, resource));\r\n                } else {\r\n                  dispatch(receiveItems(result.data.result, resource));\r\n                }\r\n              },\r\n              error => {}\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function postDataByAPI(resource, data) {\r\n  return function(dispatch, getState) {\r\n    const formData = new FormData();\r\n    if (data.photos) {\r\n      for (let i = 0; i < data.photos.length; i++) {\r\n        formData.append(\"photos\", data.photos.item(i));\r\n      }\r\n    }\r\n    if (data.documents) {\r\n      for (let i = 0; i < data.documents.length; i++) {\r\n        formData.append(\"documents\", data.documents.item(i));\r\n      }\r\n    }\r\n    formData.append(\r\n      \"values\",\r\n      JSON.stringify(\r\n        Object.assign(\r\n          {},\r\n          { ...data },\r\n          { photos: undefined, documents: undefined }\r\n        )\r\n      )\r\n    );\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .post(resource, formData, {\r\n              headers: {\r\n                \"content-type\": \"multipart/form-data\",\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(\r\n                  setNavigatedLink({\r\n                    resource: resource,\r\n                    _id: result.data.result._id\r\n                  })\r\n                );\r\n              },\r\n              error => {}\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\n/**\r\n * Patch resource by API call\r\n * @param resourceName Name of API/resource, for example \"companies/\"\r\n * @param data\r\n */\r\nexport function patchDataByAPI(resourceName, data) {\r\n  return function(dispatch, getState) {\r\n    const formData = new FormData();\r\n    if (data.logo) {\r\n      formData.append(\"logo\", data.logo.item(0));\r\n    }\r\n    if (data.photos) {\r\n      for (let i = 0; i < data.photos.length; i++) {\r\n        formData.append(\"photos\", data.photos.item(i));\r\n      }\r\n    }\r\n    if (data.documents) {\r\n      for (let i = 0; i < data.documents.length; i++) {\r\n        formData.append(\"documents\", data.documents.item(i));\r\n      }\r\n    }\r\n    formData.append(\r\n      \"values\",\r\n      JSON.stringify(\r\n        Object.assign(\r\n          {},\r\n          { ...data },\r\n          { photos: undefined, documents: undefined }\r\n        )\r\n      )\r\n    );\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .patch(resourceName + \"/\" + data._id, formData, {\r\n              headers: {\r\n                \"content-type\": \"multipart/form-data\",\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(\r\n                  setNavigatedLink({ resource: resourceName, _id: data._id })\r\n                );\r\n              },\r\n              error => {}\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Icon, Label, List, Popup } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, FormattedPlural } from \"react-intl\";\r\n\r\nconst CompanyHub = props => {\r\n  const hub = props.hub;\r\n  return (\r\n    <div className=\"column\" style={{marginBottom: \"4vh\"}}>\r\n      <Card raised>\r\n        <Card.Content>\r\n          {hub.issues.length > 0 ? (\r\n            <Popup\r\n              trigger={\r\n                <Label color=\"red\" ribbon=\"right\">\r\n                  <FormattedPlural\r\n                    value={hub.issues.length}\r\n                    one={<FormattedMessage id=\"interface.hasIssue\" />}\r\n                    other={\r\n                      <FormattedMessage\r\n                        id=\"interface.hasIssues\"\r\n                        values={{ count: hub.issues.length }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Label>\r\n              }\r\n              content={hub.issues.map(issue => (\r\n                <li key={issue._id}>{issue.message}</li>\r\n              ))}\r\n            />\r\n          ) : (\r\n            <Label ribbon=\"right\">\r\n              <FormattedMessage id=\"interface.noIssue\" />\r\n            </Label>\r\n          )}\r\n          <Card.Header>\r\n            <Icon size={\"large\"} name=\"warehouse\" />{\" \"}\r\n            <Link to={\"/r/hubs/view/\" + hub._id}>{hub.name}</Link>\r\n          </Card.Header>\r\n          <Card.Description>\r\n            <List bulleted horizontal link>\r\n              {hub.devices && (\r\n                <>\r\n                  <List.Item>\r\n                    <Icon name=\"record\" />{\" \"}\r\n                    {hub.devices\r\n                      ? hub.devices.filter(d => d.deviceType === \"camera\")\r\n                          .length\r\n                      : 0}\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <Icon name=\"hdd\" />{\" \"}\r\n                    {\r\n                      hub.devices.filter(d => d.deviceType === \"recorder\")\r\n                        .length\r\n                    }\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <Icon name=\"microchip\" />{\" \"}\r\n                    {hub.devices.filter(d => d.deviceType === \"netdev\").length}\r\n                  </List.Item>\r\n                </>\r\n              )}\r\n              {hub.equipment && (\r\n                <List.Item>\r\n                  <Icon name=\"box\" /> {hub.equipment.length}\r\n                </List.Item>\r\n              )}\r\n            </List>\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nCompanyHub.propTypes = {\r\n  hub: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CompanyHub;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Divider, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport CompanyHub from \"../molecules/CompanyHub\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst NetworksCompany = props => {\r\n  const company = props.company;\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"eight wide column\">\r\n          <Link to={\"/r/companies/view/\" + company._id}>\r\n            {company.logo ? (\r\n              <Image size=\"small\" src={serverURL + company.logo} />\r\n            ) : (\r\n              <Header as=\"h1\">\r\n                <Icon name=\"industry\" />{\" \"}\r\n                <Header.Content>{company.name}</Header.Content>\r\n              </Header>\r\n            )}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"four column row stackable\">\r\n        {company.hubs && company.hubs.length > 0 ? (\r\n          company.hubs.map(hub => <CompanyHub key={hub._id} hub={hub} />)\r\n        ) : (\r\n          <div className=\"column\">\r\n            <FormattedMessage id=\"string.companyHasNoHubs\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"column\">\r\n          <Button\r\n            as={Link}\r\n            to={\"/r/hubs/add/\" + company._id + \"/\" + company.name}\r\n          >\r\n            <Icon name=\"plus\" />{\" \"}\r\n            <FormattedMessage\r\n              id=\"interface.addHubToCompany\"\r\n              values={{ company: company.name }}\r\n            />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nNetworksCompany.propTypes = {\r\n  company: PropTypes.object.isRequired\r\n};\r\n\r\nexport default NetworksCompany;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NetworksCompany from \"../organisms/NetworksCompany\";\r\nimport { Button, Divider, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst NetworksTemplate = props => {\r\n  const companies = props.companies;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"column\">\r\n            <Button as={Link} to={\"/r/companies/add\"}>\r\n              <Icon name=\"industry\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addCompany\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        {companies.map(company => (\r\n          <NetworksCompany key={company._id} company={company} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNetworksTemplate.propTypes = {\r\n  companies: PropTypes.array.isRequired\r\n};\r\n\r\nexport default NetworksTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDataByAPI } from \"../actions/dataActions\";\r\nimport NetworksTemplate from \"../templates/NetworksTemplate\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\nimport ErrorTemplate from \"../templates/ErrorTemplate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass Networks extends Component {\r\n  componentDidMount() {\r\n    this.props.setNavigatedLink(\"networks\");\r\n    this.props.getDataByAPI(companyResource);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n\r\n  render() {\r\n    const isFetching = this.props.dataReducer.isFetching;\r\n    const companies = this.props.companies;\r\n    const length = companies.length;\r\n    const error = this.props.error;\r\n    return (\r\n      <>\r\n        {error && <ErrorTemplate />}\r\n        {isFetching && length === 0 && <LoadingTemplate />}\r\n        {!isFetching && length === 0 && (\r\n          <NoDataTemplate>\r\n            <Button as={Link} to={\"/r/companies/add\"}>\r\n              <Icon name=\"industry\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addCompany\" />\r\n            </Button>\r\n          </NoDataTemplate>\r\n        )}\r\n        {length > 0 && (\r\n          <>\r\n            <NetworksTemplate companies={companies} />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const companies = state.dataReducer[companyResource] || [];\r\n  const error = state.issuesReducer.issuesError[companyResource] || null;\r\n  return {\r\n    loadingReducer: state.loadingReducer,\r\n    dataReducer: state.dataReducer,\r\n    companies,\r\n    error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    },\r\n    getDataByAPI: (resource, id) => {\r\n      dispatch(getDataByAPI(resource, id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Networks);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Divider, Grid, Header, Icon, Modal } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport QRCode from \"qrcode.react\";\r\n\r\nconst Contact = props => {\r\n  const { showCompany } = props;\r\n  const contact = props.contact;\r\n  const contactNote = contact.note ? \"NOTE:\" + contact.note + \"\\n\" : \"\";\r\n  const QRCodeValue =\r\n    \"BEGIN:VCARD\\n\" +\r\n    \"VERSION:3.0\\n\" +\r\n    \"ORG:\" +\r\n    contact.company.name +\r\n    \"\\n\" +\r\n    \"FN:\" +\r\n    contact.name +\r\n    \"\\n\" +\r\n    \"TEL;TYPE=WORK,VOICE:\" +\r\n    contact.phone +\r\n    \"\\n\" +\r\n    contactNote +\r\n    \"END:VCARD\";\r\n  return (\r\n    <Card>\r\n      <Card.Content>\r\n        <Card.Header>\r\n          <Grid verticalAlign=\"middle\">\r\n            <Grid.Column floated=\"left\" width={12}>\r\n              {contact.name}\r\n            </Grid.Column>\r\n            <Grid.Column textAlign={\"right\"} floated=\"right\" width={4}>\r\n              <Modal size={\"mini\"} trigger={<Icon name=\"qrcode\" size=\"big\" />}>\r\n                <Modal.Content style={{ textAlign: \"center\" }}>\r\n                  <QRCode value={QRCodeValue} size={256} />\r\n                </Modal.Content>\r\n              </Modal>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Card.Header>\r\n        <Divider />\r\n        <Card.Description>\r\n          {showCompany && (\r\n            <Header as=\"h4\">\r\n              <Icon name=\"industry\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"editor.company\" />\r\n                </Header.Subheader>\r\n                {contact.company.name}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          <Header as=\"h4\">\r\n            <Icon name=\"phone\" />\r\n            <Header.Content>\r\n              <Header.Subheader>\r\n                <FormattedMessage id=\"interface.phone\" />\r\n              </Header.Subheader>\r\n              {<a href={\"tel:\" + contact.phone}>{contact.phone}</a>}\r\n            </Header.Content>\r\n          </Header>\r\n          {contact.note && (\r\n            <Header as=\"h4\">\r\n              <Icon name=\"sticky note\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"editor.note\" />\r\n                </Header.Subheader>\r\n                {contact.note}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n        </Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Contact from \"../molecules/Contact\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nconst ContactsTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"sixteen wide column\">\r\n          <Card.Group className={\"stackable\"} itemsPerRow={4}>\r\n            {props.contacts.map(contact => {\r\n              return <Contact showCompany={true} key={contact._id} contact={contact} />;\r\n            })}\r\n          </Card.Group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsTemplate.propTypes = {\r\n  contacts: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ContactsTemplate;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport {getDataByAPI} from \"./dataActions\";\r\n\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const REQUEST_CONTACTS = \"REQUEST_CONTACTS\";\r\nexport const RECEIVE_CONTACTS = \"RECEIVE_CONTACTS\";\r\nexport const SET_CONTACTS_ERROR = \"SET_CONTACTS_ERROR\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestContacts() {\r\n  return {\r\n    type: REQUEST_CONTACTS\r\n  };\r\n}\r\n\r\nexport function receiveContacts(contacts) {\r\n  return {\r\n    type: RECEIVE_CONTACTS,\r\n    payload: contacts\r\n  };\r\n}\r\n\r\nexport function setContactsError(error) {\r\n  return {\r\n    type: SET_CONTACTS_ERROR,\r\n    payload: error\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\nexport function fetchContacts() {\r\n  return dispatch => {\r\n    dispatch(requestContacts());\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.get(\"contacts\", {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(\r\n        result => dispatch(receiveContacts(result.data.result)),\r\n        error => dispatch(setContactsError(error))\r\n      );\r\n  };\r\n}\r\n\r\nexport function addContact(contact) {\r\n  return dispatch =>\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.post(\"contacts\", contact, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(result => dispatch(getDataByAPI(companyResource, contact.company)));\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport ContactsTemplate from \"../templates/ContactsTemplate\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport { fetchContacts } from \"../actions/contactsActions\";\r\nimport ErrorTemplate from \"../templates/ErrorTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    // set page name to help top navigation bar to highlight current button\r\n    this.props.setNavigatedLink(\"contacts\");\r\n    this.props.fetchContacts();\r\n  }\r\n  componentWillUnmount() {\r\n    // remove page name to remove highlight in the navigation bar\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const contacts = this.props.allContacts.contacts;\r\n    const isFetching = this.props.allContacts.isFetching;\r\n    const error = this.props.allContacts.error;\r\n    return (\r\n      <>\r\n        {isFetching && contacts.length === 0 && <LoadingTemplate />}\r\n        {error && <ErrorTemplate />}\r\n        {!isFetching && contacts.length === 0 && <NoDataTemplate />}\r\n        {contacts.length > 0 && (\r\n          <>\r\n            <ContactsTemplate contacts={contacts} />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    allContacts: state.contactsReducer.contacts\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchContacts: () => dispatch(fetchContacts()),\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Contacts);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\nimport { patchDataByAPI, postDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { EditorReduxFormName } from \"../helpers/editorReduxFormName\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\n\r\nclass Editor extends Component {\r\n  componentWillUnmount() {\r\n    // remove page name to remove highlight in the navigation bar\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const submitForm = values => {\r\n      if (values._id) {\r\n        return this.props.patchData(this.props.resource, values);\r\n      } else {\r\n        return this.props.postData(this.props.resource, values);\r\n      }\r\n    };\r\n    const { pristine, submitting, handleSubmit } = this.props;\r\n    if (\r\n      this.props.currentLink !== undefined &&\r\n      this.props.currentLink.resource !== undefined\r\n    ) {\r\n      return (\r\n        <Redirect\r\n          to={\r\n            \"/r/\" +\r\n            this.props.currentLink.resource +\r\n            \"/view/\" +\r\n            this.props.currentLink._id\r\n          }\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <div className=\"ui container\">\r\n          <div className=\"ui grid\">\r\n            {this.props.header}\r\n            <div className=\"row stackable\">\r\n              {this.props.children}\r\n              <div className=\"eight wide column\">\r\n                {/*Map Wrapper*/}\r\n                <Field\r\n                  name=\"LatLng\"\r\n                  component={MapWrapper}\r\n                  defaultCenter={\r\n                    this.props.initialValues.LatLng\r\n                      ? this.props.initialValues.LatLng\r\n                      : this.props.defaultCenter\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"sixteen wide column right aligned\">\r\n              <Button\r\n                type=\"submit\"\r\n                icon\r\n                labelPosition=\"right\"\r\n                positive\r\n                disabled={pristine || submitting}\r\n              >\r\n                <FormattedMessage id=\"editor.save\" /> <Icon name=\"save\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaultCenter: state.userReducer.defaultCenter,\r\n    currentLink: state.navigationReducer.currentLink\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    postData: (data, resource) => {\r\n      dispatch(postDataByAPI(data, resource));\r\n    },\r\n    patchData: (data, resourceName) => {\r\n      dispatch(patchDataByAPI(data, resourceName));\r\n    },\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(reduxForm({ form: EditorReduxFormName })(Editor));\r\n\r\nEditor.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  initialValues: PropTypes.object.isRequired,\r\n  header: PropTypes.node,\r\n  resource: PropTypes.string.isRequired\r\n};\r\n","export const EditorReduxFormName = \"Editor\";","import { FormattedMessage } from \"react-intl\";\r\nimport React from \"react\";\r\nimport { Input, Label } from \"semantic-ui-react\";\r\n\r\n// TODO update error message on language change\r\nexport const renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  icon,\r\n  iconPosition,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <>\r\n    <Input\r\n      {...input}\r\n      icon={icon}\r\n      iconPosition={iconPosition}\r\n      placeholder={label}\r\n      type={type}\r\n    />\r\n    {touched &&\r\n      ((error && (\r\n        <Label basic color=\"red\" pointing>\r\n          <FormattedMessage id={error} />\r\n        </Label>\r\n      )) ||\r\n        (warning && <span>{warning}</span>))}\r\n  </>\r\n);\r\n","export const requiredValidator = value =>\r\n  value || typeof value === \"number\"\r\n    ? undefined\r\n    : \"companyEditor.validationError\";\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst FileInputField = props => {\r\n  function onChange(e) {\r\n    const {\r\n      input: { onChange }\r\n    } = props;\r\n    onChange(e.target.files);\r\n  }\r\n  const {\r\n    icon,\r\n    text,\r\n    input: { name }\r\n  } = props;\r\n  return (\r\n    <>\r\n      <Button as=\"label\" htmlFor={name} icon labelPosition=\"right\">\r\n        {text}\r\n        <Icon name={icon} />\r\n      </Button>\r\n      <input\r\n        name={name}\r\n        hidden\r\n        id={name}\r\n        multiple\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileInputField;\r\n","import React from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field } from \"redux-form\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\nimport inputField from \"../molecules/FileInputField\";\r\n\r\n// TODO fix buttons language on language changes\r\nconst CompanyEditForm = () => {\r\n  return (\r\n    <>\r\n      <div className=\"eight wide column\">\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"editor.name\" />\r\n          </label>\r\n          <Field\r\n            icon=\"industry\"\r\n            iconPosition=\"left\"\r\n            name=\"name\"\r\n            component={renderField}\r\n            type=\"text\"\r\n            validate={requiredValidator}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"companyEditor.address\" />\r\n          </label>\r\n          <Field icon=\"map marker alternate\" iconPosition=\"left\" name=\"address\" component={renderField} type=\"text\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.phone\" />\r\n          </label>\r\n          <Field icon=\"phone\" iconPosition=\"left\" name=\"phone\" component={renderField} type=\"text\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"companyEditor.email\" />\r\n          </label>\r\n          <Field icon=\"at\" iconPosition=\"left\" name=\"email\" component={renderField} type=\"text\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"editor.note\" />\r\n          </label>\r\n          <Field name=\"note\" component=\"textarea\" rows={3} />\r\n        </Form.Field>\r\n        <Field\r\n          component={inputField}\r\n          text={<FormattedMessage id={\"editor.uploadLogo\"} />}\r\n          name=\"logo\"\r\n          icon=\"circle outline\"\r\n        />\r\n        <Field\r\n          component={inputField}\r\n          text={<FormattedMessage id={\"companyEditor.uploadPhotos\"} />}\r\n          icon=\"file image\"\r\n          name=\"photos\"\r\n        />\r\n        <Field\r\n          component={inputField}\r\n          text={<FormattedMessage id={\"companyEditor.uploadDocuments\"} />}\r\n          icon=\"file pdf\"\r\n          name=\"documents\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyEditForm;\r\n","import React from 'react';\r\nimport {Header, Icon} from \"semantic-ui-react\";\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\nconst CompanyAddHeader = () => {\r\n  return (\r\n      <div className=\"sixteen wide column center aligned\">\r\n        <Header as=\"h1\">\r\n          <Icon name=\"industry\" />{\" \"}\r\n          <FormattedMessage id=\"interface.addCompany\" />\r\n        </Header>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default CompanyAddHeader;","import React from \"react\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport CompanyEditForm from \"../organisms/CompanyEditForm\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport CompanyAddHeader from \"../molecules/CompanyAddHeader\";\r\n\r\nconst CompanyAdder = props => {\r\n  return (\r\n    <Editor\r\n      resource={companyResource}\r\n      initialValues={{}}\r\n      header={<CompanyAddHeader />}\r\n    >\r\n      <CompanyEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nexport default CompanyAdder;\r\n","import React, { Component } from \"react\";\r\nimport { getDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\n\r\n/**\r\n * HOC. Returns Viewer for desired resource. Id of resource should be in url params as :id\r\n * @param WrappedComponent Component name to wrap\r\n * @param resource Resource name for API calls, for example \"companies\"\r\n */\r\nexport function getItemLoader(WrappedComponent, resource) {\r\n  class ItemLoader extends Component {\r\n    componentDidMount() {\r\n      // Get data by API call in Redux\r\n      this.props.getDataByAPI(resource, this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n      // data is fetching\r\n      const isFetching = this.props.isFetching;\r\n      // array of items by resource param\r\n      const items = this.props.items;\r\n      // id from react-router-dom\r\n      const id = this.props.match.params.id;\r\n      // item by id\r\n      const item = items.find(i => i._id === id);\r\n      return (\r\n        <>\r\n          {isFetching && !item && <LoadingTemplate />}\r\n          {!isFetching && !item && <NoDataTemplate />}\r\n          {item && <WrappedComponent item={item} />}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => {\r\n    const items = state.dataReducer[resource] || [];\r\n    const isFetching = state.dataReducer.isFetching;\r\n    return { items, isFetching };\r\n  };\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      getDataByAPI: (resource, id) => {\r\n        dispatch(getDataByAPI(resource, id));\r\n      }\r\n    };\r\n  };\r\n\r\n  return connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ItemLoader);\r\n}\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst CompanyEditHeader = () => {\r\n  return (\r\n    <div className=\"sixteen wide column center aligned\">\r\n      <Header as=\"h1\">\r\n        <Icon name=\"industry\" />{\" \"}\r\n        <FormattedMessage id=\"companyEditor.editCompany\" />\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyEditHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport CompanyEditHeader from \"../molecules/CompanyEditHeader\";\r\nimport CompanyEditForm from \"../organisms/CompanyEditForm\";\r\n\r\nconst CompanyEditor = props => {\r\n  const company = props.item;\r\n  return (\r\n    <Editor\r\n      initialValues={{\r\n        ...company,\r\n        photos: undefined,\r\n        documents: undefined,\r\n        logo: undefined\r\n      }}\r\n      header={<CompanyEditHeader />}\r\n      resource={companyResource}\r\n    >\r\n      <CompanyEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nCompanyEditor.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(CompanyEditor, companyResource);\r\n","import React from \"react\";\r\nimport { Header, Image, Modal } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\n\r\nconst Photos = props => {\r\n  if (props.photos) {\r\n    return props.photos.map(photo => (\r\n      <div key={photo.path} className=\"three wide column middle aligned\">\r\n        <Modal\r\n          trigger={<Image fluid src={serverURL + photo.path} />}\r\n          basic\r\n          size=\"small\"\r\n          closeIcon\r\n        >\r\n          <Header icon=\"file image\" content={photo.originalname} />\r\n          <Modal.Content>\r\n            <Image fluid src={serverURL + photo.path} />\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    ));\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nPhotos.propTypes = {};\r\n\r\nexport default Photos;\r\n","import React from \"react\";\r\nimport { Divider, Header, Icon, List } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport MapWrapper from \"./MapWrapper\";\r\n\r\nconst CompanyView = props => {\r\n  //TODO change localhost, defaultCenter\r\n  const documents =\r\n    props.company && props.company.documents\r\n      ? props.company.documents.map(doc => (\r\n          <List.Item as=\"a\" href={\"/\" + doc.path} key={doc.path}>\r\n            <Icon name=\"file\" /> {doc.originalname}\r\n          </List.Item>\r\n        ))\r\n      : null;\r\n  return (\r\n    <>\r\n      <div className=\"ui row stackable\">\r\n        <div className=\"eight wide column\">\r\n          <Header as=\"h2\">\r\n            <Icon name=\"industry\" />\r\n            <Header.Content>\r\n              <Header.Subheader>\r\n                <FormattedMessage id=\"editor.name\" />\r\n              </Header.Subheader>\r\n              {props.company.name}\r\n            </Header.Content>\r\n          </Header>\r\n          {props.company.address && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"map marker alternate\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"companyEditor.address\" />\r\n                </Header.Subheader>\r\n                {props.company.address}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          {props.company.phone && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"phone\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.phone\" />\r\n                </Header.Subheader>\r\n                {\r\n                  <a href={\"tel:\" + props.company.phone}>\r\n                    {props.company.phone}\r\n                  </a>\r\n                }\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          {props.company.email && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"at\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"companyEditor.email\" />\r\n                </Header.Subheader>\r\n                {\r\n                  <a href={\"mailto:\" + props.company.email}>\r\n                    {props.company.email}\r\n                  </a>\r\n                }\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          {props.company.note && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"sticky note\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"editor.note\" />\r\n                </Header.Subheader>\r\n                {props.company.note}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n        </div>\r\n        {props.company.LatLng ? (\r\n          <div className=\"eight wide column\">\r\n            <MapWrapper\r\n              defaultCenter={{ lat: 46.5886146, lng: 30.7918339 }}\r\n              marker={props.company.LatLng || null}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        {documents && documents.length > 0 && (\r\n          <div className=\"eight wide column\">\r\n            <Divider />\r\n            <Header as=\"h2\">\r\n              <Icon name=\"file pdf\" />\r\n              <Header.Content>\r\n                <FormattedMessage id=\"companyEditor.documents\" />\r\n              </Header.Content>\r\n              {documents ? <List link>{documents}</List> : null}\r\n            </Header>\r\n          </div>\r\n        )}\r\n        {false && <div className=\"eight wide column\">\r\n          <Divider />\r\n          <Header as=\"h2\">\r\n            <Icon name=\"address book\" />\r\n            <Header.Content>\r\n              <FormattedMessage id=\"top.contacts\" />\r\n            </Header.Content>\r\n          </Header>\r\n        </div>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nCompanyView.propTypes = {};\r\n\r\nexport default CompanyView;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { addContact } from \"../actions/contactsActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddContact extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n  open = () => this.setState({ open: true });\r\n  close = () => this.setState({ open: false });\r\n  submitForm = values => {\r\n    values.company = this.props.company;\r\n    this.props.addContact(values);\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    const { pristine, submitting, handleSubmit } = this.props;\r\n    return (\r\n      <Modal\r\n        open={this.state.open}\r\n        onOpen={this.open}\r\n        onClose={this.close}\r\n        size={\"tiny\"}\r\n        trigger={\r\n          <Dropdown.Item  onClick={this.open}>\r\n            <Icon name=\"address book\" />{\" \"}\r\n              <FormattedMessage\r\n                icon\r\n                labelPosition=\"right\"\r\n                id=\"interface.addContact\"\r\n              />\r\n          </Dropdown.Item>\r\n        }\r\n      >\r\n        <Modal.Header>\r\n          <Icon name=\"address book\" />{\" \"}\r\n          <FormattedMessage id=\"interface.addContact\" />\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={handleSubmit(this.submitForm)}>\r\n            <Form.Field>\r\n              <label>\r\n                <FormattedMessage id=\"editor.name\" />\r\n              </label>\r\n              <Field\r\n                name=\"name\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                validate={requiredValidator}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                <FormattedMessage id=\"interface.phone\" />\r\n              </label>\r\n              <Field\r\n                name=\"phone\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                validate={requiredValidator}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                <FormattedMessage id=\"editor.note\" />\r\n              </label>\r\n              <Field name=\"note\" component=\"textarea\" rows={3} />\r\n            </Form.Field>\r\n            <Button\r\n              type=\"submit\"\r\n              icon\r\n              labelPosition=\"right\"\r\n              positive\r\n              disabled={pristine || submitting}\r\n            >\r\n              <FormattedMessage id=\"editor.save\" /> <Icon name=\"save\" />\r\n            </Button>\r\n          </Form>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  company: PropTypes.string.isRequired,\r\n  addContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addContact: contact => dispatch(addContact(contact))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(injectIntl(reduxForm({ form: \"Add contact\" })(AddContact)));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport AddContact from \"../organisms/AddContact\";\r\n\r\nconst CompanySettings = props => {\r\n  const company = props.company;\r\n  return (\r\n    <Dropdown\r\n      pointing={\"top right\"}\r\n      item\r\n      icon={{ name: \"wrench\", size: \"big\" }}\r\n    >\r\n      <Dropdown.Menu>\r\n        {company.create && (\r\n          <Dropdown.Item\r\n            as={Link}\r\n            to={\"/r/hubs/add/\" + company._id + \"/\" + company.name}\r\n          >\r\n            <Icon name=\"warehouse\" /> <FormattedMessage id=\"interface.addHub\" />\r\n          </Dropdown.Item>\r\n        )}\r\n        <AddContact company={company._id} />\r\n        <Dropdown.Item as={Link} to={\"/r/companies/edit/\" + company._id}>\r\n          <Icon name=\"edit\" /> <FormattedMessage id=\"companyEditor.edit\" />\r\n        </Dropdown.Item>\r\n        {company.isOwner && (\r\n          <Dropdown.Item\r\n            as={Link}\r\n            to={\"/r/permissions/\" + company._id + \"/\" + company.name}\r\n          >\r\n            <Icon name=\"shield alternate\" />{\" \"}\r\n            <FormattedMessage id=\"interface.permissions\" />\r\n          </Dropdown.Item>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nCompanySettings.propTypes = {};\r\n\r\nexport default CompanySettings;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport Contact from \"../molecules/Contact\";\r\n\r\nconst CompanyContacts = props => {\r\n  return (\r\n    <Card.Group className={\"stackable\"} itemsPerRow={4}>\r\n      {props.contacts.map(contact => {\r\n        return (\r\n          <Contact showCompany={true} key={contact._id} contact={contact} />\r\n        );\r\n      })}\r\n    </Card.Group>\r\n  );\r\n};\r\n\r\nCompanyContacts.propTypes = {};\r\n\r\nexport default CompanyContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Divider, Icon, Image, List} from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport Photos from \"../organisms/Photos\";\r\nimport CompanyView from \"../organisms/CompanyView\";\r\nimport CompanyHub from \"../molecules/CompanyHub\";\r\nimport CompanySettings from \"../molecules/CompanySettings\";\r\nimport Contact from \"../molecules/Contact\";\r\nimport CompanyContacts from \"../organisms/CompanyContacts\";\r\nimport {Header} from \"semantic-ui-react\";\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\nconst CompanyViewTemplate = props => {\r\n  const company = props.company;\r\n  const CRUD = company.CRUD;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"three wide column middle aligned\">\r\n            {company.logo && (\r\n              <Image size=\"medium\" src={serverURL + company.logo} />\r\n            )}\r\n          </div>\r\n          <Photos photos={company.photos} />\r\n        </div>\r\n        <Divider />\r\n        {company.update && <CompanySettings company={company} />}\r\n        <CompanyView company={company} id={company._id} CRUD={CRUD} />\r\n        <Divider />\r\n        <div className=\"four column row stackable\">\r\n          {company.hubs &&\r\n          company.hubs.map(hub => <CompanyHub key={hub._id} hub={hub} />)}\r\n        </div>\r\n        {company.contacts && company.contacts.length > 0 && (\r\n          <div className=\"sixteen wide column\">\r\n            <Divider />\r\n            <Header as=\"h2\">\r\n              <Icon name=\"address book\" />\r\n              <Header.Content>\r\n                <FormattedMessage id=\"top.contacts\" />\r\n              </Header.Content>\r\n            </Header>\r\n            <CompanyContacts contacts={company.contacts} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCompanyViewTemplate.propTypes = {\r\n  company: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CompanyViewTemplate;\r\n","import React from \"react\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport CompanyViewTemplate from \"../templates/CompanyViewTemplate\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CompanyViewer(props) {\r\n  const company = props.item;\r\n  return <CompanyViewTemplate company={company} />;\r\n}\r\n\r\nCompanyViewer.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(CompanyViewer, companyResource);\r\n","import React from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field } from \"redux-form\";\r\nimport inputField from \"../molecules/FileInputField\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\n\r\nconst HubEditForm = props => {\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"editor.name\" />\r\n        </label>\r\n        <Field\r\n          name=\"name\"\r\n          component={renderField}\r\n          type=\"text\"\r\n          validate={requiredValidator}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"editor.note\" />\r\n        </label>\r\n        <Field name=\"note\" component=\"textarea\" rows={3} />\r\n      </Form.Field>\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"companyEditor.uploadPhotos\"} />}\r\n        icon=\"file image\"\r\n        name=\"photos\"\r\n      />\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"companyEditor.uploadDocuments\"} />}\r\n        icon=\"file pdf\"\r\n        name=\"documents\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHubEditForm.propTypes = {};\r\n\r\nexport default HubEditForm;\r\n","import React from \"react\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport HubEditForm from \"../organisms/HubEditForm\";\r\nimport { hubResource } from \"../helpers/resourceNames\";\r\n\r\nconst HubAdder = props => {\r\n  const company = props.match.params.companyId;\r\n  return (\r\n    <Editor initialValues={{ company: company }} resource={hubResource}>\r\n      <HubEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nexport default HubAdder;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { hubResource } from \"../helpers/resourceNames\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport HubEditForm from \"../organisms/HubEditForm\";\r\n\r\nconst HubEditor = props => {\r\n  const hub = props.item;\r\n  return (\r\n    <Editor\r\n      resource={hubResource}\r\n      initialValues={{ ...hub, photos: undefined, documents: undefined }}\r\n    >\r\n      <HubEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nHubEditor.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(HubEditor, hubResource);\r\n","import React from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst CompanyPopup = props => {\r\n  return (\r\n    <>\r\n      {props.company.address && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"map marker alternate\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"companyEditor.address\" />\r\n            </Header.Subheader>\r\n            {props.company.address}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.company.phone && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"phone\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"companyEditor.phone\" />\r\n            </Header.Subheader>\r\n            {<a href={\"tel:\" + props.company.phone}>{props.company.phone}</a>}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.company.email && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"at\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"companyEditor.email\" />\r\n            </Header.Subheader>\r\n            {\r\n              <a href={\"mailto:\" + props.company.email}>\r\n                {props.company.email}\r\n              </a>\r\n            }\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nCompanyPopup.propTypes = {};\r\n\r\nexport default CompanyPopup;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon, List } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HubDevices = props => {\r\n  if (!props.devices || props.devices.length < 1) {\r\n    return null;\r\n  }\r\n  function getListItem(item) {\r\n    return (\r\n      <List.Item as={Link} to={\"/r/devices/view/\" + item._id} key={item._id}>\r\n        {item.name}\r\n      </List.Item>\r\n    );\r\n  }\r\n  const cameras = props.devices\r\n    .filter(d => d.deviceType === \"camera\")\r\n    .map(c => getListItem(c));\r\n  const recorders = props.devices\r\n    .filter(d => d.deviceType === \"recorder\")\r\n    .map(r => getListItem(r));\r\n  const netdevs = props.devices\r\n    .filter(d => d.deviceType === \"netdev\")\r\n    .map(n => getListItem(n));\r\n  return (\r\n    <>\r\n      <div>\r\n        <Icon name={\"record\"} />\r\n        <List bulleted horizontal>\r\n          {cameras}\r\n        </List>\r\n      </div>\r\n      <div>\r\n        <Icon name=\"hdd\" />\r\n        <List bulleted horizontal>\r\n          {recorders}\r\n        </List>\r\n      </div>\r\n      <div>\r\n        <Icon name=\"microchip\" />\r\n        <List bulleted horizontal>\r\n          {netdevs}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nHubDevices.propTypes = {\r\n  devices: PropTypes.array.isRequired\r\n};\r\n\r\nexport default HubDevices;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Divider, Header, Icon, Popup} from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CompanyPopup from \"../molecules/CompanyPopup\";\r\nimport HubDevices from \"./HubDevices\";\r\n\r\nconst HubView = props => {\r\n  const hub = props.hub;\r\n  return (\r\n      <div className=\"eight wide column\">\r\n        <Header as=\"h2\">\r\n          <Icon name=\"warehouse\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"editor.name\" />\r\n            </Header.Subheader>\r\n            {hub.name}\r\n          </Header.Content>\r\n        </Header>\r\n        <Header as=\"h2\">\r\n          <Icon name=\"industry\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"editor.company\" />\r\n            </Header.Subheader>\r\n            <Popup\r\n              trigger={\r\n                <Link to={\"/r/companies/view/\" + hub.company._id}>\r\n                  {hub.company.name}\r\n                </Link>\r\n              }\r\n              flowing\r\n              hoverable\r\n            >\r\n              <CompanyPopup company={hub.company} />\r\n            </Popup>\r\n          </Header.Content>\r\n        </Header>\r\n        {hub.note && (\r\n          <Header as=\"h2\">\r\n            <Icon name=\"sticky note\" />\r\n            <Header.Content>\r\n              <Header.Subheader>\r\n                <FormattedMessage id=\"editor.note\" />\r\n              </Header.Subheader>\r\n              {hub.note}\r\n            </Header.Content>\r\n          </Header>\r\n        )}\r\n        <Divider />\r\n        <HubDevices devices={hub.devices}/>\r\n      </div>\r\n  );\r\n};\r\n\r\nHubView.propTypes = {\r\n  hub: PropTypes.object.isRequired\r\n};\r\n\r\nexport default HubView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst HubSettings = props => {\r\n  const hub = props.hub;\r\n  const create = props.create;\r\n  const update = props.update;\r\n  return (\r\n    <Dropdown\r\n      pointing={\"top right\"}\r\n      item\r\n      icon={{ name: \"wrench\", size: \"big\" }}\r\n    >\r\n      <Dropdown.Menu>\r\n        {create && (\r\n          <>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\"/r/devices/add/camera/\" + hub._id + \"/\" + hub.name}\r\n            >\r\n              <Icon name=\"record\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addCamera\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\"/r/devices/add/netdev/\" + hub._id + \"/\" + hub.name}\r\n            >\r\n              <Icon name=\"microchip\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addNetDev\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\"/r/devices/add/recorder/\" + hub._id + \"/\" + hub.name}\r\n            >\r\n              <Icon name=\"hdd\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addRecorder\" />\r\n            </Dropdown.Item>\r\n          </>\r\n        )}\r\n        {update && (\r\n          <Dropdown.Item as={Link} to={\"/r/hubs/edit/\" + hub._id}>\r\n            <Icon name=\"edit\" /> <FormattedMessage id=\"companyEditor.edit\" />\r\n          </Dropdown.Item>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nHubSettings.propTypes = {\r\n  hub: PropTypes.object.isRequired,\r\n  create: PropTypes.bool.isRequired,\r\n  update: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default HubSettings;\r\n","import React from 'react';\r\nimport {Loader} from \"semantic-ui-react\";\r\n\r\nconst Load = () => {\r\n  return (\r\n      <Loader active inline=\"centered\" />\r\n  );\r\n};\r\n\r\nexport default Load;","import React, { Component } from \"react\";\r\nimport { Checkbox, Comment } from \"semantic-ui-react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nclass CommentReplyForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      reply: \"\",\r\n      checked: false\r\n    };\r\n    this.handleIssueForm = this.handleIssueForm.bind(this);\r\n  }\r\n  handleIssueForm(value) {\r\n    this.setState({\r\n      reply: value\r\n    });\r\n  }\r\n  render() {\r\n    const { intl } = this.props;\r\n    return (\r\n      <>\r\n        <Comment.Actions>\r\n          <Comment.Action\r\n            onClick={e => this.setState({ show: !this.state.show })}\r\n          >\r\n            <FormattedMessage id={\"interface.reply\"}/>\r\n          </Comment.Action>\r\n        </Comment.Actions>\r\n        {this.state.show && (\r\n          <Form reply>\r\n            <Form.TextArea\r\n              onChange={(e, { value }) => this.handleIssueForm(value)}\r\n            />\r\n            <Button\r\n              type={\"button\"}\r\n              onClick={() =>\r\n                this.props.sendIssue(\r\n                  { reply: this.state.reply, open: !this.state.checked },\r\n                  this.props.issue\r\n                )\r\n              }\r\n              disabled={this.state.reply.length < 1}\r\n              content={intl.formatMessage({ id: \"interface.addReply\" })}\r\n              labelPosition=\"left\"\r\n              icon=\"edit\"\r\n              primary\r\n            />\r\n            <Checkbox\r\n              onChange={(e, data) => this.setState({ checked: data.checked })}\r\n              label={intl.formatMessage({ id: \"interface.solved\" })}\r\n            />\r\n          </Form>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(CommentReplyForm);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Comment,\r\n  Divider,\r\n  Form,\r\n  Header,\r\n  Icon\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  FormattedDate,\r\n  FormattedMessage,\r\n  FormattedRelative,\r\n  FormattedTime,\r\n  injectIntl\r\n} from \"react-intl\";\r\nimport { getIssues, sendIssue } from \"../actions/issuesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Load from \"../helpers/Load\";\r\nimport CommentReplyForm from \"../molecules/CommentReplyForm\";\r\n\r\nclass Issues extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      issue: \"\",\r\n      collapsed: false\r\n    };\r\n\r\n    this.handleIssueForm = this.handleIssueForm.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getIssues(\"hub\", this.props.hub._id);\r\n  }\r\n\r\n  handleIssueForm(value) {\r\n    this.setState({\r\n      issue: value\r\n    });\r\n  }\r\n  handleCheckbox = (e, { checked }) => this.setState({ collapsed: checked });\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    const { intl } = this.props;\r\n    let view = <></>;\r\n    const id = this.props.hub._id;\r\n    const issues = this.props.issuesReducer[id] || [];\r\n    if (this.props.issuesReducer.isIssuesFetching[id]) {\r\n      view = (\r\n        <div className=\"row\">\r\n          <Load />\r\n        </div>\r\n      );\r\n    } else if (this.props.issuesReducer.issuesError[id]) {\r\n      view = (\r\n        <div className=\"row\">\r\n          <div className=\"eight wide column center aligned\">\r\n            <Header icon>\r\n              <Icon name=\"frown outline\" />\r\n              Oops! Something went wrong...\r\n            </Header>\r\n            <Divider />\r\n            <code>{this.props.issuesReducer.error.toString()}</code>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (issues) {\r\n      const comments = issues.map(comment => {\r\n        return (\r\n          <Comment key={comment._id}>\r\n            <Comment.Avatar src={comment.user.picture} />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">{comment.user.name}</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>\r\n                  <FormattedDate value={comment.date} />{\" \"}\r\n                  <FormattedTime value={comment.date} /> (\r\n                  <FormattedRelative value={comment.date} />)\r\n                </div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>{comment.message}</Comment.Text>\r\n              {comment.open && (\r\n                <CommentReplyForm\r\n                  issue={comment._id}\r\n                  sendIssue={this.props.sendIssue}\r\n                />\r\n              )}\r\n            </Comment.Content>\r\n            <Comment.Group collapsed={collapsed}>\r\n              {comment.replies.map(reply => {\r\n                return (\r\n                  <Comment key={reply._id}>\r\n                    <Comment.Avatar src={reply.user.picture} />\r\n                    <Comment.Content>\r\n                      <Comment.Author as=\"a\">{reply.user.name}</Comment.Author>\r\n                      <Comment.Metadata>\r\n                        <div>\r\n                          <FormattedDate value={reply.date} />{\" \"}\r\n                          <FormattedTime value={reply.date} /> (\r\n                          <FormattedRelative value={reply.date} />)\r\n                        </div>\r\n                      </Comment.Metadata>\r\n                      <Comment.Text>{reply.reply}</Comment.Text>\r\n                    </Comment.Content>\r\n                  </Comment>\r\n                );\r\n              })}\r\n            </Comment.Group>\r\n          </Comment>\r\n        );\r\n      });\r\n      view = (\r\n        <div className=\"row\">\r\n          <div className=\"sixteen wide column\">\r\n            <Comment.Group threaded>\r\n              <Header as=\"h3\">\r\n                <Icon name={\"stethoscope\"} />{\" \"}\r\n                <FormattedMessage id=\"interface.issue\" />\r\n              </Header>\r\n              <Checkbox\r\n                checked={this.state.collapsed}\r\n                label={intl.formatMessage({ id: \"interface.collapseComments\" })}\r\n                onChange={this.handleCheckbox}\r\n              />\r\n              {comments}\r\n              <Divider />\r\n              {this.props.update && (\r\n                <Form reply>\r\n                  <Form.TextArea\r\n                    onChange={(e, { value }) => this.handleIssueForm(value)}\r\n                  />\r\n                  <Button\r\n                    type={\"button\"}\r\n                    content={<FormattedMessage id=\"interface.addIssue\" />}\r\n                    labelPosition=\"left\"\r\n                    icon=\"bug\"\r\n                    primary\r\n                    disabled={this.state.issue.length < 1}\r\n                    onClick={() =>\r\n                      this.props.sendIssue({\r\n                        hub: this.props.hub._id,\r\n                        issue: this.state.issue\r\n                      })\r\n                    }\r\n                  />\r\n                </Form>\r\n              )}\r\n            </Comment.Group>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return view;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    issuesReducer: state.issuesReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    sendIssue: (issue, issueId) => {\r\n      dispatch(sendIssue(issue, issueId));\r\n    },\r\n    getIssues: (byWhat, id) => {\r\n      dispatch(getIssues(byWhat, id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Issues)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Divider, Icon, Image } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport Photos from \"../organisms/Photos\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport HubView from \"../organisms/HubView\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\nimport HubSettings from \"../molecules/HubSettings\";\r\nimport Issues from \"../organisms/Issues\";\r\n\r\nconst HubViewTemplate = props => {\r\n  const hub = props.hub;\r\n  const company = hub.company;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"three wide column middle aligned\">\r\n            {company.logo && <Image src={serverURL + company.logo} />}\r\n          </div>\r\n          <Photos photos={hub.photos} />\r\n        </div>\r\n        <Divider />\r\n        {hub.update && <HubSettings create={hub.create} update={hub.update} hub={hub}/>}\r\n        <div className={\"row stackable\"}>\r\n          <HubView hub={hub} />\r\n          {hub.LatLng && (\r\n            <div className=\"eight wide column\">\r\n              <MapWrapper defaultCenter={hub.LatLng} marker={hub.LatLng} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Issues update={hub.update} hub={hub} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHubViewTemplate.propTypes = {\r\n  hub: PropTypes.object.isRequired\r\n};\r\n\r\nexport default HubViewTemplate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getItemLoader} from \"../HOCs/ItemLoader\";\r\nimport {hubResource} from \"../helpers/resourceNames\";\r\nimport HubViewTemplate from \"../templates/HubViewTemplate\";\r\n\r\nconst HubViewer = props => {\r\n  const hub = props.item;\r\n  return <HubViewTemplate hub={hub}/>;\r\n};\r\n\r\nHubViewer.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(HubViewer, hubResource);","const getDeviceIcon = deviceType => {\r\n  switch (deviceType) {\r\n    case \"camera\":\r\n      return \"record\";\r\n    case \"recorder\":\r\n      return \"hdd\";\r\n    case \"netdev\":\r\n      return \"microchip\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport default getDeviceIcon;\r\n","import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field, formValueSelector } from \"redux-form\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\nimport inputField from \"../molecules/FileInputField\";\r\nimport { connect } from \"react-redux\";\r\nimport { EditorReduxFormName } from \"../helpers/editorReduxFormName\";\r\nimport PropTypes from \"prop-types\";\r\nimport getDeviceIcon from \"../helpers/getDeviceIcon\";\r\n\r\n// TODO ptz\r\nconst DeviceEditForm = props => {\r\n  let iconName = getDeviceIcon(props.deviceType);\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"editor.name\" />\r\n        </label>\r\n        <Field\r\n          icon={iconName}\r\n          iconPosition=\"left\"\r\n          name=\"name\"\r\n          component={renderField}\r\n          type=\"text\"\r\n          validate={requiredValidator}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"editor.ip\" />\r\n        </label>\r\n        <Field\r\n          icon=\"terminal\"\r\n          iconPosition=\"left\"\r\n          name=\"ip\"\r\n          component={renderField}\r\n          type=\"text\"\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"editor.serial\" />\r\n        </label>\r\n        <Field\r\n          icon=\"barcode\"\r\n          iconPosition=\"left\"\r\n          name=\"serial\"\r\n          component={renderField}\r\n          type=\"text\"\r\n        />\r\n      </Form.Field>\r\n      {props.deviceType === \"camera\" && (\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"editor.ptz\" />\r\n          </label>\r\n          <Field name=\"ptz\" id=\"ptz\" component=\"input\" type=\"checkbox\" />\r\n        </Form.Field>\r\n      )}\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"editor.note\" />\r\n        </label>\r\n        <Field name=\"note\" component=\"textarea\" rows={3} />\r\n      </Form.Field>\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"companyEditor.uploadPhotos\"} />}\r\n        icon=\"file image\"\r\n        name=\"photos\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nDeviceEditForm.propTypes = {\r\n  deviceType: PropTypes.string.isRequired\r\n};\r\n\r\nconst selector = formValueSelector(EditorReduxFormName); // <-- same as form name\r\nexport default connect(state => {\r\n  const deviceType = selector(state, \"deviceType\");\r\n  return { deviceType };\r\n})(DeviceEditForm);\r\n","import React from \"react\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\nimport DeviceEditForm from \"../organisms/DeviceEditForm\";\r\n\r\nconst DeviceAdder = props => {\r\n  const hub = props.match.params.hubId;\r\n  const deviceType = props.match.params.deviceType;\r\n  return (\r\n    <Editor\r\n      resource={deviceResource}\r\n      initialValues={{ hub: hub, deviceType: deviceType }}\r\n    >\r\n      <DeviceEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nexport default DeviceAdder;\r\n","import React from \"react\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport DeviceEditForm from \"../organisms/DeviceEditForm\";\r\n\r\nfunction DeviceEditor(props) {\r\n  const device = props.item;\r\n  return (\r\n    <Editor\r\n      resource={deviceResource}\r\n      initialValues={{ ...device, photos: undefined, documents: undefined }}\r\n    >\r\n      <DeviceEditForm deviceType={device.deviceType} />\r\n    </Editor>\r\n  );\r\n}\r\n\r\nexport default getItemLoader(DeviceEditor, deviceResource);\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport getDeviceIcon from \"../helpers/getDeviceIcon\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst DeviceView = props => {\r\n  let iconName = getDeviceIcon(props.device.deviceType);\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Header as=\"h2\">\r\n        <Icon name={iconName} />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"editor.name\" />\r\n          </Header.Subheader>\r\n          {props.device.name}\r\n        </Header.Content>\r\n      </Header>\r\n      <Header as=\"h2\">\r\n        <Icon name=\"warehouse\" />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"common.hub\" />\r\n          </Header.Subheader>\r\n          <Link to={\"/r/hubs/view/\" + props.device.hub._id}>\r\n            {props.device.hub.name}\r\n          </Link>\r\n        </Header.Content>\r\n      </Header>\r\n      {props.device.deviceType === \"camera\" && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"expand\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"editor.ptz\" />\r\n            </Header.Subheader>\r\n            {props.device.ptz ? \"Yes\" : \"No\"}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.device.ip && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"terminal\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"editor.ip\" />\r\n            </Header.Subheader>\r\n            {props.device.ip}{\" \"}\r\n            <CopyToClipboard text={props.device.ip}>\r\n              <Icon color={\"blue\"} name=\"copy outline\" />\r\n            </CopyToClipboard>\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.device.serial && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"barcode\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"editor.serial\" />\r\n            </Header.Subheader>\r\n            {props.device.serial}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.device.note && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"sticky note\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"editor.note\" />\r\n            </Header.Subheader>\r\n            {props.device.note}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst DeviceSettings = props => {\r\n  const update = props.update;\r\n  const device = props.device;\r\n  return (\r\n    <Dropdown\r\n      pointing={\"top right\"}\r\n      item\r\n      icon={{ name: \"wrench\", size: \"big\" }}\r\n    >\r\n      <Dropdown.Menu>\r\n        {update && (\r\n          <Dropdown.Item as={Link} to={\"/r/devices/edit/\" + device._id}>\r\n            <Icon name=\"edit\" /> <FormattedMessage id=\"companyEditor.edit\" />\r\n          </Dropdown.Item>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nDeviceSettings.propTypes = {\r\n  update: PropTypes.bool.isRequired,\r\n  device: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DeviceSettings;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Divider, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Photos from \"../organisms/Photos\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DeviceView from \"../organisms/DeviceView\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport DeviceSettings from \"../molecules/DeviceSettings\";\r\n\r\nconst DeviceViewTemplate = props => {\r\n  const device = props.device;\r\n  const company = props.company;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"three wide column middle aligned\">\r\n            <Link to={\"/r/companies/view/\" + company._id}>\r\n              {company.logo ? (\r\n                <Image src={serverURL + company.logo} />\r\n              ) : (\r\n                <Header as=\"h1\">{company.name}</Header>\r\n              )}\r\n            </Link>\r\n          </div>\r\n          <Photos photos={device.photos} />\r\n        </div>\r\n        <Divider />\r\n        {device.update && (\r\n          <DeviceSettings update={device.update} device={device} />\r\n        )}\r\n        <div className=\"row stackable\">\r\n          <DeviceView device={device} />\r\n          {device.LatLng && (\r\n            <div className=\"eight wide column\">\r\n              <MapWrapper\r\n                defaultCenter={device.LatLng}\r\n                marker={device.LatLng || null}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDeviceViewTemplate.propTypes = {\r\n  device: PropTypes.object.isRequired,\r\n  company: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DeviceViewTemplate;\r\n","import React from \"react\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\nimport DeviceViewTemplate from \"../templates/DeviceViewTemplate\";\r\n\r\nconst DeviceViewer = props => {\r\n  const device = props.item;\r\n  const company = device.hub.company;\r\n  return (\r\n    <DeviceViewTemplate\r\n      device={device}\r\n      company={company}\r\n    />\r\n  );\r\n};\r\n\r\nexport default getItemLoader(DeviceViewer, deviceResource);\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\n\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const REQUEST_USERS = \"REQUEST_USERS\";\r\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestUser() {\r\n  return {\r\n    type: REQUEST_USERS\r\n  };\r\n}\r\n\r\nexport function receiveUser(user) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    payload: user\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\nexport function getUser(id) {\r\n  return dispatch => {\r\n    dispatch(requestUser());\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.get(\"users/\" + id, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(\r\n        result => {\r\n          console.log(result);\r\n          if (result.data.ok) {\r\n            dispatch(receiveUser(result.data.result));\r\n          }\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function postPermissions(company, user, CRUD) {\r\n  return dispatch => {\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.post(\r\n          \"permissions/\",\r\n          {\r\n            company: company,\r\n            user: user,\r\n            create: CRUD.create,\r\n            read: CRUD.read,\r\n            update: CRUD.update,\r\n            delete: CRUD.delete\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + idToken\r\n            }\r\n          }\r\n        )\r\n      );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Checkbox, Header, Icon, Search } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { getUser, postPermissions } from \"../actions/permissionsActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PermissionsSearchUser extends Component {\r\n  handleResultSelect = (e, { result }) => this.setState({ user: result._id });\r\n\r\n  handleCheckbox = (e, { label, checked }) => {\r\n    this.setState({\r\n      [label]: checked\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const getUser = this.props.getUser;\r\n    const postPermissions = this.props.postPermissions;\r\n    const users = this.props.users.map(user => {\r\n      return { title: user.name, image: user.picture, _id: user._id };\r\n    });\r\n    const company = this.props.company;\r\n    return (\r\n      <div className=\"row stackable\">\r\n        <div className=\"eight wide column\">\r\n          <Header as=\"h4\">Find user by Id.</Header>\r\n          <Search\r\n            onSearchChange={(e, { value }) => getUser(value)}\r\n            results={users}\r\n            onResultSelect={this.handleResultSelect}\r\n          />\r\n        </div>\r\n        <div className=\"eight wide column\">\r\n          <Checkbox label=\"create\" onChange={this.handleCheckbox} />\r\n          <Checkbox label=\"read\" onChange={this.handleCheckbox} />\r\n          <Checkbox label=\"update\" onChange={this.handleCheckbox} />\r\n          <Checkbox label=\"delete\" onChange={this.handleCheckbox} />\r\n        </div>\r\n        <div className=\"sixteen wide column center aligned\">\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() =>\r\n              postPermissions(company, this.state.user, {\r\n                create: this.state[\"create\"] || false,\r\n                read: this.state[\"read\"] || false,\r\n                update: this.state[\"update\"] || false,\r\n                delete: this.state[\"delete\"] || false\r\n              })\r\n            }\r\n            icon\r\n            labelPosition=\"right\"\r\n            positive\r\n          >\r\n            <FormattedMessage id=\"editor.save\" /> <Icon name=\"save\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.permissionsReducer.users\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getUser: id => dispatch(getUser(id)),\r\n    postPermissions: (company, user, CRUD) =>\r\n      dispatch(postPermissions(company, user, CRUD))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PermissionsSearchUser);\r\n","import React from 'react';\r\nimport PermissionsSearchUser from \"../organisms/PermissionsSearchUser\";\r\n\r\nconst PermissionsTemplate = props => {\r\n  return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <PermissionsSearchUser company={props.company}/>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default PermissionsTemplate;","import React from \"react\";\r\nimport PermissionsTemplate from \"../templates/PermissionsTemplate\";\r\n\r\nconst Permissions = props => {\r\n  return <PermissionsTemplate company={props.match.params.companyId} />;\r\n};\r\n\r\nexport default Permissions;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\n\r\n/*\r\n * actions\r\n */\r\n\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_IS_LOGGED = \"SET_IS_LOGGED\";\r\nexport const SET_DEFAULT_CENTER = \"SET_DEFAULT_CENTER\";\r\nexport const SET_USER_ID = \"SET_USER_ID\";\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function setError(error) {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: error\r\n  };\r\n}\r\n\r\nexport function changeLanguage(language) {\r\n  return {\r\n    type: \"CHANGE_LANGUAGE\",\r\n    payload: language\r\n  };\r\n}\r\nexport function updateUser(user) {\r\n  return {\r\n    type: UPDATE_USER,\r\n    payload: user\r\n  };\r\n}\r\n\r\nexport function setIsLogged(isLogged) {\r\n  return {\r\n    type: SET_IS_LOGGED,\r\n    payload: isLogged\r\n  };\r\n}\r\n\r\nexport function setDefaultCenter(defaultCenter) {\r\n  return {\r\n    type: SET_DEFAULT_CENTER,\r\n    payload: defaultCenter\r\n  };\r\n}\r\n\r\nexport function setUserId(id) {\r\n  return {\r\n    type: SET_USER_ID,\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function login() {\r\n  return function(dispatch, getState) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(\"auth\", {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                if (result.data.ok) {\r\n                  dispatch(setIsLogged(true));\r\n                }\r\n              },\r\n              error => {\r\n                dispatch(setError(error.toString()));\r\n              }\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return function(dispatch, getState) {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(result => {\r\n        dispatch(setIsLogged(false));\r\n      })\r\n      .catch(error => {});\r\n  };\r\n}\r\n\r\nexport function getUserId() {\r\n  return function(dispatch, getState) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(\"users/\", {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(setUserId(result.data._id));\r\n              },\r\n              error => {\r\n                dispatch(setError(error.toString()));\r\n              }\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function getDefaultCenterFromUserAgent() {\r\n  return function(dispatch, getState) {\r\n    const language = getState().userReducer.language;\r\n    navigator.geolocation.getCurrentPosition(\r\n      pos => {\r\n        dispatch(\r\n          setDefaultCenter({\r\n            lat: pos.coords.latitude,\r\n            lng: pos.coords.longitude\r\n          })\r\n        );\r\n      },\r\n      // User blocked geolocation\r\n      error => {\r\n        switch (language) {\r\n          case \"en-GB\":\r\n            // Big Ben\r\n            dispatch(\r\n                setDefaultCenter({\r\n                  lat: 51.50078340519703,\r\n                  lng: -0.12459538923064883\r\n                })\r\n            );\r\n            break;\r\n          case \"en-US\":\r\n            // HP Garage\r\n            dispatch(\r\n              setDefaultCenter({\r\n                lat: 37.44303269805327,\r\n                lng: -122.15461939573288\r\n              })\r\n            );\r\n            break;\r\n          case \"uk\":\r\n            // Independence Monument, Kiev\r\n            dispatch(\r\n              setDefaultCenter({\r\n                lat: 50.44956196647267,\r\n                lng: 30.52538046615541\r\n              })\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { getUserId, logout } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass User extends Component {\r\n  componentDidMount() {\r\n    this.props.getUserId();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"one column row user\">\r\n            <div className=\"column\">\r\n              <Image\r\n                src={this.props.userReducer.user.photoURL}\r\n                centered\r\n                size=\"tiny\"\r\n              />\r\n            </div>\r\n            <div className=\"column center aligned\">\r\n              <Header as=\"h2\">{this.props.userReducer.user.displayName}</Header>\r\n            </div>\r\n            <div className=\"column center aligned\">\r\n              Id: {this.props.userReducer.userId}\r\n            </div>\r\n            <div className=\"column right aligned\">\r\n              <Button\r\n                color=\"green\"\r\n                type=\"button\"\r\n                onClick={() => this.props.logout()}\r\n                icon\r\n                labelPosition=\"right\"\r\n              >\r\n                <FormattedMessage id=\"interface.signOut\" />\r\n                <Icon name=\"sign-out\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { userReducer: state.userReducer };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n    getUserId: () => dispatch(getUserId())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(User);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flag, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\n\r\nconst AboutUsProfile = props => {\r\n  return (\r\n    <>\r\n      <Image src={props.imageSrc} size=\"small\" circular centered />\r\n      <Header as={\"h5\"}>{props.position}</Header>\r\n      <Header>\r\n        {props.name}{\" \"}\r\n        {props.linkedin && (\r\n          <a href={props.linkedin}>\r\n            <Icon name=\"linkedin\" />\r\n          </a>\r\n        )}\r\n        {props.telegram && (\r\n          <a href={props.telegram}>\r\n            <Icon name=\"telegram\" />\r\n          </a>\r\n        )}\r\n      </Header>\r\n      <span>Location: </span>\r\n      <Flag name={props.flag} />\r\n      <span>{props.location}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nAboutUsProfile.propTypes = {\r\n  imageSrc: PropTypes.string,\r\n  position: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  linkedin: PropTypes.string,\r\n  telegram: PropTypes.string,\r\n  location: PropTypes.string.isRequired,\r\n  flag: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AboutUsProfile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flag, Grid, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport AboutUsProfile from \"../organisms/AboutUsProfile\";\r\n\r\nconst AboutUsTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"twelve wide centered column\">\r\n            <Header as={\"h1\"} textAlign={\"center\"}>\r\n              <FormattedMessage id=\"about_us.title\" />\r\n            </Header>\r\n            <FormattedMessage id=\"about_us.description\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Grid divided>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Header as={\"h3\"} textAlign={\"center\"}>\r\n              <FormattedMessage id=\"about_us.team\" />\r\n            </Header>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={4}>\r\n            <AboutUsProfile\r\n              imageSrc={\r\n                \"https://instagram.fiev15-1.fna.fbcdn.net/vp/dd9779b63516ee8b592d577130aeedaf/5CFE67AA/t51.2885-15/e35/s320x320/12142209_1918743445016611_999285338_n.jpg?_nc_ht=instagram.fiev15-1.fna.fbcdn.net\"\r\n              }\r\n              position={\"Developer\"}\r\n              name={\"Artem Trachuk\"}\r\n              linkedin={\"https://www.linkedin.com/in/artem-trachuk/\"}\r\n              telegram={\"https://t.me/artem_trachuk\"}\r\n              flag={\"ua\"}\r\n              location={\"Odessa, Ukraine\"}\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <AboutUsProfile\r\n              imageSrc={\r\n                \"https://instagram.fiev15-1.fna.fbcdn.net/vp/ae1fface2753302001d27f276748c28f/5CDE193E/t51.2885-15/sh0.08/e35/s640x640/36753575_466378133826623_7677412311144857600_n.jpg?_nc_ht=instagram.fiev15-1.fna.fbcdn.net\"\r\n              }\r\n              position={\"Translator\"}\r\n              name={\"Михаил Пожарников\"}\r\n              linkedin={\"\"}\r\n              telegram={\"\"}\r\n              flag={\"ee\"}\r\n              location={\"Narva, Estonia\"}\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <AboutUsProfile\r\n              imageSrc={\r\n                \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n              }\r\n              position={\"Tester\"}\r\n              name={\"Максим Саенко\"}\r\n              flag={\"ua\"}\r\n              location={\"Odessa, Ukraine\"}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nAboutUsTemplate.propTypes = {};\r\n\r\nexport default AboutUsTemplate;\r\n","import React from \"react\";\r\nimport AboutUsTemplate from \"../templates/AboutUsTemplate\";\r\n\r\nconst AboutUs = () => {\r\n  return <AboutUsTemplate />;\r\n};\r\n\r\nexport default AboutUs;\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Networks from \"./Networks\";\r\nimport Contacts from \"./Contacts\";\r\nimport CompanyAdder from \"./CompanyAdder\";\r\nimport CompanyEditor from \"./CompanyEditor\";\r\nimport CompanyViewer from \"./CompanyViewer\";\r\nimport HubAdder from \"./HubAdder\";\r\nimport HubEditor from \"./HubEditor\";\r\nimport HubViewer from \"./HubViewer\";\r\nimport DeviceAdder from \"./DeviceAdder\";\r\nimport DeviceEditor from \"./DeviceEditor\";\r\nimport DeviceViewer from \"./DeviceViewer\";\r\nimport Permissions from \"./Permissions\";\r\nimport User from \"./User\";\r\nimport AboutUs from \"./AboutUs\";\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/r/home\" component={Home} />\r\n        <Route path=\"/r/networks\" component={Networks} />\r\n        <Route path=\"/r/contacts\" component={Contacts} />\r\n        <Route exact path=\"/r/companies/add\" component={CompanyAdder} />\r\n        <Route exact path=\"/r/companies/edit/:id\" component={CompanyEditor} />\r\n        <Route exact path=\"/r/companies/view/:id\" component={CompanyViewer} />\r\n        <Route\r\n          exact\r\n          path=\"/r/hubs/add/:companyId/:companyName\"\r\n          component={HubAdder}\r\n        />\r\n        <Route exact path=\"/r/hubs/edit/:id\" component={HubEditor} />\r\n        <Route exact path=\"/r/hubs/view/:id\" component={HubViewer} />\r\n        <Route\r\n          exact\r\n          path=\"/r/devices/add/:deviceType/:hubId/:hubName\"\r\n          component={DeviceAdder}\r\n        />\r\n        <Route exact path=\"/r/devices/edit/:id\" component={DeviceEditor} />\r\n        <Route exact path=\"/r/devices/view/:id\" component={DeviceViewer} />\r\n        <Route path=\"/r/permissions/:companyId\" component={Permissions} />\r\n        <Route exact path=\"/r/user\" component={User} />\r\n        <Route path={\"/r/about_us\"} component={AboutUs} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport {Header, Icon} from \"semantic-ui-react\";\r\n\r\nclass Guest extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"ui container\">\r\n          <div className=\"ui grid\">\r\n            <div className=\"sixteen wide column center aligned\">\r\n              <Header as=\"h1\">\r\n                <Icon name=\"record\" className=\"green\" /> Monitor PS\r\n              </Header>\r\n              <Header as=\"h4\">\r\n                Tool for installed surveillance devices monitoring. We will\r\n                help you to keep the networks be structured and categorized.\r\n              </Header>\r\n            </div>\r\n            <div className=\"sixteen wide column\">\r\n              {this.props.auth}\r\n            </div>\r\n          </div>\r\n          <div className=\"sixteen wide column\">\r\n            <span>share access with co-workers</span>\r\n            <span>\r\n                don't rely on multiple text documents, chat history or even your\r\n                memory\r\n              </span>\r\n            <span>track issues</span>\r\n            <span>all your networks in one place</span>\r\n            <span>save locations, photos, documents</span>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Guest;\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Image, Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\n\r\nclass TopNavigation extends Component {\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ui container\"\r\n        style={{ marginBottom: \"5vh\", marginTop: \"3vh\" }}\r\n      >\r\n        <Menu secondary stackable>\r\n          <Menu.Item>\r\n            <Icon name=\"record\" className=\"green\" /> <b>Monitor PS</b>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/\"\r\n            name=\"home\"\r\n            active={this.props.navigationReducer.currentLink === \"home\"}\r\n          >\r\n            <Icon name=\"home\" /> <FormattedMessage id=\"top.home\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/r/networks\"\r\n            name=\"networks\"\r\n            active={this.props.navigationReducer.currentLink === \"networks\"}\r\n          >\r\n            <Icon name=\"server\" /> <FormattedMessage id=\"top.networks\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            disabled\r\n            as={Link}\r\n            to=\"/r/iptable\"\r\n            name=\"iptable\"\r\n            active={this.props.navigationReducer.currentLink === \"iptable\"}\r\n          >\r\n            <Icon name=\"terminal\" /> <FormattedMessage id=\"interface.iptable\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/r/contacts\"\r\n            name=\"contacts\"\r\n            active={this.props.navigationReducer.currentLink === \"contacts\"}\r\n          >\r\n            <Icon name=\"address book\" /> <FormattedMessage id=\"top.contacts\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            disabled\r\n            as={Link}\r\n            to=\"/r/documents\"\r\n            name=\"documents\"\r\n            active={this.props.navigationReducer.currentLink === \"documents\"}\r\n          >\r\n            <Icon name=\"file pdf\" />{\" \"}\r\n            <FormattedMessage id=\"companyEditor.documents\" />\r\n          </Menu.Item>\r\n          <Menu.Menu position=\"right\">\r\n            {this.props.displayName && (\r\n              <>\r\n                <Menu.Item as={Link} to=\"/r/user\">\r\n                  <Image src={this.props.photo} avatar />\r\n                  {this.props.displayName}\r\n                </Menu.Item>\r\n                {/*<Menu.Item onClick={this.props.signOut}>*/}\r\n                {/*<Icon name=\"sign-out\" /> <FormattedMessage id=\"interface.signOut\" />*/}\r\n                {/*</Menu.Item>*/}\r\n              </>\r\n            )}\r\n          </Menu.Menu>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    navigationReducer: state.navigationReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TopNavigation)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Now from \"../now.png\";\r\nimport { Dropdown, Flag, Icon, List } from \"semantic-ui-react\";\r\nimport { changeLanguage } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BottomNavigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onLanguageChange = this.onLanguageChange.bind(this);\r\n    this.state = {\r\n      language: props.user.language\r\n    };\r\n  }\r\n  onLanguageChange = language => {\r\n    this.props.changeLanguage(language);\r\n  };\r\n  render() {\r\n    const { intl } = this.props;\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: \"10vh\" }}>\r\n        <div className=\"ui grid\">\r\n          <div className=\"three column middle aligned stackable row\">\r\n            <div className=\"three wide column\">\r\n              <Dropdown\r\n                floating\r\n                text={intl.formatMessage({ id: \"interface.language\" })}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Header>America</Dropdown.Header>\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"en-US\")}>\r\n                    <Flag name=\"us\" />\r\n                    English (US)\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Header>Europe</Dropdown.Header>\r\n                  {/*<Dropdown.Item onClick={() => this.onLanguageChange(\"ee\")}>*/}\r\n                    {/*<Flag name=\"ee\" />*/}\r\n                    {/*Eesti*/}\r\n                  {/*</Dropdown.Item>*/}\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"en-GB\")}>\r\n                    <Flag name=\"gb\" />\r\n                    English (UK)\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"uk\")}>\r\n                    <Flag name=\"ua\" />\r\n                    Українська\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Header>Asia</Dropdown.Header>\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"ru\")}>\r\n                    <Flag name=\"ru\" />\r\n                    Русский\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n            <div className=\"ten wide column center aligned\">\r\n              <List bulleted horizontal link>\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"bullhorn\" /> Newsroom*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as=\"a\">*/}\r\n                  {/*<Icon name=\"bug\" /> <FormattedMessage id=\"interface.reportbug\" />*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"github\" /> GitHub*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as={Link} to={\"/r/about_us\"}>*/}\r\n                  {/*<Icon name=\"users\" /> <FormattedMessage id=\"about_us.title\" />*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"heart outline\" /> Donate*/}\r\n                {/*</List.Item>*/}\r\n              </List>\r\n            </div>\r\n            <div className=\"three wide column right aligned column\">\r\n              <img src={Now} alt=\"Ukraine Now\" className=\"ukraine_now_logo\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { user: state.userReducer };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeLanguage: language => {\r\n      dispatch(changeLanguage(language));\r\n    }\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BottomNavigation)\r\n);\r\n","import React from \"react\";\r\nimport AboutUs from \"../pages/AboutUs\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Guest from \"../pages/Guest\";\r\n\r\nconst UnprotectedRoutes = () => {\r\n  return (\r\n    <>\r\n      <Route exact path={\"/\"} component={Guest} />\r\n      <Route path={\"/r/about_us\"} component={AboutUs} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UnprotectedRoutes;\r\n","import React from \"react\";\r\nimport { Icon, Label, Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GuestTopBar = props => {\r\n  return (\r\n    <div\r\n      className=\"ui container\"\r\n      style={{ marginBottom: \"5vh\", marginTop: \"3vh\" }}\r\n    >\r\n      <Menu secondary stackable>\r\n        <Menu.Item as={Link} to=\"/\">\r\n          <Icon name=\"record\" className=\"green\" /> <b>Monitor PS</b>\r\n          <Label color=\"blue\" floating>\r\n            beta\r\n          </Label>\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item>{props.auth}</Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuestTopBar.propTypes = {};\r\n\r\nexport default GuestTopBar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// react-router\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// redux\nimport { connect } from \"react-redux\";\n// components\nimport Routes from \"./pages/Routes\";\nimport Guest from \"./pages/Guest\";\nimport {\n  getDefaultCenterFromUserAgent,\n  login,\n  logout,\n  updateUser\n} from \"./actions/userActions\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport TopNavigation from \"./organisms/TopNavigation\";\n// react-intl\nimport { IntlProvider } from \"react-intl\";\nimport { addLocaleData } from \"react-intl\";\nimport en from \"react-intl/locale-data/en\";\nimport uk from \"react-intl/locale-data/uk\";\nimport messages_uk from \"./locales/uk\";\nimport messages_en from \"./locales/en\";\n// Import FirebaseAuth and firebase.\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport ErrorTemplate from \"./templates/ErrorTemplate\";\nimport BottomNavigation from \"./organisms/BottomNavigation\";\nimport UnprotectedRoutes from \"./helpers/UnprotectedRoutes\";\nimport GuestTopBar from \"./organisms/GuestTopBar\";\n\n// Configure Firebase.\nconst config = {\n  apiKey: \"AIzaSyAFo_lb3m4A7-PmXuahyeVD3xhGdCZGJi8\",\n  authDomain: \"monitor-ps.firebaseapp.com\",\n  databaseURL: \"https://monitor-ps.firebaseio.com\",\n  projectId: \"monitor-ps\",\n  storageBucket: \"monitor-ps.appspot.com\",\n  messagingSenderId: \"497412012279\"\n};\n\nfirebase.initializeApp(config);\n\naddLocaleData([...en, ...uk]);\n\nconst messages = {\n  uk: messages_uk,\n  \"en-US\": messages_en,\n  \"en-GB\": messages_en\n};\n\n// TODO bookmarks, tags\n\nclass App extends Component {\n  // The component's Local state.\n  state = {\n    isSignedIn: false, // Local signed-in state.,\n    hasError: false\n  };\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error: error };\n  }\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n      this.props.updateUser(user);\n      if (user) {\n        this.props.login();\n        this.props.getDefaultCenterFromUserAgent();\n      }\n    });\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    const user = this.props.userR.user;\n    let view = <></>;\n    if (this.state.hasError || this.props.userR.error) {\n      view = <ErrorTemplate error={this.state.hasError || this.props.userR.error} />;\n    } else if (user === undefined) {\n      view = (\n        <div className=\"ui container\">\n          <Dimmer active inverted>\n            <Loader size=\"large\">Loading</Loader>\n          </Dimmer>\n        </div>\n      );\n    } else if (user === null) {\n      view = (\n        <>\n          <GuestTopBar auth={\n            <StyledFirebaseAuth\n                uiConfig={this.uiConfig}\n                firebaseAuth={firebase.auth()}\n            />\n          }/>\n          {/*<Guest*/}\n            {/*auth={*/}\n              {/*<StyledFirebaseAuth*/}\n                {/*uiConfig={this.uiConfig}*/}\n                {/*firebaseAuth={firebase.auth()}*/}\n              {/*/>*/}\n            {/*}*/}\n          {/*/>*/}\n          <UnprotectedRoutes />\n          <BottomNavigation />\n        </>\n      );\n    } else if (user && this.props.userR.isLoggedIn) {\n      view = (\n        <>\n          <TopNavigation\n            displayName={this.props.userR.user.displayName}\n            photo={this.props.userR.user.photoURL}\n            signOut={this.props.logout}\n          />\n          <Routes />\n          <BottomNavigation />\n        </>\n      );\n    }\n    return (\n      <IntlProvider\n        textComponent={React.Fragment}\n        locale={this.props.userR.language}\n        messages={messages[this.props.userR.language]}\n      >\n        <Router>\n          <>{view}</>\n        </Router>\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userR: state.userReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: name => {\n      dispatch(updateUser(name));\n    },\n    login: () => {\n      dispatch(login());\n    },\n    logout: () => {\n      dispatch(logout());\n    },\n    getDefaultCenterFromUserAgent: () => {\n      dispatch(getDefaultCenterFromUserAgent());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  RECEIVE_CONTACTS,\r\n  REQUEST_CONTACTS,\r\n  SET_CONTACTS_ERROR\r\n} from \"../actions/contactsActions\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nfunction contacts(\r\n  state = { isFetching: false, contacts: [], error: null },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REQUEST_CONTACTS:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case RECEIVE_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        isFetching: false,\r\n        error: null\r\n      };\r\n    case SET_CONTACTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst contactsReducer = combineReducers({ contacts });\r\n\r\nexport default contactsReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport dataReducer from \"./reducers/dataReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { issuesReducer } from \"./reducers/issuesReducer\";\r\nimport { navigationReducer } from \"./reducers/navigationReducer\";\r\nimport contactsReducer from \"./reducers/contactsReducer\";\r\nimport { permissionsReducer } from \"./reducers/permissionsReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    userReducer: userReducer,\r\n    dataReducer: dataReducer,\r\n    form: formReducer,\r\n    issuesReducer: issuesReducer,\r\n    navigationReducer: navigationReducer,\r\n    contactsReducer: contactsReducer,\r\n    permissionsReducer: permissionsReducer\r\n  }),\r\n  {},\r\n  applyMiddleware(thunkMiddleware, logger )\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  SET_DEFAULT_CENTER,\r\n  SET_ERROR,\r\n  SET_IS_LOGGED,\r\n  SET_USER_ID,\r\n  UPDATE_USER\r\n} from \"../actions/userActions\";\r\n\r\nexport default function userReducer(\r\n  state = {\r\n    language: localStorage.getItem(\"Language\") || \"en-US\",\r\n    user: undefined,\r\n    error: null,\r\n    isLoggedIn: false,\r\n    defaultCenter: null,\r\n    userId: ''\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      state = {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n      break;\r\n    case SET_ERROR:\r\n      state = {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n      break;\r\n    case SET_IS_LOGGED:\r\n      state = {\r\n        ...state,\r\n        isLoggedIn: true\r\n      };\r\n      break;\r\n    case \"CHANGE_LANGUAGE\":\r\n      if (typeof Storage !== \"undefined\") {\r\n        localStorage.setItem(\"Language\", action.payload);\r\n      }\r\n      state = {\r\n        ...state,\r\n        language: action.payload\r\n      };\r\n      break;\r\n    case SET_DEFAULT_CENTER:\r\n      state = {\r\n        ...state,\r\n        defaultCenter: action.payload\r\n      };\r\n      break;\r\n    case SET_USER_ID:\r\n      state = {\r\n        ...state,\r\n        userId: action.payload\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","import {\r\n  RECEIVE_ITEM,\r\n  RECEIVE_ITEMS,\r\n  REQUEST_API\r\n} from \"../actions/dataActions\";\r\n\r\nexport default function dataReducer(state = { isFetching: false }, action) {\r\n  let items = [];\r\n  switch (action.type) {\r\n    case RECEIVE_ITEMS:\r\n      if (state[action.resource]) {\r\n        items = [...state[action.resource]];\r\n        action.payload.forEach(item => {\r\n          const index = items.findIndex(i => i._id === item._id);\r\n          if (index === -1) {\r\n            items.push(item);\r\n          } else {\r\n            items[index] = { ...items[index], ...item };\r\n          }\r\n        });\r\n      } else {\r\n        items = action.payload;\r\n      }\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        [action.resource]: items\r\n      };\r\n    case RECEIVE_ITEM:\r\n      if (state[action.resource]) {\r\n        items = [...state[action.resource]];\r\n        const index = items.findIndex(i => i._id === action.payload._id);\r\n        index === -1\r\n          ? items.push(action.payload)\r\n          : (items[index] = action.payload);\r\n      } else {\r\n        items.push(action.payload);\r\n      }\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        [action.resource]: items\r\n      };\r\n    case REQUEST_API:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_ISSUES_ERROR,\r\n  RECEIVE_ISSUES,\r\n  REQUEST_ISSUES\r\n} from \"../actions/issuesActions\";\r\n\r\nexport function issuesReducer(\r\n  state = { isIssuesFetching: {}, issuesError: {} },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REQUEST_ISSUES:\r\n      return {\r\n        ...state,\r\n        isIssuesFetching: { [action.payload]: true }\r\n      };\r\n    case SET_ISSUES_ERROR:\r\n      return {\r\n        ...state,\r\n        isIssuesFetching: { [action.payload.resource]: false },\r\n        issuesError: { [action.payload.resource]: action.payload.error }\r\n      };\r\n    case RECEIVE_ISSUES:\r\n      return {\r\n        ...state,\r\n        isIssuesFetching: { [action.payload.resource]: false },\r\n        [action.payload.resource]: action.payload.data,\r\n        issuesError: { [action.payload.resource]: undefined }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_NAVIGATED_LINK } from \"../actions/navigationActions\";\r\n\r\nexport function navigationReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_NAVIGATED_LINK:\r\n      state = {\r\n        ...state,\r\n        currentLink: action.payload\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","import { RECEIVE_USERS, REQUEST_USERS } from \"../actions/permissionsActions\";\r\n\r\nexport function permissionsReducer(state = { users: [] }, action) {\r\n  switch (action.type) {\r\n    case REQUEST_USERS:\r\n      return {\r\n        ...state\r\n      };\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        users: [action.payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// redux\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxStore\";\n// styles\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}