{"version":3,"sources":["warehouseSolid.svg","now.png","helpers/serverURL.js","axiosInstance.js","actions/issuesActions.js","actions/navigationActions.js","templates/LoadingTemplate.js","organisms/HomeIssue.js","organisms/MapWrapper.js","templates/HomeTemplate.js","templates/NoDataTemplate.js","templates/ErrorTemplate.js","pages/Home.js","helpers/resourceNames.js","actions/dataActions.js","molecules/CompanyHub.js","organisms/NetworksCompany.js","templates/NetworksTemplate.js","pages/Networks.js","molecules/Contact.js","templates/ContactsTemplate.js","actions/contactsActions.js","pages/Contacts.js","molecules/DeleteDataByIdDialog.js","organisms/PhotoEditorOrganism.js","organisms/DocEditorOrganism.js","HOCs/Editor.js","helpers/editorReduxFormName.js","molecules/renderField.js","helpers/reduxFormValidators.js","molecules/FileInputField.js","organisms/CompanyEditForm.js","molecules/CompanyAddHeader.js","pages/CompanyAdder.js","HOCs/ItemLoader.js","molecules/CompanyEditHeader.js","pages/CompanyEditor.js","organisms/Photos.js","organisms/CompanyView.js","organisms/AddContact.js","molecules/CompanySettings.js","organisms/CompanyContacts.js","organisms/DocsOrganism.js","organisms/LogoPhotosHeaders.js","templates/CompanyViewTemplate.js","pages/CompanyViewer.js","organisms/HubEditForm.js","pages/HubAdder.js","pages/HubEditor.js","organisms/HubDevices.js","organisms/HubView.js","molecules/HubSettings.js","helpers/Load.js","molecules/CommentReplyForm.js","molecules/IssueUnlock.js","actions/userActions.js","molecules/IssueDelete.js","molecules/IssueEdit.js","organisms/Issues.js","templates/HubViewTemplate.js","pages/HubViewer.js","helpers/getDeviceIcon.js","organisms/DeviceEditForm.js","pages/DeviceAdder.js","pages/DeviceEditor.js","organisms/DeviceView.js","molecules/DeviceSettings.js","templates/DeviceViewTemplate.js","pages/DeviceViewer.js","actions/permissionsActions.js","organisms/PermissionsSearchUser.js","templates/PermissionsTemplate.js","pages/Permissions.js","pages/User.js","organisms/AboutUsProfile.js","templates/AboutUsTemplate.js","pages/AboutUs.js","organisms/IpTableTemplate.js","pages/IpTable.js","organisms/ContactOrganism.js","organisms/QrOrganism.js","templates/ContactTemplate.js","pages/ContactPage.js","pages/Routes.js","organisms/TopNavigation.js","organisms/BottomNavigation.js","pages/Guest.js","helpers/UnprotectedRoutes.js","organisms/GuestTopBar.js","App.js","serviceWorker.js","reduxStore.js","reducers/userReducer.js","reducers/dataReducer.js","reducers/issuesReducer.js","reducers/navigationReducer.js","reducers/contactsReducer.js","reducers/permissionsReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","serverURL","axiosHttpClient","axios","create","baseURL","REQUEST_ISSUES","SET_ISSUES_ERROR","RECEIVE_ISSUES","requestIssues","resource","type","payload","setIssuesError","error","receiveIssues","data","byWhat","getIssues","id","dispatch","getState","firebase","auth","currentUser","getIdToken","then","idToken","get","headers","Authorization","result","SET_NAVIGATED_LINK","setNavigatedLink","link","LoadingTemplate","props","react_default","a","createElement","className","Loader","active","inline","size","HomeIssue","issue","Comment","Avatar","src","user","picture","Content","Author","as","name","Metadata","Icon","Link","to","company","_id","hub","Text","message","MapWrapper","compose","withProps","googleMapURL","userR","language","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","warehouse","scaledSize","width","url","warehouseSolid","input","_props$input","value","onChange","lib","mapTypeId","onClick","e","lat","latLng","lng","defaultZoom","defaultCenter","marker","position","markers","map","Fragment","key","LatLng","icon","connect","state","userReducer","HomeTemplate","Header","index_es","description","values","displayName","Group","issues","organisms_HomeIssue","organisms_MapWrapper","filter","i","NoDataTemplate","color","children","ErrorTemplate","Home","this","isFetching","length","templates_ErrorTemplate","templates_LoadingTemplate","templates_NoDataTemplate","templates_HomeTemplate","Component","issuesReducer","isIssuesFetching","issuesError","companyResource","deviceResource","RECEIVE_ITEMS","RECEIVE_ITEM","REQUEST_API","DELETE_ITEM","getDataByAPI","item","receiveItem","items","receiveItems","deleteDataByAPI","resourceName","query","itemId","delete","deleteItem","CompanyHub","marginBottom","Card","raised","Popup","trigger","Label","ribbon","one","other","count","content","Description","List","bulleted","horizontal","devices","Item","d","deviceType","equipment","NetworksCompany","logo","Image","path","hubs","molecules_CompanyHub","Button","Divider","NetworksTemplate","companies","organisms_NetworksCompany","Networks","dataReducer","templates_NetworksTemplate","loadingReducer","Contact","showCompany","contact","contactNote","note","QRCodeValue","phone","Grid","verticalAlign","Column","floated","textAlign","Modal","qrcode_react_lib_default","Subheader","href","ContactsTemplate","itemsPerRow","contacts","molecules_Contact","REQUEST_CONTACTS","RECEIVE_CONTACTS","SET_CONTACTS_ERROR","RECEIVE_CONTACT","fetchContacts","setContactsError","fetchContact","Contacts","allContacts","templates_ContactsTemplate","contactsReducer","DeleteDataByIdDialog","context","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","open","setState","close","deleteData","bind","assertThisInitialized","_this2","onOpen","onClose","Dropdown","basic","header","body","Actions","inverted","PhotoEditorOrganism","callback","queryId","label","corner","fluid","DocEditorOrganism","originalname","Editor","_this$props","pristine","submitting","handleSubmit","undefined","currentLink","Redirect","Form","onSubmit","patchData","postData","photos","photo","organisms_PhotoEditorOrganism","initialValues","documents","doc","organisms_DocEditorOrganism","Field","component","labelPosition","positive","disabled","navigationReducer","formData","FormData","append","JSON","stringify","assign","objectSpread","post","content-type","postDataByAPI","patch","patchDataByAPI","addMarker","change","reduxForm","form","renderField","_ref","iconPosition","_ref$meta","meta","touched","warning","Input","placeholder","pointing","requiredValidator","FileInputField","text","htmlFor","hidden","multiple","accept","target","files","CompanyEditForm","validate","rows","inputField","CompanyAddHeader","CompanyAdder","HOCs_Editor","molecules_CompanyAddHeader","organisms_CompanyEditForm","getItemLoader","WrappedComponent","ItemLoader","_Component","apply","arguments","inherits","createClass","match","params","find","CompanyEditHeader","molecules_CompanyEditHeader","Photos","closeIcon","CompanyView","address","email","AddContact","submitForm","addContact","injectIntl","CompanySettings","deleteCompany","Menu","organisms_AddContact","update","molecules_DeleteDataByIdDialog","isOwner","CompanyContacts","DocsOrganism","LogoPhotosHeaders","organisms_Photos","CompanyViewTemplate","CRUD","organisms_LogoPhotosHeaders","molecules_CompanySettings","organisms_CompanyView","organisms_DocsOrganism","organisms_CompanyContacts","templates_CompanyViewTemplate","HubEditForm","HubAdder","companyId","organisms_HubEditForm","HubDevices","getListItem","cameras","c","recorders","r","netdevs","n","HubView","organisms_HubDevices","HubSettings","deleteHub","Load","CommentReplyForm","show","reply","checked","handleIssueForm","intl","Action","TextArea","sendIssue","formatMessage","primary","Checkbox","IssueUnlock","unlock","UPDATE_USER","SET_ERROR","SET_IS_LOGGED","SET_DEFAULT_CENTER","SET_USER_ID","setError","setIsLogged","isLogged","setDefaultCenter","logout","signOut","catch","getUserId","toString","IssueDelete","modalOpen","handleOpen","handleClose","replyId","IssueEdit","handleChange","event","display","Issues","handleCheckbox","collapsed","unlockIssue","deleteIssue","patchIssue","issueId","view","helpers_Load","comments","comment","date","edited","userId","molecules_IssueEdit","molecules_IssueDelete","molecules_IssueUnlock","replies","molecules_CommentReplyForm","threaded","_ref2","console","log","HubViewTemplate","molecules_HubSettings","organisms_HubView","organisms_Issues","templates_HubViewTemplate","getDeviceIcon","selector","formValueSelector","iconName","DeviceAdder","hubId","Number","organisms_DeviceEditForm","device","DeviceView","ptz","ip","react_copy_to_clipboard_lib","serial","DeviceSettings","deleteDevice","DeviceViewTemplate","molecules_DeviceSettings","organisms_DeviceView","templates_DeviceViewTemplate","REQUEST_USERS","RECEIVE_USERS","getUser","ok","PermissionsSearchUser","handleResultSelect","defineProperty","postPermissions","users","title","image","Search","onSearchChange","_ref3","results","onResultSelect","read","permissionsReducer","PermissionsTemplate","organisms_PermissionsSearchUser","Permissions","templates_PermissionsTemplate","User","photoURL","centered","AboutUsProfile","imageSrc","circular","linkedin","telegram","Flag","flag","location","AboutUsTemplate","divided","Row","organisms_AboutUsProfile","AboutUs","templates_AboutUsTemplate","IpTableTemplate","column","direction","handleSort","clickedColumn","_this$state","reverse","_","sortBy","_this$state2","Table","sortable","celled","fixed","HeaderCell","sorted","Body","Cell","IpTable","pages_Networks","organisms_IpTableTemplate","ContactOrganism","QrOrganism","ContactTemplate","organisms_ContactOrganism","organisms_QrOrganism","ContactPage","templates_ContactTemplate","Routes","Route","exact","CompanyEditor","CompanyViewer","HubEditor","HubViewer","DeviceEditor","DeviceViewer","TopNavigation","handleItemClick","activeItem","marginTop","secondary","stackable","avatar","BottomNavigation","onLanguageChange","changeLanguage","floating","Now","alt","Guest","UnprotectedRoutes","GuestTopBar","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","addLocaleData","concat","toConsumableArray","en","uk","ru","messages","messages_uk","en-US","messages_en","en-GB","messages_ru","App","isSignedIn","hasError","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","unregisterAuthObserver","onAuthStateChanged","updateUser","login","getDefaultCenterFromUserAgent","Dimmer","organisms_GuestTopBar","StyledFirebaseAuth_default","firebaseAuth","helpers_UnprotectedRoutes","organisms_BottomNavigation","isLoggedIn","organisms_TopNavigation","pages_Routes","textComponent","React","locale","BrowserRouter","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","Boolean","window","hostname","store","createStore","combineReducers","localStorage","getItem","action","Storage","setItem","forEach","index","findIndex","push","formReducer","_objectSpread2","contactsCopy","contactIndex","applyMiddleware","thunkMiddleware","logger","ReactDOM","render","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1680792.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/warehouseSolid.6a497d1c.svg\";","module.exports = __webpack_public_path__ + \"static/media/now.273f0bda.png\";","export const serverURL = \"https://monitor.ps.od.ua/\";\r\n","import axios from \"axios\";\r\nimport { serverURL } from \"./helpers/serverURL\";\r\nexport const axiosHttpClient = axios.create({\r\n  baseURL: serverURL + \"api/\"\r\n});\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const REQUEST_ISSUES = \"REQUEST_ISSUES\";\r\nexport const SET_ISSUES_ERROR = \"SET_ISSUES_ERROR\";\r\nexport const RECEIVE_ISSUES = \"RECEIVE_ISSUES\";\r\nexport const UNLOCK_ISSUE = \"UNLOCK_ISSUE\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestIssues(resource) {\r\n  return {\r\n    type: REQUEST_ISSUES,\r\n    payload: resource\r\n  };\r\n}\r\n\r\nexport function setIssuesError(error) {\r\n  return {\r\n    type: SET_ISSUES_ERROR,\r\n    payload: error\r\n  };\r\n}\r\n\r\nexport function receiveIssues(data, byWhat) {\r\n  return {\r\n    type: RECEIVE_ISSUES,\r\n    payload: {\r\n      data: data,\r\n      resource: byWhat\r\n    }\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\n/**\r\n * Send an issue to the API\r\n * @param issue JSON representation of the issue {hub: hubId, issue: string value}\r\n */\r\nexport function sendIssue(issue, issueId = null) {\r\n  return function(dispatch, getState) {\r\n    dispatch(requestIssues(true));\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .post(issueId ? \"issues/\" + issueId : \"issues/\", issue, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(requestIssues(false));\r\n                dispatch(getIssues(\"hub\", result.data.result.hub));\r\n              },\r\n              error => dispatch(setIssuesError(error))\r\n            );\r\n        },\r\n        error => dispatch(setIssuesError(error))\r\n      );\r\n  };\r\n}\r\n\r\nexport function patchIssue(issue, issueId, unlock = false, replyId = false) {\r\n  console.log(replyId);\r\n  return function(dispatch) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken => {\r\n        if (unlock) {\r\n          axiosHttpClient\r\n            .patch(\"issues/\" + issueId + \"/?open=true\", null, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(result => {\r\n              dispatch(getIssues(\"hub\", result.data.result.hub));\r\n            });\r\n        } else {\r\n          axiosHttpClient\r\n            .patch(\r\n              replyId\r\n                ? \"issues/\" + issueId + \"/?replyId=\" + replyId\r\n                : \"issues/\" + issueId,\r\n              issue,\r\n              {\r\n                headers: {\r\n                  Authorization: \"Bearer \" + idToken\r\n                }\r\n              }\r\n            )\r\n            .then(result => {\r\n              dispatch(getIssues(\"hub\", result.data.result.hub));\r\n            });\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteIssue(issueId, replyId = false) {\r\n  return function(dispatch) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken => {\r\n        axiosHttpClient\r\n          .delete(\r\n            replyId\r\n              ? \"issues/\" + issueId + \"/?replyId=\" + replyId\r\n              : \"issues/\" + issueId,\r\n            {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            }\r\n          )\r\n          .then(result => {\r\n            dispatch(getIssues(\"hub\", result.data.result.hub));\r\n          });\r\n      });\r\n  };\r\n}\r\n\r\nexport function getIssues(byWhat, id) {\r\n  return function(dispatch, getState) {\r\n    dispatch(requestIssues(byWhat));\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(\"issues?\" + byWhat + \"=\" + id, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                if (id) {\r\n                  dispatch(receiveIssues(result.data.result, id));\r\n                } else {\r\n                  dispatch(receiveIssues(result.data.result, byWhat));\r\n                }\r\n              },\r\n              error => {\r\n                dispatch(setIssuesError({ error: error, resource: byWhat }));\r\n              }\r\n            );\r\n        },\r\n        error => dispatch(setIssuesError({ error: error, resource: byWhat }))\r\n      );\r\n  };\r\n}\r\n","/*\r\n * Actions\r\n */\r\n\r\nexport const SET_NAVIGATED_LINK = \"SET_NAVIGATED_LINK\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function setNavigatedLink(link) {\r\n  return {\r\n    type: SET_NAVIGATED_LINK,\r\n    payload: link\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Loader } from \"semantic-ui-react\";\r\n\r\nconst LoadingTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"column\">\r\n          <Loader active inline=\"centered\" size=\"medium\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingTemplate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Comment, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomeIssue = props => {\r\n  const issue = props.issue;\r\n  return (\r\n    <Comment>\r\n      <Comment.Avatar src={issue.user.picture} />\r\n      <Comment.Content>\r\n        <Comment.Author as=\"a\">{issue.user.name}</Comment.Author>\r\n        <Comment.Metadata>\r\n          <div>\r\n            <Icon name={\"industry\"} />\r\n            <Link to={\"/r/companies/view/\" + issue.company._id}>\r\n              {issue.company.name}\r\n            </Link>{\" \"}\r\n            <Icon name=\"warehouse\" />\r\n            <Link to={\"/r/hubs/view/\" + issue.hub._id}>{issue.hub.name}</Link>\r\n          </div>\r\n        </Comment.Metadata>\r\n        <Comment.Text>{issue.message}</Comment.Text>\r\n      </Comment.Content>\r\n    </Comment>\r\n  );\r\n};\r\n\r\nHomeIssue.propTypes = {\r\n  issue: PropTypes.object.isRequired\r\n};\r\n\r\nexport default HomeIssue;\r\n","import React from \"react\";\r\nimport { compose, withProps } from \"recompose\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow\r\n} from \"react-google-maps\";\r\nimport { connect } from \"react-redux\";\r\nimport warehouseSolid from \"../warehouseSolid.svg\";\r\n\r\n/**\r\n * Show Google Maps\r\n * Use MapWrapper only with redux-form Field component\r\n * For example: <Field name=\"LatLng\" component={MapWrapper} />\r\n * Don't forget to change Google API key in googleMapURL property\r\n * Height property for containerElement is required, value is up to you\r\n */\r\n// TODO change Google API key in googleMapURL property, current key is bounded to domain name\r\n// TODO map localization\r\nconst MapWrapper = compose(\r\n  withProps(props => {\r\n    return {\r\n      googleMapURL:\r\n        \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3XXK2YwPFB7amCLqkSg4II77EFu0G9R8&language=\" +\r\n        props.userR.language,\r\n      loadingElement: <div style={{ height: `100%` }} />,\r\n      containerElement: <div style={{ height: `400px` }} />,\r\n      mapElement: <div style={{ height: `100%` }} />\r\n    };\r\n  }),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)(props => {\r\n  const warehouse = {\r\n    scaledSize: {\r\n      height: 20,\r\n      width: 32\r\n    },\r\n    url: warehouseSolid\r\n  };\r\n  if (props.input) {\r\n    // add/edit component\r\n    const {\r\n      input: { value, onChange }\r\n    } = props; // data from redux-form, value has format { lat: ..., lng: ... }\r\n    return (\r\n      // update marker position in redux-form state by firing onChange\r\n      <GoogleMap mapTypeId={\"satellite\"}\r\n        onClick={e => onChange({ lat: e.latLng.lat(), lng: e.latLng.lng() })}\r\n        defaultZoom={13}\r\n        defaultCenter={value || props.defaultCenter}\r\n      >\r\n        {(props.marker || value) && <Marker position={props.marker || value} />}\r\n        {props.markers &&\r\n          props.markers.map(marker => <Marker position={marker} />)}\r\n      </GoogleMap>\r\n    );\r\n  } else {\r\n    // view component\r\n    return (\r\n      <GoogleMap mapTypeId={\"satellite\"}\r\n        defaultZoom={13}\r\n        defaultCenter={props.marker || props.defaultCenter}\r\n      >\r\n        <>{props.marker && <Marker position={props.marker} />}\r\n        {props.markers &&\r\n          props.markers.map(marker => (\r\n            <Marker key={marker._id} position={marker.LatLng} icon={warehouse}>\r\n              <InfoWindow><div>{marker.issue}</div></InfoWindow>\r\n            </Marker>\r\n          ))}</>\r\n      </GoogleMap>\r\n    );\r\n  }\r\n});\r\n\r\nconst mapToStateProps = state => {\r\n  return { userR: state.userReducer };\r\n};\r\n\r\nexport default connect(\r\n  mapToStateProps,\r\n  {}\r\n)(MapWrapper);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Header, Comment } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport HomeIssue from \"../organisms/HomeIssue\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\n\r\nconst HomeTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"one column row center aligned\">\r\n          <div className=\"column\">\r\n            <Header size=\"medium\">\r\n              <FormattedMessage\r\n                id=\"string.greeting\"\r\n                description=\"Greeting to welcome the user to the app\"\r\n                values={{\r\n                  name: <b>{props.displayName}</b>\r\n                }}\r\n              />\r\n            </Header>\r\n          </div>\r\n        </div>\r\n        <div className={\"stackable two column row\"}>\r\n          <div className=\"column\">\r\n            <Comment.Group>\r\n              {props.issues.map(issue => (\r\n                <HomeIssue key={issue._id} issue={issue} />\r\n              ))}\r\n            </Comment.Group>\r\n          </div>\r\n          <div className=\"column\">\r\n            <MapWrapper\r\n              defaultCenter={props.defaultCenter}\r\n              markers={props.issues\r\n                .filter(i => i.hub.LatLng)\r\n                .map(issue => {\r\n                  return {\r\n                    _id: issue._id,\r\n                    issue: issue.message,\r\n                    LatLng: issue.hub.LatLng\r\n                  };\r\n                })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHomeTemplate.propTypes = {\r\n  displayName: PropTypes.string.isRequired,\r\n  defaultCenter: PropTypes.object.isRequired,\r\n  issues: PropTypes.array.isRequired\r\n};\r\n\r\nexport default HomeTemplate;\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NoDataTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui centered column grid\">\r\n        <div className=\"sixteen wide column center aligned\">\r\n          <Header icon>\r\n            <Icon name=\"cloud\" color={\"blue\"} />\r\n            <FormattedMessage id=\"string.noData\" />\r\n          </Header>\r\n        </div>\r\n        {props.children && (\r\n          <div className=\"row\">\r\n            <div className=\"column center aligned\">{props.children}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNoDataTemplate.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default NoDataTemplate;\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst ErrorTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui centered three column grid\">\r\n        <div className=\"column center aligned\">\r\n          <Header icon>\r\n            <Icon name=\"cloud\" color={\"red\"} />\r\n            <FormattedMessage id=\"string.error\" />\r\n            {props.error}\r\n          </Header>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { getIssues } from \"../actions/issuesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport HomeTemplate from \"../templates/HomeTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\nimport ErrorTemplate from \"../templates/ErrorTemplate\";\r\n\r\nconst issuesResource = \"all\";\r\n\r\nclass Home extends Component {\r\n  componentDidMount() {\r\n    this.props.setNavigatedLink(\"home\");\r\n    // get issues from the API\r\n    this.props.getIssues(issuesResource);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove page name to remove highlight in the navigation bar\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const isFetching = this.props.isFetching;\r\n    const issues = this.props.issues;\r\n    const length = issues.length;\r\n    const displayName = this.props.userReducer.user.displayName;\r\n    const defaultCenter = this.props.userReducer.defaultCenter;\r\n    const error = this.props.error;\r\n    return (\r\n      <>\r\n        {error && <ErrorTemplate />}\r\n        {isFetching && length === 0 && <LoadingTemplate />}\r\n        {!isFetching && length === 0 && <NoDataTemplate />}\r\n        {length > 0 && (\r\n          <HomeTemplate\r\n            displayName={displayName}\r\n            issues={issues}\r\n            defaultCenter={defaultCenter}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const issues = state.issuesReducer[issuesResource] || [];\r\n  const isFetching =\r\n    state.issuesReducer.isIssuesFetching[issuesResource] || false;\r\n  const error = state.issuesReducer.issuesError[issuesResource] || null;\r\n  return {\r\n    error,\r\n    issues,\r\n    isFetching,\r\n    userReducer: state.userReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getIssues: (byWhat, id) => {\r\n      dispatch(getIssues(byWhat, id));\r\n    },\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","export const companyResource = \"companies\";\r\nexport const hubResource = \"hubs\";\r\nexport const deviceResource = \"devices\";\r\nexport const networkResource = \"networks\";\r\nexport const ipResource = \"ip\";\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\nimport { setNavigatedLink } from \"./navigationActions\";\r\n\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const RECEIVE_ITEMS = \"RECEIVE_ITEMS\";\r\nexport const RECEIVE_ITEM = \"RECEIVE_ITEM\";\r\nexport const REQUEST_API = \"REQUEST_API\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestAPI() {\r\n  return {\r\n    type: REQUEST_API\r\n  };\r\n}\r\n\r\nexport function receiveItem(item, resource) {\r\n  return {\r\n    type: RECEIVE_ITEM,\r\n    payload: item,\r\n    resource: resource\r\n  };\r\n}\r\n\r\nexport function receiveItems(items, resource) {\r\n  return {\r\n    type: RECEIVE_ITEMS,\r\n    payload: items,\r\n    resource: resource\r\n  };\r\n}\r\n\r\nexport function deleteItem(id, resource) {\r\n  return {\r\n    type: DELETE_ITEM,\r\n    id: id,\r\n    resource: resource\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\nexport function getDataByAPI(resource, id) {\r\n  return function(dispatch, getState) {\r\n    dispatch(requestAPI());\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(id ? resource + \"/\" + id : resource, {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                if (id) {\r\n                  dispatch(receiveItem(result.data.result, resource));\r\n                } else {\r\n                  dispatch(receiveItems(result.data.result, resource));\r\n                }\r\n              },\r\n              error => {}\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function postDataByAPI(resource, data) {\r\n  return function(dispatch, getState) {\r\n    const formData = new FormData();\r\n    if (data.logo) {\r\n      formData.append(\"logo\", data.logo.item(0));\r\n    }\r\n    if (data.photos) {\r\n      for (let i = 0; i < data.photos.length; i++) {\r\n        formData.append(\"photos\", data.photos.item(i));\r\n      }\r\n    }\r\n    if (data.documents) {\r\n      for (let i = 0; i < data.documents.length; i++) {\r\n        formData.append(\"documents\", data.documents.item(i));\r\n      }\r\n    }\r\n    formData.append(\r\n      \"values\",\r\n      JSON.stringify(\r\n        Object.assign(\r\n          {},\r\n          { ...data },\r\n          { photos: undefined, documents: undefined }\r\n        )\r\n      )\r\n    );\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .post(resource, formData, {\r\n              headers: {\r\n                \"content-type\": \"multipart/form-data\",\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(\r\n                  setNavigatedLink({\r\n                    resource: resource,\r\n                    _id: result.data.result._id\r\n                  })\r\n                );\r\n              },\r\n              error => {}\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\n/**\r\n * Patch resource by API call\r\n * @param resourceName Name of API/resource, for example \"companies/\"\r\n * @param data\r\n */\r\nexport function patchDataByAPI(resourceName, data) {\r\n  return function(dispatch, getState) {\r\n    const formData = new FormData();\r\n    if (data.logo) {\r\n      formData.append(\"logo\", data.logo.item(0));\r\n    }\r\n    if (data.photos) {\r\n      for (let i = 0; i < data.photos.length; i++) {\r\n        formData.append(\"photos\", data.photos.item(i));\r\n      }\r\n    }\r\n    if (data.documents) {\r\n      for (let i = 0; i < data.documents.length; i++) {\r\n        formData.append(\"documents\", data.documents.item(i));\r\n      }\r\n    }\r\n    formData.append(\r\n      \"values\",\r\n      JSON.stringify(\r\n        Object.assign(\r\n          {},\r\n          { ...data },\r\n          { photos: undefined, documents: undefined }\r\n        )\r\n      )\r\n    );\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .patch(resourceName + \"/\" + data._id, formData, {\r\n              headers: {\r\n                \"content-type\": \"multipart/form-data\",\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(\r\n                  setNavigatedLink({ resource: resourceName, _id: data._id })\r\n                );\r\n              },\r\n              error => {}\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function deleteDataByAPI(resourceName, id, query, itemId) {\r\n  return function(dispatch) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken => {\r\n        if (query) {\r\n          return axiosHttpClient\r\n              .delete(resourceName + \"/\" + id + \"?\" + query + \"=\" + itemId, {\r\n                headers: {\r\n                  Authorization: \"Bearer \" + idToken\r\n                }\r\n              })\r\n              .then(\r\n                  result => {\r\n                    dispatch(getDataByAPI(resourceName, id));\r\n                  },\r\n                  error => {}\r\n              );\r\n        }\r\n        axiosHttpClient\r\n          .delete(resourceName + \"/\" + id, {\r\n            headers: {\r\n              Authorization: \"Bearer \" + idToken\r\n            }\r\n          })\r\n          .then(\r\n            result => {\r\n              dispatch(deleteItem(id, resourceName));\r\n            },\r\n            error => {}\r\n          );\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Icon, Label, List, Popup } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, FormattedPlural } from \"react-intl\";\r\n\r\nconst CompanyHub = props => {\r\n  const hub = props.hub;\r\n  return (\r\n    <div className=\"column\" style={{marginBottom: \"4vh\"}}>\r\n      <Card raised>\r\n        <Card.Content>\r\n          {hub.issues.length > 0 ? (\r\n            <Popup\r\n              trigger={\r\n                <Label color=\"red\" ribbon=\"right\">\r\n                  <FormattedPlural\r\n                    value={hub.issues.length}\r\n                    one={<FormattedMessage id=\"interface.hasIssue\" />}\r\n                    other={\r\n                      <FormattedMessage\r\n                        id=\"interface.hasIssues\"\r\n                        values={{ count: hub.issues.length }}\r\n                      />\r\n                    }\r\n                  />\r\n                </Label>\r\n              }\r\n              content={hub.issues.map(issue => (\r\n                <li key={issue._id}>{issue.message}</li>\r\n              ))}\r\n            />\r\n          ) : (\r\n            <Label ribbon=\"right\">\r\n              <FormattedMessage id=\"interface.noIssue\" />\r\n            </Label>\r\n          )}\r\n          <Card.Header>\r\n            <Icon size={\"large\"} name=\"warehouse\" />{\" \"}\r\n            <Link to={\"/r/hubs/view/\" + hub._id}>{hub.name}</Link>\r\n          </Card.Header>\r\n          <Card.Description>\r\n            <List bulleted horizontal link>\r\n              {hub.devices && (\r\n                <>\r\n                  <List.Item>\r\n                    <Icon name=\"record\" />{\" \"}\r\n                    {hub.devices\r\n                      ? hub.devices.filter(d => d.deviceType === \"camera\")\r\n                          .length\r\n                      : 0}\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <Icon name=\"hdd\" />{\" \"}\r\n                    {\r\n                      hub.devices.filter(d => d.deviceType === \"recorder\")\r\n                        .length\r\n                    }\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    <Icon name=\"microchip\" />{\" \"}\r\n                    {hub.devices.filter(d => d.deviceType === \"netdev\").length}\r\n                  </List.Item>\r\n                </>\r\n              )}\r\n              {hub.equipment && (\r\n                <List.Item>\r\n                  <Icon name=\"box\" /> {hub.equipment.length}\r\n                </List.Item>\r\n              )}\r\n            </List>\r\n          </Card.Description>\r\n        </Card.Content>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nCompanyHub.propTypes = {\r\n  hub: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CompanyHub;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Divider, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport CompanyHub from \"../molecules/CompanyHub\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst NetworksCompany = props => {\r\n  const company = props.company;\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"eight wide column\">\r\n          <Link to={\"/r/companies/view/\" + company._id}>\r\n            {company.logo ? (\r\n              <Image className={\"viwerLogo\"} src={serverURL + company.logo.path} />\r\n            ) : (\r\n              <Header as=\"h1\">\r\n                <Icon name=\"industry\" />{\" \"}\r\n                <Header.Content>{company.name}</Header.Content>\r\n              </Header>\r\n            )}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"four column row stackable\">\r\n        {company.hubs && company.hubs.length > 0 ? (\r\n          company.hubs.map(hub => <CompanyHub key={hub._id} hub={hub} />)\r\n        ) : (\r\n          <div className=\"column\">\r\n            <FormattedMessage id=\"string.companyHasNoHubs\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"column\">\r\n          <Button\r\n            as={Link}\r\n            to={\"/r/hubs/add/\" + company._id + \"/\" + company.name}\r\n          >\r\n            <Icon name=\"plus\" />{\" \"}\r\n            <FormattedMessage\r\n              id=\"interface.addHubToCompany\"\r\n              values={{ company: company.name }}\r\n            />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nNetworksCompany.propTypes = {\r\n  company: PropTypes.object.isRequired\r\n};\r\n\r\nexport default NetworksCompany;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport NetworksCompany from \"../organisms/NetworksCompany\";\r\nimport { Button, Divider, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst NetworksTemplate = props => {\r\n  const companies = props.companies;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"column\">\r\n            <Button as={Link} to={\"/r/companies/add\"}>\r\n              <Icon name=\"industry\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addCompany\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        {companies.map(company => (\r\n          <NetworksCompany key={company._id} company={company} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNetworksTemplate.propTypes = {\r\n  companies: PropTypes.array.isRequired\r\n};\r\n\r\nexport default NetworksTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDataByAPI } from \"../actions/dataActions\";\r\nimport NetworksTemplate from \"../templates/NetworksTemplate\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\nimport ErrorTemplate from \"../templates/ErrorTemplate\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass Networks extends Component {\r\n  componentDidMount() {\r\n    this.props.setNavigatedLink(\"networks\");\r\n    this.props.getDataByAPI(companyResource);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n\r\n  render() {\r\n    const isFetching = this.props.dataReducer.isFetching;\r\n    const companies = this.props.companies;\r\n    const length = companies.length;\r\n    const error = this.props.error;\r\n    return (\r\n      <>\r\n        {error && <ErrorTemplate />}\r\n        {isFetching && length === 0 && <LoadingTemplate />}\r\n        {!isFetching && length === 0 && (\r\n          <NoDataTemplate>\r\n            <Button as={Link} to={\"/r/companies/add\"}>\r\n              <Icon name=\"industry\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addCompany\" />\r\n            </Button>\r\n          </NoDataTemplate>\r\n        )}\r\n        {length > 0 && (\r\n          <>\r\n            <NetworksTemplate companies={companies} />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const companies = state.dataReducer[companyResource] || [];\r\n  const error = state.issuesReducer.issuesError[companyResource] || null;\r\n  return {\r\n    loadingReducer: state.loadingReducer,\r\n    dataReducer: state.dataReducer,\r\n    companies,\r\n    error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    },\r\n    getDataByAPI: (resource, id) => {\r\n      dispatch(getDataByAPI(resource, id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Networks);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Divider, Grid, Header, Icon, Modal } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport QRCode from \"qrcode.react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Contact = props => {\r\n  const { showCompany } = props;\r\n  const contact = props.contact;\r\n  const contactNote = contact.note ? \"NOTE:\" + contact.note + \"\\n\" : \"\";\r\n  const QRCodeValue =\r\n    \"BEGIN:VCARD\\n\" +\r\n    \"VERSION:3.0\\n\" +\r\n    \"ORG:\" +\r\n    contact.company.name +\r\n    \"\\n\" +\r\n    \"FN:\" +\r\n    contact.name +\r\n    \"\\n\" +\r\n    \"TEL;TYPE=WORK,VOICE:\" +\r\n    contact.phone +\r\n    \"\\n\" +\r\n    contactNote +\r\n    \"END:VCARD\";\r\n  return (\r\n    <Card>\r\n      <Card.Content>\r\n        <Card.Header>\r\n          <Grid verticalAlign=\"middle\">\r\n            <Grid.Column floated=\"left\" width={12}>\r\n              <Link to={\"/r/contacts/\" + contact._id}>{contact.name}</Link>\r\n            </Grid.Column>\r\n            <Grid.Column textAlign={\"right\"} floated=\"right\" width={4}>\r\n              <Modal size={\"mini\"} trigger={<Icon name=\"qrcode\" size=\"big\" />}>\r\n                <Modal.Content style={{ textAlign: \"center\" }}>\r\n                  <QRCode value={QRCodeValue} size={256} />\r\n                </Modal.Content>\r\n              </Modal>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Card.Header>\r\n        <Divider />\r\n        <Card.Description>\r\n          {showCompany && (\r\n            <Header as=\"h4\">\r\n              <Icon name=\"industry\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.company\" />\r\n                </Header.Subheader>\r\n                {contact.company.name}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          <Header as=\"h4\">\r\n            <Icon name=\"phone\" />\r\n            <Header.Content>\r\n              <Header.Subheader>\r\n                <FormattedMessage id=\"interface.phone\" />\r\n              </Header.Subheader>\r\n              {<a href={\"tel:\" + contact.phone}>{contact.phone}</a>}\r\n            </Header.Content>\r\n          </Header>\r\n          {contact.note && (\r\n            <Header as=\"h4\">\r\n              <Icon name=\"sticky note\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.note\" />\r\n                </Header.Subheader>\r\n                {contact.note}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n        </Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Contact from \"../molecules/Contact\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nconst ContactsTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"sixteen wide column\">\r\n          <Card.Group className={\"stackable\"} itemsPerRow={4}>\r\n            {props.contacts.map(contact => {\r\n              return <Contact showCompany={true} key={contact._id} contact={contact} />;\r\n            })}\r\n          </Card.Group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactsTemplate.propTypes = {\r\n  contacts: PropTypes.array.isRequired\r\n};\r\n\r\nexport default ContactsTemplate;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport { getDataByAPI } from \"./dataActions\";\r\n\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const REQUEST_CONTACTS = \"REQUEST_CONTACTS\";\r\nexport const RECEIVE_CONTACTS = \"RECEIVE_CONTACTS\";\r\nexport const SET_CONTACTS_ERROR = \"SET_CONTACTS_ERROR\";\r\nexport const RECEIVE_CONTACT = \"RECEIVE_CONTACT\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestContacts() {\r\n  return {\r\n    type: REQUEST_CONTACTS\r\n  };\r\n}\r\n\r\nexport function receiveContacts(contacts) {\r\n  return {\r\n    type: RECEIVE_CONTACTS,\r\n    payload: contacts\r\n  };\r\n}\r\n\r\nexport function receiveContact(contact) {\r\n  return {\r\n    type: RECEIVE_CONTACT,\r\n    payload: contact\r\n  };\r\n}\r\n\r\nexport function setContactsError(error) {\r\n  return {\r\n    type: SET_CONTACTS_ERROR,\r\n    payload: error\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\nexport function fetchContacts() {\r\n  return dispatch => {\r\n    dispatch(requestContacts());\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.get(\"contacts\", {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(\r\n        result => dispatch(receiveContacts(result.data.result)),\r\n        error => dispatch(setContactsError(error))\r\n      );\r\n  };\r\n}\r\n\r\nexport function fetchContact(id) {\r\n  return dispatch => {\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.get(\"contacts/\" + id, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(result => dispatch(receiveContact(result.data.result)));\r\n  };\r\n}\r\n\r\nexport function addContact(contact) {\r\n  return dispatch =>\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.post(\"contacts\", contact, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(result => dispatch(getDataByAPI(companyResource, contact.company)));\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport ContactsTemplate from \"../templates/ContactsTemplate\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport { fetchContacts } from \"../actions/contactsActions\";\r\nimport ErrorTemplate from \"../templates/ErrorTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    // set page name to help top navigation bar to highlight current button\r\n    this.props.setNavigatedLink(\"contacts\");\r\n    this.props.fetchContacts();\r\n  }\r\n  componentWillUnmount() {\r\n    // remove page name to remove highlight in the navigation bar\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const contacts = this.props.allContacts.contacts;\r\n    const isFetching = this.props.allContacts.isFetching;\r\n    const error = this.props.allContacts.error;\r\n    return (\r\n      <>\r\n        {isFetching && contacts.length === 0 && <LoadingTemplate />}\r\n        {error && <ErrorTemplate />}\r\n        {!isFetching && contacts.length === 0 && <NoDataTemplate />}\r\n        {contacts.length > 0 && (\r\n          <>\r\n            <ContactsTemplate contacts={contacts} />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    allContacts: state.contactsReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchContacts: () => dispatch(fetchContacts()),\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Contacts);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteDataByAPI } from \"../actions/dataActions\";\r\n\r\nclass DeleteDataByIdDialog extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      open: false\r\n    };\r\n    this.deleteData = this.deleteData.bind(this);\r\n  }\r\n  open = () => this.setState({ open: true });\r\n  close = () => this.setState({ open: false });\r\n  deleteData = () => {\r\n    this.props.deleteData(this.props.resourceName, this.props.id);\r\n  };\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.state.open}\r\n        onOpen={this.open}\r\n        onClose={this.close}\r\n        size={\"tiny\"}\r\n        trigger={\r\n          <Dropdown.Item>\r\n            <Icon name=\"trash\" /> <FormattedMessage id=\"interface.delete\" />\r\n          </Dropdown.Item>\r\n        }\r\n        basic\r\n      >\r\n        <Header icon=\"trash\" content={this.props.header} />\r\n        <Modal.Content>\r\n          <p>{this.props.body}</p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button basic color=\"green\" inverted onClick={() => this.close()}>\r\n            <Icon name=\"remove\" /> <FormattedMessage id={\"interface.no\"} />\r\n          </Button>\r\n          <Button\r\n            color=\"red\"\r\n            inverted\r\n            onClick={() => {\r\n              this.close();\r\n              this.deleteData();\r\n            }}\r\n          >\r\n            <Icon name=\"trash\" /> <FormattedMessage id={\"interface.yes\"} />\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nDeleteDataByIdDialog.propTypes = {\r\n  resourceName: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteData: (resourceName, id) => {\r\n      dispatch(deleteDataByAPI(resourceName, id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(DeleteDataByIdDialog);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport { Button, Header, Icon, Image, Label, Modal } from \"semantic-ui-react\";\r\nimport { deleteDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport DeleteDataByIdDialog from \"../molecules/DeleteDataByIdDialog\";\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\nclass PhotoEditorOrganism extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n  open = () => this.setState({ open: true });\r\n  close = () => this.setState({ open: false });\r\n  callback = () => {\r\n    this.props.deleteData(\r\n      this.props.resource,\r\n      this.props.id,\r\n      this.props.queryId\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Image\r\n          label={{\r\n            as: \"a\",\r\n            color: \"red\",\r\n            corner: \"right\",\r\n            icon: \"trash\",\r\n            onClick: () => this.open()\r\n          }}\r\n          fluid\r\n          src={serverURL + this.props.src}\r\n        />\r\n        <Modal\r\n          open={this.state.open}\r\n          onOpen={this.open}\r\n          onClose={this.close}\r\n          basic\r\n          size=\"small\"\r\n        >\r\n          <Header icon=\"trash\" content={<FormattedMessage id={\"string.deletePhoto\"} />} />\r\n          <Modal.Content>\r\n            <p>\r\n              <FormattedMessage id={\"string.deletePhotoMessage\"} />\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button basic color=\"green\" inverted onClick={() => this.close()}>\r\n              <Icon name=\"remove\" /> <FormattedMessage id={\"interface.no\"} />\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={() => {this.callback(); this.close();}}>\r\n              <Icon name=\"trash\" /> <FormattedMessage id={\"interface.yes\"} />\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPhotoEditorOrganism.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  resource: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  queryId: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteData: (resourceName, id, queryId) => {\r\n      dispatch(deleteDataByAPI(resourceName, id, \"photo\", queryId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PhotoEditorOrganism);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Header, Icon, Image, Modal } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { List } from \"semantic-ui-react/dist/commonjs/elements/List\";\r\n\r\nclass DocEditorOrganism extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n  open = () => this.setState({ open: true });\r\n  close = () => this.setState({ open: false });\r\n  callback = () => {\r\n    this.props.deleteData(\r\n      this.props.resource,\r\n      this.props.id,\r\n      this.props.queryId\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Icon name=\"file\" /> {this.props.originalname}{\" \"}\r\n        <Icon\r\n          name=\"trash\"\r\n          className={\"pointer_on_hover\"}\r\n          color={\"red\"}\r\n          onClick={() => this.open()}\r\n        />\r\n        <Modal\r\n          open={this.state.open}\r\n          onOpen={this.open}\r\n          onClose={this.close}\r\n          basic\r\n          size=\"small\"\r\n        >\r\n          <Header\r\n            icon=\"trash\"\r\n            content={<FormattedMessage id={\"string.deleteDoc\"} />}\r\n          />\r\n          <Modal.Content>\r\n            <p>\r\n              <FormattedMessage id={\"string.deleteDocMessage\"} />\r\n            </p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button basic color=\"green\" inverted onClick={() => this.close()}>\r\n              <Icon name=\"remove\" /> <FormattedMessage id={\"interface.no\"} />\r\n            </Button>\r\n            <Button\r\n              color=\"red\"\r\n              inverted\r\n              onClick={() => {\r\n                this.callback();\r\n                this.close();\r\n              }}\r\n            >\r\n              <Icon name=\"trash\" />{\" \"}\r\n              <FormattedMessage id={\"interface.yes\"} />\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDocEditorOrganism.propTypes = {\r\n  resource: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  queryId: PropTypes.string.isRequired,\r\n  originalname: PropTypes.string.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteData: (resourceName, id, queryId) => {\r\n      dispatch(deleteDataByAPI(resourceName, id, \"document\", queryId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(DocEditorOrganism);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field, reduxForm, change } from \"redux-form\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\nimport { patchDataByAPI, postDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { EditorReduxFormName } from \"../helpers/editorReduxFormName\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport PhotoEditorOrganism from \"../organisms/PhotoEditorOrganism\";\r\nimport DocEditorOrganism from \"../organisms/DocEditorOrganism\";\r\n\r\nclass Editor extends Component {\r\n  componentWillUnmount() {\r\n    // remove page name to remove highlight in the navigation bar\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const submitForm = values => {\r\n      if (values._id) {\r\n        return this.props.patchData(this.props.resource, values);\r\n      } else {\r\n        return this.props.postData(this.props.resource, values);\r\n      }\r\n    };\r\n    const { pristine, submitting, handleSubmit } = this.props;\r\n    if (\r\n      this.props.currentLink !== undefined &&\r\n      this.props.currentLink.resource !== undefined\r\n    ) {\r\n      return (\r\n        <Redirect\r\n          to={\r\n            \"/r/\" +\r\n            this.props.currentLink.resource +\r\n            \"/view/\" +\r\n            this.props.currentLink._id\r\n          }\r\n        />\r\n      );\r\n    }\r\n    // this.props.addMarker(this.props.initialValues.LatLng);\r\n    return (\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <div className=\"ui container\">\r\n          <div className=\"ui grid\">\r\n            {this.props.header}\r\n            <div className=\"row stackable\">\r\n              {this.props.photos &&\r\n                this.props.photos.length > 0 &&\r\n                this.props.photos.map(photo => (\r\n                  <div\r\n                    key={photo._id}\r\n                    className=\"three wide column middle aligned\"\r\n                  >\r\n                    <PhotoEditorOrganism\r\n                      src={photo.path}\r\n                      resource={this.props.resource}\r\n                      id={this.props.initialValues._id}\r\n                      queryId={photo._id}\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"row stackable\">\r\n              {this.props.documents &&\r\n                this.props.documents.length > 0 &&\r\n                this.props.documents.map(doc => (\r\n                  <div\r\n                    key={doc._id}\r\n                    className=\"sixteen wide column\"\r\n                  >\r\n                    <DocEditorOrganism\r\n                      resource={this.props.resource}\r\n                      id={this.props.initialValues._id}\r\n                      originalname={doc.originalname}\r\n                      queryId={doc._id}\r\n                    />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"row stackable\">\r\n              {this.props.children}\r\n              <div className=\"eight wide column\">\r\n                {/*Map Wrapper*/}\r\n                <Field\r\n                  name=\"LatLng\"\r\n                  component={MapWrapper}\r\n                  defaultCenter={\r\n                    this.props.initialValues.LatLng\r\n                      ? this.props.initialValues.LatLng\r\n                      : this.props.defaultCenter\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"sixteen wide column right aligned\">\r\n              <Button\r\n                type=\"submit\"\r\n                icon\r\n                labelPosition=\"right\"\r\n                positive\r\n                disabled={pristine || submitting}\r\n              >\r\n                <FormattedMessage id=\"interface.save\" /> <Icon name=\"save\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaultCenter: state.userReducer.defaultCenter,\r\n    currentLink: state.navigationReducer.currentLink\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    postData: (data, resource) => {\r\n      dispatch(postDataByAPI(data, resource));\r\n    },\r\n    patchData: (data, resourceName) => {\r\n      dispatch(patchDataByAPI(data, resourceName));\r\n    },\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    },\r\n    addMarker: value => {\r\n      dispatch(change(EditorReduxFormName, \"LatLng\", value));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(reduxForm({ form: EditorReduxFormName })(Editor));\r\n\r\nEditor.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  initialValues: PropTypes.object.isRequired,\r\n  header: PropTypes.node,\r\n  resource: PropTypes.string.isRequired\r\n};\r\n","export const EditorReduxFormName = \"Editor\";","import { FormattedMessage } from \"react-intl\";\r\nimport React from \"react\";\r\nimport { Input, Label } from \"semantic-ui-react\";\r\n\r\n// TODO update error message on language change\r\nexport const renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  icon,\r\n  iconPosition,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <>\r\n    <Input\r\n      {...input}\r\n      icon={icon}\r\n      iconPosition={iconPosition}\r\n      placeholder={label}\r\n      type={type}\r\n    />\r\n    {touched &&\r\n      ((error && (\r\n        <Label basic color=\"red\" pointing>\r\n          <FormattedMessage id={error} />\r\n        </Label>\r\n      )) ||\r\n        (warning && <span>{warning}</span>))}\r\n  </>\r\n);\r\n","export const requiredValidator = value =>\r\n  value || typeof value === \"number\"\r\n    ? undefined\r\n    : \"string.validationError\";\r\n","import React from \"react\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst FileInputField = props => {\r\n  function onChange(e) {\r\n    const {\r\n      input: { onChange }\r\n    } = props;\r\n    onChange(e.target.files);\r\n  }\r\n  const {\r\n    icon,\r\n    text,\r\n    input: { name }\r\n  } = props;\r\n  return (\r\n    <>\r\n      <Button as=\"label\" htmlFor={name} icon labelPosition=\"right\">\r\n        {text}\r\n        <Icon name={icon} />\r\n      </Button>\r\n      <input\r\n        name={name}\r\n        hidden\r\n        id={name}\r\n        multiple\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileInputField;\r\n","import React from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field } from \"redux-form\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\nimport inputField from \"../molecules/FileInputField\";\r\n\r\n// TODO fix buttons language on language changes\r\nconst CompanyEditForm = () => {\r\n  return (\r\n    <>\r\n      <div className=\"eight wide column\">\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.name\" />\r\n          </label>\r\n          <Field\r\n            icon=\"industry\"\r\n            iconPosition=\"left\"\r\n            name=\"name\"\r\n            component={renderField}\r\n            type=\"text\"\r\n            validate={requiredValidator}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.address\" />\r\n          </label>\r\n          <Field icon=\"map marker alternate\" iconPosition=\"left\" name=\"address\" component={renderField} type=\"text\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.phone\" />\r\n          </label>\r\n          <Field icon=\"phone\" iconPosition=\"left\" name=\"phone\" component={renderField} type=\"text\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.email\" />\r\n          </label>\r\n          <Field icon=\"at\" iconPosition=\"left\" name=\"email\" component={renderField} type=\"text\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.note\" />\r\n          </label>\r\n          <Field name=\"note\" component=\"textarea\" rows={3} />\r\n        </Form.Field>\r\n        <Field\r\n          component={inputField}\r\n          text={<FormattedMessage id={\"interface.uploadLogo\"} />}\r\n          name=\"logo\"\r\n          icon=\"circle outline\"\r\n        />\r\n        <Field\r\n          component={inputField}\r\n          text={<FormattedMessage id={\"interface.uploadPhotos\"} />}\r\n          icon=\"file image\"\r\n          name=\"photos\"\r\n        />\r\n        <Field\r\n          component={inputField}\r\n          text={<FormattedMessage id={\"interface.uploadDocuments\"} />}\r\n          icon=\"file pdf\"\r\n          name=\"documents\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompanyEditForm;\r\n","import React from 'react';\r\nimport {Header, Icon} from \"semantic-ui-react\";\r\nimport {FormattedMessage} from \"react-intl\";\r\n\r\nconst CompanyAddHeader = () => {\r\n  return (\r\n      <div className=\"sixteen wide column center aligned\">\r\n        <Header as=\"h1\">\r\n          <Icon name=\"industry\" />{\" \"}\r\n          <FormattedMessage id=\"interface.addCompany\" />\r\n        </Header>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default CompanyAddHeader;","import React from \"react\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport CompanyEditForm from \"../organisms/CompanyEditForm\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport CompanyAddHeader from \"../molecules/CompanyAddHeader\";\r\n\r\nconst CompanyAdder = props => {\r\n  return (\r\n    <Editor\r\n      resource={companyResource}\r\n      initialValues={{}}\r\n      header={<CompanyAddHeader />}\r\n    >\r\n      <CompanyEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nexport default CompanyAdder;\r\n","import React, { Component } from \"react\";\r\nimport { getDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\n\r\n/**\r\n * HOC. Returns Viewer for desired resource. Id of resource should be in url params as :id\r\n * @param WrappedComponent Component name to wrap\r\n * @param resource Resource name for API calls, for example \"companies\"\r\n */\r\nexport function getItemLoader(WrappedComponent, resource) {\r\n  class ItemLoader extends Component {\r\n    componentDidMount() {\r\n      // Get data by API call in Redux\r\n      this.props.getDataByAPI(resource, this.props.match.params.id);\r\n    }\r\n\r\n    render() {\r\n      // data is fetching\r\n      const isFetching = this.props.isFetching;\r\n      // array of items by resource param\r\n      const items = this.props.items;\r\n      // id from react-router-dom\r\n      const id = this.props.match.params.id;\r\n      // item by id\r\n      const item = items.find(i => i._id === id);\r\n      return (\r\n        <>\r\n          {isFetching && !item && <LoadingTemplate />}\r\n          {!isFetching && !item && <NoDataTemplate />}\r\n          {item && <WrappedComponent item={item} />}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => {\r\n    const items = state.dataReducer[resource] || [];\r\n    const isFetching = state.dataReducer.isFetching;\r\n    return { items, isFetching };\r\n  };\r\n\r\n  const mapDispatchToProps = dispatch => {\r\n    return {\r\n      getDataByAPI: (resource, id) => {\r\n        dispatch(getDataByAPI(resource, id));\r\n      }\r\n    };\r\n  };\r\n\r\n  return connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(ItemLoader);\r\n}\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst CompanyEditHeader = () => {\r\n  return (\r\n    <div className=\"sixteen wide column center aligned\">\r\n      <Header as=\"h1\">\r\n        <Icon name=\"industry\" />{\" \"}\r\n        <FormattedMessage id=\"interface.editCompany\" />\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyEditHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport CompanyEditHeader from \"../molecules/CompanyEditHeader\";\r\nimport CompanyEditForm from \"../organisms/CompanyEditForm\";\r\n\r\nconst CompanyEditor = props => {\r\n  const company = props.item;\r\n  return (\r\n    <Editor\r\n      initialValues={{\r\n        ...company,\r\n        photos: undefined,\r\n        documents: undefined,\r\n        logo: undefined\r\n      }}\r\n      header={<CompanyEditHeader />}\r\n      resource={companyResource}\r\n      photos={company.photos}\r\n      documents={company.documents}\r\n    >\r\n      <CompanyEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nCompanyEditor.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(CompanyEditor, companyResource);\r\n","import React from \"react\";\r\nimport { Header, Image, Modal } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\n\r\nconst Photos = props => {\r\n  if (props.photos) {\r\n    return props.photos.map(photo => (\r\n      <div key={photo.path} className=\"three wide column middle aligned\">\r\n        <Modal\r\n          trigger={<Image fluid src={serverURL + photo.path} />}\r\n          basic\r\n          size=\"small\"\r\n          closeIcon\r\n        >\r\n          <Header icon=\"file image\" content={photo.originalname} />\r\n          <Modal.Content>\r\n            <Image fluid src={serverURL + photo.path} />\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    ));\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nPhotos.propTypes = {};\r\n\r\nexport default Photos;\r\n","import React from \"react\";\r\nimport { Divider, Header, Icon, List } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport MapWrapper from \"./MapWrapper\";\r\n\r\nconst CompanyView = props => {\r\n  return (\r\n    <>\r\n      <div className=\"ui row stackable\">\r\n        <div className=\"eight wide column\">\r\n          <Header as=\"h2\">\r\n            <Icon name=\"industry\" />\r\n            <Header.Content>\r\n              <Header.Subheader>\r\n                <FormattedMessage id=\"interface.name\" />\r\n              </Header.Subheader>\r\n              {props.company.name}\r\n            </Header.Content>\r\n          </Header>\r\n          {props.company.address && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"map marker alternate\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.address\" />\r\n                </Header.Subheader>\r\n                {props.company.address}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          {props.company.phone && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"phone\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.phone\" />\r\n                </Header.Subheader>\r\n                {\r\n                  <a href={\"tel:\" + props.company.phone}>\r\n                    {props.company.phone}\r\n                  </a>\r\n                }\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          {props.company.email && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"at\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.email\" />\r\n                </Header.Subheader>\r\n                {\r\n                  <a href={\"mailto:\" + props.company.email}>\r\n                    {props.company.email}\r\n                  </a>\r\n                }\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n          {props.company.note && (\r\n            <Header as=\"h2\">\r\n              <Icon name=\"sticky note\" />\r\n              <Header.Content>\r\n                <Header.Subheader>\r\n                  <FormattedMessage id=\"interface.note\" />\r\n                </Header.Subheader>\r\n                {props.company.note}\r\n              </Header.Content>\r\n            </Header>\r\n          )}\r\n        </div>\r\n        {props.company.LatLng ? (\r\n          <div className=\"eight wide column\">\r\n            <MapWrapper\r\n              marker={props.company.LatLng}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nCompanyView.propTypes = {};\r\n\r\nexport default CompanyView;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Button, Icon, Modal } from \"semantic-ui-react\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { addContact } from \"../actions/contactsActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddContact extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n  open = () => this.setState({ open: true });\r\n  close = () => this.setState({ open: false });\r\n  submitForm = values => {\r\n    values.company = this.props.company;\r\n    this.props.addContact(values);\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    const { pristine, submitting, handleSubmit } = this.props;\r\n    return (\r\n      <Modal\r\n        open={this.state.open}\r\n        onOpen={this.open}\r\n        onClose={this.close}\r\n        size={\"tiny\"}\r\n        trigger={\r\n          <Dropdown.Item  onClick={this.open}>\r\n            <Icon name=\"address book\" />{\" \"}\r\n              <FormattedMessage\r\n                icon\r\n                labelPosition=\"right\"\r\n                id=\"interface.addContact\"\r\n              />\r\n          </Dropdown.Item>\r\n        }\r\n      >\r\n        <Modal.Header>\r\n          <Icon name=\"address book\" />{\" \"}\r\n          <FormattedMessage id=\"interface.addContact\" />\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <Form onSubmit={handleSubmit(this.submitForm)}>\r\n            <Form.Field>\r\n              <label>\r\n                <FormattedMessage id=\"interface.humanName\" />\r\n              </label>\r\n              <Field\r\n                name=\"name\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                validate={requiredValidator}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                <FormattedMessage id=\"interface.phone\" />\r\n              </label>\r\n              <Field\r\n                name=\"phone\"\r\n                component={renderField}\r\n                type=\"text\"\r\n                validate={requiredValidator}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>\r\n                <FormattedMessage id=\"interface.note\" />\r\n              </label>\r\n              <Field name=\"note\" component=\"textarea\" rows={3} />\r\n            </Form.Field>\r\n            <Button\r\n              type=\"submit\"\r\n              icon\r\n              labelPosition=\"right\"\r\n              positive\r\n              disabled={pristine || submitting}\r\n            >\r\n              <FormattedMessage id=\"interface.save\" /> <Icon name=\"save\" />\r\n            </Button>\r\n          </Form>\r\n        </Modal.Content>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nAddContact.propTypes = {\r\n  company: PropTypes.string.isRequired,\r\n  addContact: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addContact: contact => dispatch(addContact(contact))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(injectIntl(reduxForm({ form: \"Add contact\" })(AddContact)));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport AddContact from \"../organisms/AddContact\";\r\nimport DeleteDataByIdDialog from \"./DeleteDataByIdDialog\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\n\r\nconst CompanySettings = props => {\r\n  const company = props.company;\r\n  const deleteCompany = props.deleteCompany;\r\n  return (\r\n    <Dropdown\r\n      pointing={\"top right\"}\r\n      item\r\n      icon={{ name: \"wrench\", size: \"big\" }}\r\n    >\r\n      <Dropdown.Menu>\r\n        {company.create && (\r\n          <>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\"/r/hubs/add/\" + company._id + \"/\" + company.name}\r\n            >\r\n              <Icon name=\"warehouse\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addHub\" />\r\n            </Dropdown.Item>\r\n            <AddContact company={company._id} />\r\n          </>\r\n        )}\r\n        {company.update && (\r\n          <>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item as={Link} to={\"/r/companies/edit/\" + company._id}>\r\n              <Icon name=\"edit\" /> <FormattedMessage id=\"interface.edit\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item disabled>\r\n              <Icon name=\"archive\" />{\" \"}\r\n              <FormattedMessage id=\"interface.archive\" />\r\n            </Dropdown.Item>\r\n            {deleteCompany && (\r\n              <DeleteDataByIdDialog\r\n                header={<FormattedMessage id={\"string.deleteCompanyHeader\"} />}\r\n                body={\r\n                  <FormattedMessage\r\n                    id={\"string.deleteCompanyBody\"}\r\n                    values={{ company: company.name }}\r\n                  />\r\n                }\r\n                id={company._id}\r\n                resourceName={companyResource}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n        {company.isOwner && (\r\n          <>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\"/r/permissions/\" + company._id + \"/\" + company.name}\r\n            >\r\n              <Icon name=\"shield alternate\" />{\" \"}\r\n              <FormattedMessage id=\"interface.permissions\" />\r\n            </Dropdown.Item>\r\n          </>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nCompanySettings.propTypes = {};\r\n\r\nexport default CompanySettings;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport Contact from \"../molecules/Contact\";\r\n\r\nconst CompanyContacts = props => {\r\n  return (\r\n    <Card.Group className={\"stackable\"} itemsPerRow={4}>\r\n      {props.contacts.map(contact => {\r\n        return (\r\n          <Contact showCompany={false} key={contact._id} contact={contact} />\r\n        );\r\n      })}\r\n    </Card.Group>\r\n  );\r\n};\r\n\r\nCompanyContacts.propTypes = {};\r\n\r\nexport default CompanyContacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Header, Icon, List } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {serverURL} from \"../helpers/serverURL\";\r\n\r\nconst DocsOrganism = props => {\r\n  const documents = props.documents\r\n    ? props.documents.map(doc => (\r\n        <List.Item as=\"a\" href={serverURL + doc.path} key={doc.path}>\r\n          <Icon name=\"file\" /> {doc.originalname}\r\n        </List.Item>\r\n      ))\r\n    : undefined;\r\n  return (\r\n    <>\r\n      <div className=\"eight wide column\">\r\n        <Header as=\"h2\">\r\n          <Icon name=\"file pdf\" />\r\n          <Header.Content>\r\n            <FormattedMessage id=\"interface.documents\" />\r\n          </Header.Content>\r\n        </Header>\r\n        {documents ? <List link>{documents}</List> : null}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nDocsOrganism.propTypes = {\r\n  documents: PropTypes.array.isRequired\r\n};\r\n\r\nexport default DocsOrganism;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport Photos from \"./Photos\";\r\n\r\nconst LogoPhotosHeaders = props => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"three wide column middle aligned\">\r\n        {props.logo && (\r\n          <Image className={\".viewerLogo\"} src={serverURL + props.logo.path} />\r\n        )}\r\n      </div>\r\n      <Photos photos={props.photos} />\r\n    </div>\r\n  );\r\n};\r\n\r\nLogoPhotosHeaders.propTypes = {\r\n  logo: PropTypes.string.isRequired,\r\n  photos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default LogoPhotosHeaders;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Divider, Icon, Image, List } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport Photos from \"../organisms/Photos\";\r\nimport CompanyView from \"../organisms/CompanyView\";\r\nimport CompanyHub from \"../molecules/CompanyHub\";\r\nimport CompanySettings from \"../molecules/CompanySettings\";\r\nimport Contact from \"../molecules/Contact\";\r\nimport CompanyContacts from \"../organisms/CompanyContacts\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DocsOrganism from \"../organisms/DocsOrganism\";\r\nimport LogoPhotosHeaders from \"../organisms/LogoPhotosHeaders\";\r\n\r\nconst CompanyViewTemplate = props => {\r\n  const company = props.company;\r\n  const CRUD = company.CRUD;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <LogoPhotosHeaders logo={company.logo} photos={company.photos}/>\r\n        <Divider />\r\n        {company.update && (\r\n          <CompanySettings company={company} deleteCompany={company.delete} />\r\n        )}\r\n        <CompanyView company={company} id={company._id} CRUD={CRUD} />\r\n        <div className=\"four column row stackable\">\r\n          {company.hubs &&\r\n            company.hubs.map(hub => <CompanyHub key={hub._id} hub={hub} />)}\r\n        </div>\r\n        {company.documents && <DocsOrganism documents={company.documents} />}\r\n        {company.contacts && company.contacts.length > 0 && (\r\n          <div className=\"sixteen wide column\">\r\n            <Header as=\"h2\">\r\n              <Icon name=\"address book\" />\r\n              <Header.Content>\r\n                <FormattedMessage id=\"interface.contacts\" />\r\n              </Header.Content>\r\n            </Header>\r\n            <CompanyContacts contacts={company.contacts} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCompanyViewTemplate.propTypes = {\r\n  company: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CompanyViewTemplate;\r\n","import React from \"react\";\r\nimport { companyResource } from \"../helpers/resourceNames\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport CompanyViewTemplate from \"../templates/CompanyViewTemplate\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CompanyViewer(props) {\r\n  const company = props.item;\r\n  return <CompanyViewTemplate company={company} />;\r\n}\r\n\r\nCompanyViewer.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(CompanyViewer, companyResource);\r\n","import React from \"react\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field } from \"redux-form\";\r\nimport inputField from \"../molecules/FileInputField\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\n\r\nconst HubEditForm = props => {\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.name\" />\r\n        </label>\r\n        <Field\r\n          name=\"name\"\r\n          component={renderField}\r\n          type=\"text\"\r\n          validate={requiredValidator}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.note\" />\r\n        </label>\r\n        <Field name=\"note\" component=\"textarea\" rows={3} />\r\n      </Form.Field>\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"interface.uploadPhotos\"} />}\r\n        icon=\"file image\"\r\n        name=\"photos\"\r\n      />\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"interface.uploadDocuments\"} />}\r\n        icon=\"file pdf\"\r\n        name=\"documents\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nHubEditForm.propTypes = {};\r\n\r\nexport default HubEditForm;\r\n","import React from \"react\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport HubEditForm from \"../organisms/HubEditForm\";\r\nimport { hubResource } from \"../helpers/resourceNames\";\r\n\r\nconst HubAdder = props => {\r\n  const company = props.match.params.companyId;\r\n  return (\r\n    <Editor initialValues={{ company: company }} resource={hubResource}>\r\n      <HubEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nexport default HubAdder;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { hubResource } from \"../helpers/resourceNames\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport HubEditForm from \"../organisms/HubEditForm\";\r\n\r\nconst HubEditor = props => {\r\n  const hub = props.item;\r\n  return (\r\n    <Editor\r\n      resource={hubResource}\r\n      photos={hub.photos}\r\n      documents={hub.documents}\r\n      initialValues={{ ...hub, photos: undefined, documents: undefined }}\r\n    >\r\n      <HubEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nHubEditor.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(HubEditor, hubResource);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon, List } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HubDevices = props => {\r\n  if (!props.devices || props.devices.length < 1) {\r\n    return null;\r\n  }\r\n  function getListItem(item) {\r\n    return (\r\n      <List.Item as={Link} to={\"/r/devices/view/\" + item._id} key={item._id}>\r\n        {item.name}\r\n      </List.Item>\r\n    );\r\n  }\r\n  const cameras = props.devices\r\n    .filter(d => d.deviceType === \"camera\")\r\n    .map(c => getListItem(c));\r\n  const recorders = props.devices\r\n    .filter(d => d.deviceType === \"recorder\")\r\n    .map(r => getListItem(r));\r\n  const netdevs = props.devices\r\n    .filter(d => d.deviceType === \"netdev\")\r\n    .map(n => getListItem(n));\r\n  return (\r\n    <>\r\n      <div>\r\n        <Icon name={\"record\"} />\r\n        <List bulleted horizontal>\r\n          {cameras}\r\n        </List>\r\n      </div>\r\n      <div>\r\n        <Icon name=\"hdd\" />\r\n        <List bulleted horizontal>\r\n          {recorders}\r\n        </List>\r\n      </div>\r\n      <div>\r\n        <Icon name=\"microchip\" />\r\n        <List bulleted horizontal>\r\n          {netdevs}\r\n        </List>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nHubDevices.propTypes = {\r\n  devices: PropTypes.array.isRequired\r\n};\r\n\r\nexport default HubDevices;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Divider, Header, Icon, Popup} from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HubDevices from \"./HubDevices\";\r\n\r\nconst HubView = props => {\r\n  const hub = props.hub;\r\n  return (\r\n      <div className=\"eight wide column\">\r\n        <Header as=\"h2\">\r\n          <Icon name=\"warehouse\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.name\" />\r\n            </Header.Subheader>\r\n            {hub.name}\r\n          </Header.Content>\r\n        </Header>\r\n        <Header as=\"h2\">\r\n          <Icon name=\"industry\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.company\" />\r\n            </Header.Subheader>\r\n            <Link to={\"/r/companies/view/\" + hub.company._id}>\r\n              {hub.company.name}\r\n            </Link>\r\n          </Header.Content>\r\n        </Header>\r\n        {hub.note && (\r\n          <Header as=\"h2\">\r\n            <Icon name=\"sticky note\" />\r\n            <Header.Content>\r\n              <Header.Subheader>\r\n                <FormattedMessage id=\"interface.note\" />\r\n              </Header.Subheader>\r\n              {hub.note}\r\n            </Header.Content>\r\n          </Header>\r\n        )}\r\n        <Divider />\r\n        <HubDevices devices={hub.devices}/>\r\n      </div>\r\n  );\r\n};\r\n\r\nHubView.propTypes = {\r\n  hub: PropTypes.object.isRequired\r\n};\r\n\r\nexport default HubView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DeleteDataByIdDialog from \"./DeleteDataByIdDialog\";\r\nimport { hubResource } from \"../helpers/resourceNames\";\r\n\r\nconst HubSettings = props => {\r\n  const hub = props.hub;\r\n  const create = props.create;\r\n  const update = props.update;\r\n  const deleteHub = props.deleteHub;\r\n  return (\r\n    <Dropdown\r\n      pointing={\"top right\"}\r\n      item\r\n      icon={{ name: \"wrench\", size: \"big\" }}\r\n    >\r\n      <Dropdown.Menu>\r\n        {create && (\r\n          <>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\r\n                hub.LatLng\r\n                  ? \"/r/devices/add/camera/\" +\r\n                    hub._id +\r\n                    \"/\" +\r\n                    hub.name +\r\n                    \"/\" +\r\n                    hub.LatLng.lat +\r\n                    \"/\" +\r\n                    hub.LatLng.lng\r\n                  : \"/r/devices/add/camera/\" + hub._id + \"/\" + hub.name\r\n              }\r\n            >\r\n              <Icon name=\"record\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addCamera\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\r\n                hub.LatLng\r\n                  ? \"/r/devices/add/netdev/\" +\r\n                    hub._id +\r\n                    \"/\" +\r\n                    hub.name +\r\n                    \"/\" +\r\n                    hub.LatLng.lat +\r\n                    \"/\" +\r\n                    hub.LatLng.lng\r\n                  : \"/r/devices/add/netdev/\" + hub._id + \"/\" + hub.name\r\n              }\r\n            >\r\n              <Icon name=\"microchip\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addNetDev\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item\r\n              as={Link}\r\n              to={\r\n                hub.LatLng\r\n                  ? \"/r/devices/add/recorder/\" +\r\n                    hub._id +\r\n                    \"/\" +\r\n                    hub.name +\r\n                    \"/\" +\r\n                    hub.LatLng.lat +\r\n                    \"/\" +\r\n                    hub.LatLng.lng\r\n                  : \"/r/devices/add/recorder/\" + hub._id + \"/\" + hub.name\r\n              }\r\n            >\r\n              <Icon name=\"hdd\" />{\" \"}\r\n              <FormattedMessage id=\"interface.addRecorder\" />\r\n            </Dropdown.Item>\r\n          </>\r\n        )}\r\n        {update && (\r\n          <>\r\n            <Dropdown.Divider />\r\n            <Dropdown.Item as={Link} to={\"/r/hubs/edit/\" + hub._id}>\r\n              <Icon name=\"edit\" /> <FormattedMessage id=\"interface.edit\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item disabled>\r\n              <Icon name=\"archive\" />{\" \"}\r\n              <FormattedMessage id=\"interface.archive\" />\r\n            </Dropdown.Item>\r\n            {deleteHub && (\r\n              <DeleteDataByIdDialog\r\n                resourceName={hubResource}\r\n                id={hub._id}\r\n                header={<FormattedMessage id={\"string.deleteHubHeader\"} />}\r\n                body={\r\n                  <FormattedMessage\r\n                    id={\"string.deleteHubBody\"}\r\n                    values={{ hub: hub.name }}\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nHubSettings.propTypes = {\r\n  hub: PropTypes.object.isRequired,\r\n  create: PropTypes.bool.isRequired,\r\n  update: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default HubSettings;\r\n","import React from 'react';\r\nimport {Loader} from \"semantic-ui-react\";\r\n\r\nconst Load = () => {\r\n  return (\r\n      <Loader active inline=\"centered\" />\r\n  );\r\n};\r\n\r\nexport default Load;","import React, { Component } from \"react\";\r\nimport { Checkbox, Comment } from \"semantic-ui-react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nclass CommentReplyForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      reply: \"\",\r\n      checked: false\r\n    };\r\n    this.handleIssueForm = this.handleIssueForm.bind(this);\r\n  }\r\n  handleIssueForm(value) {\r\n    this.setState({\r\n      reply: value\r\n    });\r\n  }\r\n  render() {\r\n    const { intl } = this.props;\r\n    return (\r\n      <>\r\n        <Comment.Actions>\r\n          <Comment.Action\r\n            onClick={e => this.setState({ show: !this.state.show })}\r\n          >\r\n            <FormattedMessage id={\"interface.reply\"}/>\r\n          </Comment.Action>\r\n        </Comment.Actions>\r\n        {this.state.show && (\r\n          <Form reply>\r\n            <Form.TextArea\r\n              onChange={(e, { value }) => this.handleIssueForm(value)}\r\n            />\r\n            <Button\r\n              type={\"button\"}\r\n              onClick={() =>\r\n                this.props.sendIssue(\r\n                  { reply: this.state.reply, open: !this.state.checked },\r\n                  this.props.issue\r\n                )\r\n              }\r\n              disabled={this.state.reply.length < 1}\r\n              content={intl.formatMessage({ id: \"interface.addReply\" })}\r\n              labelPosition=\"left\"\r\n              icon=\"edit\"\r\n              primary\r\n            />\r\n            <Checkbox\r\n              onChange={(e, data) => this.setState({ checked: data.checked })}\r\n              label={intl.formatMessage({ id: \"interface.solved\" })}\r\n            />\r\n          </Form>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(CommentReplyForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Icon, Popup } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nconst IssueUnlock = props => {\r\n  return (\r\n    <Popup\r\n      trigger={\r\n        <Icon\r\n          onClick={() => props.unlock(props._id)}\r\n          name={\"unlock\"}\r\n          className={\"pointer_on_hover green_color_on_hover\"}\r\n        />\r\n      }\r\n      content={<FormattedMessage id={\"interface.unlockIssue\"} />}\r\n      basic\r\n    />\r\n  );\r\n};\r\n\r\nIssueUnlock.propTypes = {};\r\n\r\nexport default IssueUnlock;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\n\r\n/*\r\n * actions\r\n */\r\n\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const SET_IS_LOGGED = \"SET_IS_LOGGED\";\r\nexport const SET_DEFAULT_CENTER = \"SET_DEFAULT_CENTER\";\r\nexport const SET_USER_ID = \"SET_USER_ID\";\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function setError(error) {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: error\r\n  };\r\n}\r\n\r\nexport function changeLanguage(language) {\r\n  return {\r\n    type: \"CHANGE_LANGUAGE\",\r\n    payload: language\r\n  };\r\n}\r\nexport function updateUser(user) {\r\n  return {\r\n    type: UPDATE_USER,\r\n    payload: user\r\n  };\r\n}\r\n\r\nexport function setIsLogged(isLogged) {\r\n  return {\r\n    type: SET_IS_LOGGED,\r\n    payload: isLogged\r\n  };\r\n}\r\n\r\nexport function setDefaultCenter(defaultCenter) {\r\n  return {\r\n    type: SET_DEFAULT_CENTER,\r\n    payload: defaultCenter\r\n  };\r\n}\r\n\r\nexport function setUserId(id) {\r\n  return {\r\n    type: SET_USER_ID,\r\n    payload: id\r\n  };\r\n}\r\n\r\nexport function login() {\r\n  return function(dispatch, getState) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(\"auth\", {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                if (result.data.ok) {\r\n                  dispatch(setIsLogged(true));\r\n                }\r\n              },\r\n              error => {\r\n                dispatch(setError(error.toString()));\r\n              }\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return function(dispatch, getState) {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(result => {\r\n        dispatch(setIsLogged(false));\r\n      })\r\n      .catch(error => {});\r\n  };\r\n}\r\n\r\nexport function getUserId() {\r\n  return function(dispatch, getState) {\r\n    firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(\r\n        idToken => {\r\n          axiosHttpClient\r\n            .get(\"users/\", {\r\n              headers: {\r\n                Authorization: \"Bearer \" + idToken\r\n              }\r\n            })\r\n            .then(\r\n              result => {\r\n                dispatch(setUserId(result.data._id));\r\n              },\r\n              error => {\r\n                dispatch(setError(error.toString()));\r\n              }\r\n            );\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function getDefaultCenterFromUserAgent() {\r\n  return function(dispatch, getState) {\r\n    const language = getState().userReducer.language;\r\n    navigator.geolocation.getCurrentPosition(\r\n      pos => {\r\n        dispatch(\r\n          setDefaultCenter({\r\n            lat: pos.coords.latitude,\r\n            lng: pos.coords.longitude\r\n          })\r\n        );\r\n      },\r\n      // User blocked geolocation\r\n      error => {\r\n        switch (language) {\r\n          case \"en-GB\":\r\n            // Big Ben\r\n            dispatch(\r\n                setDefaultCenter({\r\n                  lat: 51.50078340519703,\r\n                  lng: -0.12459538923064883\r\n                })\r\n            );\r\n            break;\r\n          case \"en-US\":\r\n            // HP Garage\r\n            dispatch(\r\n              setDefaultCenter({\r\n                lat: 37.44303269805327,\r\n                lng: -122.15461939573288\r\n              })\r\n            );\r\n            break;\r\n          case \"uk\":\r\n            // Independence Monument, Kiev\r\n            dispatch(\r\n              setDefaultCenter({\r\n                lat: 50.44956196647267,\r\n                lng: 30.52538046615541\r\n              })\r\n            );\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Header, Icon, Modal, Popup } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass IssueDelete extends Component {\r\n  state = { modalOpen: false };\r\n\r\n  handleOpen = () => this.setState({ modalOpen: true });\r\n\r\n  handleClose = () => this.setState({ modalOpen: false });\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.state.modalOpen}\r\n        onClose={this.handleClose}\r\n        trigger={\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                onClick={() => this.handleOpen()}\r\n                name={\"trash\"}\r\n                className={\"pointer_on_hover red_color_on_hover\"}\r\n              />\r\n            }\r\n            content={\r\n              this.props.replyId ? (\r\n                <FormattedMessage id={\"interface.deleteReply\"} />\r\n              ) : (\r\n                <FormattedMessage id={\"interface.deleteIssue\"} />\r\n              )\r\n            }\r\n            basic\r\n          />\r\n        }\r\n        basic\r\n        size=\"small\"\r\n      >\r\n        <Header\r\n          icon=\"trash\"\r\n          content={\r\n            this.props.replyId ? (\r\n              <FormattedMessage id={\"interface.deleteReply\"} />\r\n            ) : (\r\n              <FormattedMessage id={\"interface.deleteIssue\"} />\r\n            )\r\n          }\r\n        />\r\n        <Modal.Content>\r\n          <p>\r\n            {this.props.replyId ? (\r\n              <FormattedMessage id={\"string.deleteReply\"} />\r\n            ) : (\r\n              <FormattedMessage id={\"string.deleteIssue\"} />\r\n            )}\r\n          </p>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={() => {\r\n              this.handleClose();\r\n            }}\r\n            basic\r\n            color=\"green\"\r\n            inverted\r\n          >\r\n            <Icon name=\"remove\" /> {<FormattedMessage id={\"interface.no\"} />}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              this.props.delete(this.props._id, this.props.replyId);\r\n              this.handleClose();\r\n            }}\r\n            color=\"red\"\r\n            inverted\r\n          >\r\n            <Icon name=\"checkmark\" />{\" \"}\r\n            {<FormattedMessage id={\"interface.yes\"} />}\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nIssueDelete.propTypes = {};\r\n\r\nexport default IssueDelete;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Icon, Modal, Popup, TextArea } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass IssueEdit extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      modalOpen: false,\r\n      text: props.text\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ text: event.target.value });\r\n  }\r\n\r\n  handleOpen = () => this.setState({ modalOpen: true });\r\n\r\n  handleClose = () => this.setState({ modalOpen: false });\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.state.modalOpen}\r\n        onClose={this.handleClose}\r\n        trigger={\r\n          <Popup\r\n            trigger={\r\n              <Icon\r\n                onClick={() => this.handleOpen()}\r\n                name={\"edit\"}\r\n                className={\"pointer_on_hover green_color_on_hover\"}\r\n              />\r\n            }\r\n            content={\r\n              this.props.replyId ? (\r\n                <FormattedMessage id={\"interface.editReply\"} />\r\n              ) : (\r\n                <FormattedMessage id={\"interface.editIssue\"} />\r\n              )\r\n            }\r\n            basic\r\n          />\r\n        }\r\n        size={\"tiny\"}\r\n      >\r\n        <Modal.Header>\r\n          {this.props.replyId ? (\r\n            <FormattedMessage id={\"interface.editReply\"} />\r\n          ) : (\r\n            <FormattedMessage id={\"interface.editIssue\"} />\r\n          )}\r\n        </Modal.Header>\r\n        <Modal.Content>\r\n          <TextArea\r\n            rows={4}\r\n            style={{ width: \"100%\", display: \"block\" }}\r\n            value={this.state.text}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            onClick={() => {\r\n              this.handleClose();\r\n            }}\r\n          >\r\n            <FormattedMessage id={\"interface.cancel\"} />\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              this.handleClose();\r\n              this.props.patch(\r\n                { message: this.state.text },\r\n                this.props._id,\r\n                this.props.replyId\r\n              );\r\n            }}\r\n            positive\r\n            icon=\"save\"\r\n            labelPosition=\"right\"\r\n            content={<FormattedMessage id={\"interface.save\"} />}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nIssueEdit.propTypes = {};\r\n\r\nexport default IssueEdit;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Comment,\r\n  Divider,\r\n  Form,\r\n  Header,\r\n  Icon\r\n} from \"semantic-ui-react\";\r\nimport {\r\n  FormattedDate,\r\n  FormattedMessage,\r\n  FormattedRelative,\r\n  FormattedTime,\r\n  injectIntl\r\n} from \"react-intl\";\r\nimport {\r\n  deleteIssue,\r\n  getIssues,\r\n  patchIssue,\r\n  sendIssue\r\n} from \"../actions/issuesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport Load from \"../helpers/Load\";\r\nimport CommentReplyForm from \"../molecules/CommentReplyForm\";\r\nimport IssueUnlock from \"../molecules/IssueUnlock\";\r\nimport { getUserId } from \"../actions/userActions\";\r\nimport IssueDelete from \"../molecules/IssueDelete\";\r\nimport IssueEdit from \"../molecules/IssueEdit\";\r\n\r\nclass Issues extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      issue: \"\",\r\n      collapsed: false\r\n    };\r\n\r\n    this.handleIssueForm = this.handleIssueForm.bind(this);\r\n    this.unlockIssue = this.unlockIssue.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n    this.patchIssue = this.patchIssue.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getIssues(\"hub\", this.props.hub._id);\r\n    this.props.getUserId();\r\n  }\r\n\r\n  handleIssueForm(value) {\r\n    this.setState({\r\n      issue: value\r\n    });\r\n  }\r\n\r\n  handleCheckbox = (e, { checked }) => this.setState({ collapsed: checked });\r\n\r\n  unlockIssue(issueId) {\r\n    this.props.patchIssue(null, issueId, true);\r\n  }\r\n\r\n  patchIssue(issue, issueId, replyId = false) {\r\n    if (replyId) {\r\n      this.props.patchIssue(issue, issueId, false, replyId);\r\n    } else {\r\n      this.props.patchIssue(issue, issueId);\r\n    }\r\n  }\r\n\r\n  deleteIssue(issueId, replyId = false) {\r\n    this.props.deleteIssue(issueId, replyId);\r\n  }\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    const { intl } = this.props;\r\n    let view = <></>;\r\n    const id = this.props.hub._id;\r\n    const issues = this.props.issuesReducer[id] || [];\r\n    if (this.props.issuesReducer.isIssuesFetching[id]) {\r\n      view = (\r\n        <div className=\"row\">\r\n          <Load />\r\n        </div>\r\n      );\r\n    } else if (this.props.issuesReducer.issuesError[id]) {\r\n      view = (\r\n        <div className=\"row\">\r\n          <div className=\"eight wide column center aligned\">\r\n            <Header icon>\r\n              <Icon name=\"frown outline\" />\r\n              Oops! Something went wrong...\r\n            </Header>\r\n            <Divider />\r\n            <code>{this.props.issuesReducer.error.toString()}</code>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (issues) {\r\n      const comments = issues.map(comment => {\r\n        return (\r\n          <Comment key={comment._id}>\r\n            <Comment.Avatar src={comment.user.picture} />\r\n            <Comment.Content>\r\n              <Comment.Author as=\"a\">{comment.user.name}</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>\r\n                  <FormattedDate value={comment.date} />{\" \"}\r\n                  <FormattedTime value={comment.date} /> (\r\n                  <FormattedRelative value={comment.date} />\r\n                  {comment.edited && (\r\n                    <>\r\n                      {\", \"}\r\n                      <FormattedMessage id={\"interface.edited\"} />{\" \"}\r\n                      <FormattedRelative value={comment.edited} />\r\n                    </>\r\n                  )}\r\n                  ){\" \"}\r\n                  {this.props.userId === comment.user._id && (\r\n                    <IssueEdit\r\n                      text={comment.message}\r\n                      _id={comment._id}\r\n                      replyId={false}\r\n                      patch={this.patchIssue}\r\n                    />\r\n                  )}\r\n                  {this.props.userId === comment.user._id && (\r\n                    <IssueDelete\r\n                      _id={comment._id}\r\n                      replyId={false}\r\n                      delete={this.deleteIssue}\r\n                    />\r\n                  )}\r\n                  {!comment.open && this.props.userId === comment.user._id && (\r\n                    <IssueUnlock _id={comment._id} unlock={this.unlockIssue} />\r\n                  )}\r\n                </div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>\r\n                {comment.message}\r\n              </Comment.Text>\r\n            </Comment.Content>\r\n            <Comment.Group collapsed={collapsed}>\r\n              {comment.replies.map(reply => {\r\n                return (\r\n                  <Comment key={reply._id}>\r\n                    <Comment.Avatar src={reply.user.picture} />\r\n                    <Comment.Content>\r\n                      <Comment.Author as=\"a\">{reply.user.name}</Comment.Author>\r\n                      <Comment.Metadata>\r\n                        <div>\r\n                          <FormattedDate value={reply.date} />{\" \"}\r\n                          <FormattedTime value={reply.date} /> (\r\n                          <FormattedRelative value={reply.date} />\r\n                          {reply.edited && (\r\n                            <>\r\n                              {\", \"}\r\n                              <FormattedMessage id={\"interface.edited\"} />{\" \"}\r\n                              <FormattedRelative value={reply.edited} />\r\n                            </>\r\n                          )}\r\n                          ){\" \"}\r\n                          {this.props.userId === reply.user._id && (\r\n                            <IssueEdit\r\n                              text={reply.reply}\r\n                              _id={comment._id}\r\n                              replyId={reply._id}\r\n                              patch={this.patchIssue}\r\n                            />\r\n                          )}\r\n                          {this.props.userId === reply.user._id && (\r\n                            <IssueDelete\r\n                              _id={comment._id}\r\n                              replyId={reply._id}\r\n                              delete={this.deleteIssue}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </Comment.Metadata>\r\n                      <Comment.Text>{reply.reply}</Comment.Text>\r\n                    </Comment.Content>\r\n                  </Comment>\r\n                );\r\n              })}\r\n              {comment.open && (\r\n                <CommentReplyForm\r\n                  issue={comment._id}\r\n                  sendIssue={this.props.sendIssue}\r\n                />\r\n              )}\r\n            </Comment.Group>\r\n          </Comment>\r\n        );\r\n      });\r\n      view = (\r\n        <div className=\"row\">\r\n          <div className=\"sixteen wide column\">\r\n            <Comment.Group threaded>\r\n              <Header as=\"h3\">\r\n                <Icon name={\"stethoscope\"} />{\" \"}\r\n                <FormattedMessage id=\"interface.issue\" />\r\n              </Header>\r\n              <Checkbox\r\n                checked={this.state.collapsed}\r\n                label={intl.formatMessage({ id: \"interface.collapseComments\" })}\r\n                onChange={this.handleCheckbox}\r\n              />\r\n              {comments}\r\n              <Divider />\r\n              {this.props.update && (\r\n                <Form reply>\r\n                  <Form.TextArea\r\n                    onChange={(e, { value }) => this.handleIssueForm(value)}\r\n                  />\r\n                  <Button\r\n                    type={\"button\"}\r\n                    content={<FormattedMessage id=\"interface.addIssue\" />}\r\n                    labelPosition=\"left\"\r\n                    icon=\"bug\"\r\n                    primary\r\n                    disabled={this.state.issue.length < 1}\r\n                    onClick={() =>\r\n                      this.props.sendIssue({\r\n                        hub: this.props.hub._id,\r\n                        issue: this.state.issue\r\n                      })\r\n                    }\r\n                  />\r\n                </Form>\r\n              )}\r\n            </Comment.Group>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return view;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    issuesReducer: state.issuesReducer,\r\n    userId: state.userReducer.userId || false\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    sendIssue: (issue, issueId) => {\r\n      dispatch(sendIssue(issue, issueId));\r\n    },\r\n    getIssues: (byWhat, id) => {\r\n      dispatch(getIssues(byWhat, id));\r\n    },\r\n    getUserId: () => dispatch(getUserId()),\r\n    patchIssue: (issue, issueId, unlock, replyId) => {\r\n      dispatch(patchIssue(issue, issueId, unlock, replyId));\r\n    },\r\n    deleteIssue: (issueId, replyId) => {\r\n      dispatch(deleteIssue(issueId, replyId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(Issues)\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Divider, Image } from \"semantic-ui-react\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport Photos from \"../organisms/Photos\";\r\nimport HubView from \"../organisms/HubView\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\nimport HubSettings from \"../molecules/HubSettings\";\r\nimport Issues from \"../organisms/Issues\";\r\nimport DocsOrganism from \"../organisms/DocsOrganism\";\r\nimport LogoPhotosHeaders from \"../organisms/LogoPhotosHeaders\";\r\n\r\nconst HubViewTemplate = props => {\r\n  const hub = props.hub;\r\n  const company = hub.company;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <LogoPhotosHeaders logo={company.logo} photos={hub.photos}/>\r\n        <Divider />\r\n        {hub.update && (\r\n          <HubSettings create={hub.create} update={hub.update} hub={hub} deleteHub={hub.delete} />\r\n        )}\r\n        <div className={\"row stackable\"}>\r\n          <HubView hub={hub} />\r\n          {hub.LatLng && (\r\n            <div className=\"eight wide column\">\r\n              <MapWrapper defaultCenter={hub.LatLng} marker={hub.LatLng} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {hub.documents && <DocsOrganism documents={hub.documents}/>}\r\n        <Issues update={hub.update} hub={hub} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHubViewTemplate.propTypes = {\r\n  hub: PropTypes.object.isRequired\r\n};\r\n\r\nexport default HubViewTemplate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getItemLoader} from \"../HOCs/ItemLoader\";\r\nimport {hubResource} from \"../helpers/resourceNames\";\r\nimport HubViewTemplate from \"../templates/HubViewTemplate\";\r\n\r\nconst HubViewer = props => {\r\n  const hub = props.item;\r\n  return <HubViewTemplate hub={hub}/>;\r\n};\r\n\r\nHubViewer.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default getItemLoader(HubViewer, hubResource);","const getDeviceIcon = deviceType => {\r\n  switch (deviceType) {\r\n    case \"camera\":\r\n      return \"record\";\r\n    case \"recorder\":\r\n      return \"hdd\";\r\n    case \"netdev\":\r\n      return \"microchip\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n\r\nexport default getDeviceIcon;\r\n","import React from \"react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Field, formValueSelector } from \"redux-form\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { renderField } from \"../molecules/renderField\";\r\nimport { requiredValidator } from \"../helpers/reduxFormValidators\";\r\nimport inputField from \"../molecules/FileInputField\";\r\nimport { connect } from \"react-redux\";\r\nimport { EditorReduxFormName } from \"../helpers/editorReduxFormName\";\r\nimport PropTypes from \"prop-types\";\r\nimport getDeviceIcon from \"../helpers/getDeviceIcon\";\r\n\r\n// TODO ptz\r\nconst DeviceEditForm = props => {\r\n  let iconName = getDeviceIcon(props.deviceType);\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.name\" />\r\n        </label>\r\n        <Field\r\n          icon={iconName}\r\n          iconPosition=\"left\"\r\n          name=\"name\"\r\n          component={renderField}\r\n          type=\"text\"\r\n          validate={requiredValidator}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.ip\" />\r\n        </label>\r\n        <Field\r\n          icon=\"terminal\"\r\n          iconPosition=\"left\"\r\n          name=\"ip\"\r\n          component={renderField}\r\n          type=\"text\"\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.serial\" />\r\n        </label>\r\n        <Field\r\n          icon=\"barcode\"\r\n          iconPosition=\"left\"\r\n          name=\"serial\"\r\n          component={renderField}\r\n          type=\"text\"\r\n        />\r\n      </Form.Field>\r\n      {props.deviceType === \"camera\" && (\r\n        <Form.Field>\r\n          <label>\r\n            <FormattedMessage id=\"interface.ptz\" />\r\n          </label>\r\n          <Field name=\"ptz\" id=\"ptz\" component=\"input\" type=\"checkbox\" />\r\n        </Form.Field>\r\n      )}\r\n      <Form.Field>\r\n        <label>\r\n          <FormattedMessage id=\"interface.note\" />\r\n        </label>\r\n        <Field name=\"note\" component=\"textarea\" rows={3} />\r\n      </Form.Field>\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"interface.uploadPhotos\"} />}\r\n        icon=\"file image\"\r\n        name=\"photos\"\r\n      />\r\n      <Field\r\n        component={inputField}\r\n        text={<FormattedMessage id={\"interface.uploadDocuments\"} />}\r\n        icon=\"file pdf\"\r\n        name=\"documents\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nDeviceEditForm.propTypes = {\r\n  deviceType: PropTypes.string.isRequired\r\n};\r\n\r\nconst selector = formValueSelector(EditorReduxFormName); // <-- same as form name\r\nexport default connect(state => {\r\n  const deviceType = selector(state, \"deviceType\");\r\n  return { deviceType };\r\n})(DeviceEditForm);\r\n","import React from \"react\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\nimport DeviceEditForm from \"../organisms/DeviceEditForm\";\r\n\r\nconst DeviceAdder = props => {\r\n  const hub = props.match.params.hubId;\r\n  const deviceType = props.match.params.deviceType;\r\n  const lat = Number(props.match.params.lat) || undefined;\r\n  const lng = Number(props.match.params.lng) || undefined;\r\n  return (\r\n    <Editor\r\n      resource={deviceResource}\r\n      initialValues={{\r\n        hub: hub,\r\n        deviceType: deviceType,\r\n        LatLng: lat && lng ? {lat: lat, lng: lng} : undefined\r\n      }}\r\n    >\r\n      <DeviceEditForm />\r\n    </Editor>\r\n  );\r\n};\r\n\r\nexport default DeviceAdder;\r\n","import React from \"react\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\nimport Editor from \"../HOCs/Editor\";\r\nimport DeviceEditForm from \"../organisms/DeviceEditForm\";\r\n\r\nfunction DeviceEditor(props) {\r\n  const device = props.item;\r\n  return (\r\n    <Editor\r\n      resource={deviceResource}\r\n      initialValues={{ ...device, photos: undefined, documents: undefined }}\r\n      photos={device.photos}\r\n      documents={device.documents}\r\n    >\r\n      <DeviceEditForm deviceType={device.deviceType} />\r\n    </Editor>\r\n  );\r\n}\r\n\r\nexport default getItemLoader(DeviceEditor, deviceResource);\r\n","import React from \"react\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport getDeviceIcon from \"../helpers/getDeviceIcon\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst DeviceView = props => {\r\n  let iconName = getDeviceIcon(props.device.deviceType);\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Header as=\"h2\">\r\n        <Icon name={iconName} />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"interface.name\" />\r\n          </Header.Subheader>\r\n          {props.device.name}\r\n        </Header.Content>\r\n      </Header>\r\n      <Header as=\"h2\">\r\n        <Icon name=\"warehouse\" />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"interface.hub\" />\r\n          </Header.Subheader>\r\n          <Link to={\"/r/hubs/view/\" + props.device.hub._id}>\r\n            {props.device.hub.name}\r\n          </Link>\r\n        </Header.Content>\r\n      </Header>\r\n      {props.device.deviceType === \"camera\" && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"expand\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.ptz\" />\r\n            </Header.Subheader>\r\n            {props.device.ptz ? \"Yes\" : \"No\"}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.device.ip && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"terminal\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.ip\" />\r\n            </Header.Subheader>\r\n            {props.device.ip}{\" \"}\r\n            <CopyToClipboard text={props.device.ip}>\r\n              <Icon color={\"blue\"} name=\"copy outline\" />\r\n            </CopyToClipboard>\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.device.serial && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"barcode\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.serial\" />\r\n            </Header.Subheader>\r\n            {props.device.serial}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {props.device.note && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"sticky note\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.note\" />\r\n            </Header.Subheader>\r\n            {props.device.note}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceView;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Dropdown, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DeleteDataByIdDialog from \"./DeleteDataByIdDialog\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\n\r\nconst DeviceSettings = props => {\r\n  const update = props.update;\r\n  const device = props.device;\r\n  const deleteDevice = props.deleteDevice;\r\n  return (\r\n    <Dropdown\r\n      pointing={\"top right\"}\r\n      item\r\n      icon={{ name: \"wrench\", size: \"big\" }}\r\n    >\r\n      <Dropdown.Menu>\r\n        {update && (\r\n          <>\r\n            <Dropdown.Item as={Link} to={\"/r/devices/edit/\" + device._id}>\r\n              <Icon name=\"edit\" /> <FormattedMessage id=\"interface.edit\" />\r\n            </Dropdown.Item>\r\n            <Dropdown.Item disabled>\r\n              <Icon name=\"archive\" />{\" \"}\r\n              <FormattedMessage id=\"interface.archive\" />\r\n            </Dropdown.Item>\r\n            {deleteDevice && (\r\n              <DeleteDataByIdDialog\r\n                header={<FormattedMessage id={\"string.deleteDeviceHeader\"} />}\r\n                body={\r\n                  <FormattedMessage\r\n                    id={\"string.deleteDeviceBody\"}\r\n                    values={{ device: device.name }}\r\n                  />\r\n                }\r\n                id={device._id}\r\n                resourceName={deviceResource}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nDeviceSettings.propTypes = {\r\n  update: PropTypes.bool.isRequired,\r\n  device: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DeviceSettings;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Divider, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Photos from \"../organisms/Photos\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport DeviceView from \"../organisms/DeviceView\";\r\nimport MapWrapper from \"../organisms/MapWrapper\";\r\nimport { serverURL } from \"../helpers/serverURL\";\r\nimport DeviceSettings from \"../molecules/DeviceSettings\";\r\nimport DocsOrganism from \"../organisms/DocsOrganism\";\r\nimport LogoPhotosHeaders from \"../organisms/LogoPhotosHeaders\";\r\n\r\nconst DeviceViewTemplate = props => {\r\n  const device = props.device;\r\n  const company = props.company;\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <LogoPhotosHeaders logo={company.logo} photos={device.photos}/>\r\n        <Divider />\r\n        {device.update && (\r\n          <DeviceSettings update={device.update} device={device} deleteDevice={device.delete} />\r\n        )}\r\n        <div className=\"row stackable\">\r\n          <DeviceView device={device} />\r\n          {device.LatLng && (\r\n            <div className=\"eight wide column\">\r\n              <MapWrapper\r\n                defaultCenter={device.LatLng}\r\n                marker={device.LatLng || null}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {device.documents && device.documents.length > 0 && <DocsOrganism documents={device.documents}/>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDeviceViewTemplate.propTypes = {\r\n  device: PropTypes.object.isRequired,\r\n  company: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DeviceViewTemplate;\r\n","import React from \"react\";\r\nimport { getItemLoader } from \"../HOCs/ItemLoader\";\r\nimport { deviceResource } from \"../helpers/resourceNames\";\r\nimport DeviceViewTemplate from \"../templates/DeviceViewTemplate\";\r\n\r\nconst DeviceViewer = props => {\r\n  const device = props.item;\r\n  const company = device.hub.company;\r\n  return (\r\n    <DeviceViewTemplate\r\n      device={device}\r\n      company={company}\r\n    />\r\n  );\r\n};\r\n\r\nexport default getItemLoader(DeviceViewer, deviceResource);\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { axiosHttpClient } from \"../axiosInstance\";\r\n\r\n/*\r\n * Actions\r\n */\r\n\r\nexport const REQUEST_USERS = \"REQUEST_USERS\";\r\nexport const RECEIVE_USERS = \"RECEIVE_USERS\";\r\n\r\n/*\r\n * Action creators\r\n */\r\n\r\nexport function requestUser() {\r\n  return {\r\n    type: REQUEST_USERS\r\n  };\r\n}\r\n\r\nexport function receiveUser(user) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    payload: user\r\n  };\r\n}\r\n\r\n/*\r\n * API calls\r\n */\r\n\r\nexport function getUser(id) {\r\n  return dispatch => {\r\n    dispatch(requestUser());\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.get(\"users/\" + id, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + idToken\r\n          }\r\n        })\r\n      )\r\n      .then(\r\n        result => {\r\n          console.log(result);\r\n          if (result.data.ok) {\r\n            dispatch(receiveUser(result.data.result));\r\n          }\r\n        },\r\n        error => {}\r\n      );\r\n  };\r\n}\r\n\r\nexport function postPermissions(company, user, CRUD) {\r\n  return dispatch => {\r\n    return firebase\r\n      .auth()\r\n      .currentUser.getIdToken(false)\r\n      .then(idToken =>\r\n        axiosHttpClient.post(\r\n          \"permissions/\",\r\n          {\r\n            company: company,\r\n            user: user,\r\n            create: CRUD.create,\r\n            read: CRUD.read,\r\n            update: CRUD.update,\r\n            delete: CRUD.delete\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + idToken\r\n            }\r\n          }\r\n        )\r\n      );\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Checkbox, Header, Icon, Search } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { getUser, postPermissions } from \"../actions/permissionsActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PermissionsSearchUser extends Component {\r\n  handleResultSelect = (e, { result }) => this.setState({ user: result._id });\r\n\r\n  handleCheckbox = (e, { label, checked }) => {\r\n    this.setState({\r\n      [label]: checked\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const getUser = this.props.getUser;\r\n    const postPermissions = this.props.postPermissions;\r\n    const users = this.props.users.map(user => {\r\n      return { title: user.name, image: user.picture, _id: user._id };\r\n    });\r\n    const company = this.props.company;\r\n    return (\r\n      <div className=\"row stackable\">\r\n        <div className=\"eight wide column\">\r\n          <Header as=\"h4\">Find user by Id.</Header>\r\n          <Search\r\n            onSearchChange={(e, { value }) => getUser(value)}\r\n            results={users}\r\n            onResultSelect={this.handleResultSelect}\r\n          />\r\n        </div>\r\n        <div className=\"eight wide column\">\r\n          <Checkbox label=\"create\" onChange={this.handleCheckbox} />\r\n          <Checkbox label=\"read\" onChange={this.handleCheckbox} />\r\n          <Checkbox label=\"update\" onChange={this.handleCheckbox} />\r\n          <Checkbox label=\"delete\" onChange={this.handleCheckbox} />\r\n        </div>\r\n        <div className=\"sixteen wide column center aligned\">\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() =>\r\n              postPermissions(company, this.state.user, {\r\n                create: this.state[\"create\"] || false,\r\n                read: this.state[\"read\"] || false,\r\n                update: this.state[\"update\"] || false,\r\n                delete: this.state[\"delete\"] || false\r\n              })\r\n            }\r\n            icon\r\n            labelPosition=\"right\"\r\n            positive\r\n          >\r\n            <FormattedMessage id=\"interface.save\" /> <Icon name=\"save\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.permissionsReducer.users\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getUser: id => dispatch(getUser(id)),\r\n    postPermissions: (company, user, CRUD) =>\r\n      dispatch(postPermissions(company, user, CRUD))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PermissionsSearchUser);\r\n","import React from 'react';\r\nimport PermissionsSearchUser from \"../organisms/PermissionsSearchUser\";\r\n\r\nconst PermissionsTemplate = props => {\r\n  return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <PermissionsSearchUser company={props.company}/>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default PermissionsTemplate;","import React from \"react\";\r\nimport PermissionsTemplate from \"../templates/PermissionsTemplate\";\r\n\r\nconst Permissions = props => {\r\n  return <PermissionsTemplate company={props.match.params.companyId} />;\r\n};\r\n\r\nexport default Permissions;\r\n","import React, { Component } from \"react\";\r\nimport { getUserId, logout } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nclass User extends Component {\r\n  componentDidMount() {\r\n    this.props.getUserId();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"one column row user\">\r\n            <div className=\"column\">\r\n              <Image\r\n                src={this.props.userReducer.user.photoURL}\r\n                centered\r\n                size=\"tiny\"\r\n              />\r\n            </div>\r\n            <div className=\"column center aligned\">\r\n              <Header as=\"h2\">{this.props.userReducer.user.displayName}</Header>\r\n            </div>\r\n            <div className=\"column center aligned\">\r\n              Id: {this.props.userReducer.userId}\r\n            </div>\r\n            <div className=\"column right aligned\">\r\n              <Button\r\n                color=\"green\"\r\n                type=\"button\"\r\n                onClick={() => this.props.logout()}\r\n                icon\r\n                labelPosition=\"right\"\r\n              >\r\n                <FormattedMessage id=\"interface.signOut\" />\r\n                <Icon name=\"sign-out\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { userReducer: state.userReducer };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n    getUserId: () => dispatch(getUserId())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(User);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flag, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\n\r\nconst AboutUsProfile = props => {\r\n  return (\r\n    <>\r\n      <Image src={props.imageSrc} size=\"small\" circular centered />\r\n      <Header as={\"h5\"}>{props.position}</Header>\r\n      <Header>\r\n        {props.name}{\" \"}\r\n        {props.linkedin && (\r\n          <a href={props.linkedin}>\r\n            <Icon name=\"linkedin\" />\r\n          </a>\r\n        )}\r\n        {props.telegram && (\r\n          <a href={props.telegram}>\r\n            <Icon name=\"telegram\" />\r\n          </a>\r\n        )}\r\n      </Header>\r\n      <span>Location: </span>\r\n      <Flag name={props.flag} />\r\n      <span>{props.location}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nAboutUsProfile.propTypes = {\r\n  imageSrc: PropTypes.string,\r\n  position: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  linkedin: PropTypes.string,\r\n  telegram: PropTypes.string,\r\n  location: PropTypes.string.isRequired,\r\n  flag: PropTypes.string.isRequired\r\n};\r\n\r\nexport default AboutUsProfile;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flag, Grid, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport AboutUsProfile from \"../organisms/AboutUsProfile\";\r\n\r\nconst AboutUsTemplate = props => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <div className=\"ui grid\">\r\n        <div className=\"row\">\r\n          <div className=\"twelve wide centered column\">\r\n            <Header as={\"h1\"} textAlign={\"center\"}>\r\n              <FormattedMessage id=\"about_us.title\" />\r\n            </Header>\r\n            <FormattedMessage id=\"about_us.description\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Grid divided>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Header as={\"h3\"} textAlign={\"center\"}>\r\n              <FormattedMessage id=\"about_us.team\" />\r\n            </Header>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row centered>\r\n          <Grid.Column width={4}>\r\n            <AboutUsProfile\r\n              imageSrc={\r\n                \"https://instagram.fiev15-1.fna.fbcdn.net/vp/dd9779b63516ee8b592d577130aeedaf/5CFE67AA/t51.2885-15/e35/s320x320/12142209_1918743445016611_999285338_n.jpg?_nc_ht=instagram.fiev15-1.fna.fbcdn.net\"\r\n              }\r\n              position={\"Developer\"}\r\n              name={\"Artem Trachuk\"}\r\n              linkedin={\"https://www.linkedin.com/in/artem-trachuk/\"}\r\n              telegram={\"https://t.me/artem_trachuk\"}\r\n              flag={\"ua\"}\r\n              location={\"Odessa, Ukraine\"}\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <AboutUsProfile\r\n              imageSrc={\r\n                \"https://instagram.fiev15-1.fna.fbcdn.net/vp/ae1fface2753302001d27f276748c28f/5CDE193E/t51.2885-15/sh0.08/e35/s640x640/36753575_466378133826623_7677412311144857600_n.jpg?_nc_ht=instagram.fiev15-1.fna.fbcdn.net\"\r\n              }\r\n              position={\"Translator\"}\r\n              name={\"Михаил Пожарников\"}\r\n              linkedin={\"\"}\r\n              telegram={\"\"}\r\n              flag={\"ee\"}\r\n              location={\"Narva, Estonia\"}\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={4}>\r\n            <AboutUsProfile\r\n              imageSrc={\r\n                \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n              }\r\n              position={\"Tester\"}\r\n              name={\"Максим Саенко\"}\r\n              flag={\"ua\"}\r\n              location={\"Odessa, Ukraine\"}\r\n            />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nAboutUsTemplate.propTypes = {};\r\n\r\nexport default AboutUsTemplate;\r\n","import React from \"react\";\r\nimport AboutUsTemplate from \"../templates/AboutUsTemplate\";\r\n\r\nconst AboutUs = () => {\r\n  return <AboutUsTemplate />;\r\n};\r\n\r\nexport default AboutUs;\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Table } from \"semantic-ui-react\";\r\nimport _ from \"lodash\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport getDeviceIcon from \"../helpers/getDeviceIcon\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass IpTableTemplate extends Component {\r\n  state = {\r\n    column: null,\r\n    data: this.props.ip,\r\n    direction: null\r\n  };\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.ip !== state.data) {\r\n      return { data: props.ip };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleSort = clickedColumn => () => {\r\n    const { column, data, direction } = this.state;\r\n\r\n    if (column !== clickedColumn) {\r\n      this.setState({\r\n        column: clickedColumn,\r\n        data: _.sortBy(data, [clickedColumn]),\r\n        direction: \"ascending\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      data: data.reverse(),\r\n      direction: direction === \"ascending\" ? \"descending\" : \"ascending\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { column, data, direction } = this.state;\r\n    return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"row\">\r\n            <Table sortable celled fixed>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell\r\n                    sorted={column === \"ip\" ? direction : null}\r\n                    onClick={this.handleSort(\"ip\")}\r\n                  >\r\n                    <FormattedMessage id={\"interface.ip\"} />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell\r\n                    sorted={column === \"device\" ? direction : null}\r\n                    onClick={this.handleSort(\"device\")}\r\n                  >\r\n                    <FormattedMessage id={\"interface.device\"} />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell\r\n                    sorted={column === \"hub\" ? direction : null}\r\n                    onClick={this.handleSort(\"hub\")}\r\n                  >\r\n                    <FormattedMessage id={\"interface.hub\"} />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell\r\n                    sorted={column === \"company\" ? direction : null}\r\n                    onClick={this.handleSort(\"company\")}\r\n                  >\r\n                    <FormattedMessage id={\"interface.company\"} />\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {_.map(this.props.ip, ({ ip, hub, name, deviceType, _id }) => (\r\n                  <Table.Row key={name}>\r\n                    <Table.Cell>{ip}</Table.Cell>\r\n                    <Table.Cell>\r\n                      <Icon name={getDeviceIcon(deviceType)} />{\" \"}\r\n                      <Link to={\"/r/devices/view/\" + _id}>{name}</Link>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Link to={\"/r/hubs/view/\" + hub._id}>{hub.name}</Link>\r\n                    </Table.Cell>\r\n                    <Table.Cell>\r\n                      <Link to={\"/r/companies/view/\" + hub.company._id}>\r\n                        {hub.company.name}\r\n                      </Link>\r\n                    </Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IpTableTemplate;\r\n","import React, { Component } from \"react\";\r\nimport { companyResource, ipResource } from \"../helpers/resourceNames\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\nimport { getDataByAPI } from \"../actions/dataActions\";\r\nimport { connect } from \"react-redux\";\r\nimport ErrorTemplate from \"./Networks\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\nimport NoDataTemplate from \"../templates/NoDataTemplate\";\r\nimport IpTableTemplate from \"../organisms/IpTableTemplate\";\r\n\r\nclass IpTable extends Component {\r\n  componentDidMount() {\r\n    this.props.setNavigatedLink(\"iptable\");\r\n    this.props.getDataByAPI(ipResource);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.setNavigatedLink(\"\");\r\n  }\r\n  render() {\r\n    const isFetching = this.props.isFetching;\r\n    const ip = this.props.ip;\r\n    const error = this.props.error;\r\n    const length = ip.length;\r\n    return (\r\n      <>\r\n        {error && <ErrorTemplate />}\r\n        {isFetching && length === 0 && <LoadingTemplate />}\r\n        {!isFetching && length === 0 && <NoDataTemplate />}\r\n        {length > 0 && <IpTableTemplate ip={ip} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const ip = state.dataReducer[ipResource] || [];\r\n  const error = state.issuesReducer.issuesError[ipResource] || null;\r\n  const isFetching = state.dataReducer.isFetching || false;\r\n  return {\r\n    ip,\r\n    error,\r\n    isFetching\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    },\r\n    getDataByAPI: (resource, id) => {\r\n      dispatch(getDataByAPI(resource, id));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(IpTable);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ContactOrganism = props => {\r\n  const contact = props.contact;\r\n  return (\r\n    <div className=\"eight wide column\">\r\n      <Header as=\"h2\">\r\n        <Icon name=\"user\" />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"interface.humanName\" />\r\n          </Header.Subheader>\r\n          {contact.name}\r\n        </Header.Content>\r\n      </Header>\r\n      <Header as=\"h2\">\r\n        <Icon name=\"phone\" />\r\n        <Header.Content>\r\n          <Header.Subheader>\r\n            <FormattedMessage id=\"interface.phone\" />\r\n          </Header.Subheader>\r\n          {<a href={\"tel:\" + contact.phone}>{contact.phone}</a>}\r\n        </Header.Content>\r\n      </Header>\r\n      {contact.company && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"industry\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.company\" />\r\n            </Header.Subheader>\r\n            <Link to={\"/r/companies/view/\" + contact.company._id}>\r\n              {contact.company.name}\r\n            </Link>\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n      {contact.note && (\r\n        <Header as=\"h2\">\r\n          <Icon name=\"sticky note\" />\r\n          <Header.Content>\r\n            <Header.Subheader>\r\n              <FormattedMessage id=\"interface.note\" />\r\n            </Header.Subheader>\r\n            {contact.note}\r\n          </Header.Content>\r\n        </Header>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactOrganism.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ContactOrganism;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QRCode from \"qrcode.react\";\r\n\r\nconst QrOrganism = props => {\r\n  const contact = props.contact;\r\n  const contactNote = contact.note ? \"NOTE:\" + contact.note + \"\\n\" : \"\";\r\n  const QRCodeValue =\r\n      \"BEGIN:VCARD\\n\" +\r\n      \"VERSION:3.0\\n\" +\r\n      \"ORG:\" +\r\n      contact.company.name +\r\n      \"\\n\" +\r\n      \"FN:\" +\r\n      contact.name +\r\n      \"\\n\" +\r\n      \"TEL;TYPE=WORK,VOICE:\" +\r\n      contact.phone +\r\n      \"\\n\" +\r\n      contactNote +\r\n      \"END:VCARD\";\r\n  return (\r\n      <div className=\"eight wide column center aligned\">\r\n        <QRCode value={QRCodeValue} size={256} />\r\n      </div>\r\n  );\r\n};\r\n\r\nQrOrganism.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default QrOrganism;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactOrganism from \"../organisms/ContactOrganism\";\r\nimport QrOrganism from \"../organisms/QrOrganism\";\r\n\r\nconst ContactTemplate = props => {\r\n  return (\r\n      <div className=\"ui container\">\r\n        <div className=\"ui grid\">\r\n          <div className=\"sixteen wide row stackable\">\r\n            <ContactOrganism contact={props.contact}/>\r\n            <QrOrganism contact={props.contact}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n};\r\n\r\nContactTemplate.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ContactTemplate;","import React, { Component } from \"react\";\r\nimport { fetchContact } from \"../actions/contactsActions\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactTemplate from \"../templates/ContactTemplate\";\r\nimport LoadingTemplate from \"../templates/LoadingTemplate\";\r\n\r\nclass ContactPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContact(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const contact =\r\n      this.props.contacts.find(c => c._id === this.props.match.params.id) ||\r\n      undefined;\r\n    return (\r\n      <>\r\n        {!contact && <LoadingTemplate />}\r\n        {contact && <ContactTemplate contact={contact} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contactsReducer.contacts || []\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchContact: id => dispatch(fetchContact(id))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContactPage);\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Networks from \"./Networks\";\r\nimport Contacts from \"./Contacts\";\r\nimport CompanyAdder from \"./CompanyAdder\";\r\nimport CompanyEditor from \"./CompanyEditor\";\r\nimport CompanyViewer from \"./CompanyViewer\";\r\nimport HubAdder from \"./HubAdder\";\r\nimport HubEditor from \"./HubEditor\";\r\nimport HubViewer from \"./HubViewer\";\r\nimport DeviceAdder from \"./DeviceAdder\";\r\nimport DeviceEditor from \"./DeviceEditor\";\r\nimport DeviceViewer from \"./DeviceViewer\";\r\nimport Permissions from \"./Permissions\";\r\nimport User from \"./User\";\r\nimport AboutUs from \"./AboutUs\";\r\nimport IpTable from \"./IpTable\";\r\nimport ContactPage from \"./ContactPage\";\r\n\r\nclass Routes extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/r/home\" component={Home} />\r\n        <Route path=\"/r/networks\" component={Networks} />\r\n        <Route exact path=\"/r/contacts\" component={Contacts} />\r\n        <Route exact path=\"/r/companies/add\" component={CompanyAdder} />\r\n        <Route exact path=\"/r/companies/edit/:id\" component={CompanyEditor} />\r\n        <Route exact path=\"/r/companies/view/:id\" component={CompanyViewer} />\r\n        <Route\r\n          exact\r\n          path=\"/r/hubs/add/:companyId/:companyName\"\r\n          component={HubAdder}\r\n        />\r\n        <Route exact path=\"/r/hubs/edit/:id\" component={HubEditor} />\r\n        <Route exact path=\"/r/hubs/view/:id\" component={HubViewer} />\r\n        <Route\r\n          exact\r\n          path=\"/r/devices/add/:deviceType/:hubId/:hubName\"\r\n          component={DeviceAdder}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/r/devices/add/:deviceType/:hubId/:hubName/:lat/:lng\"\r\n          component={DeviceAdder}\r\n        />\r\n        <Route exact path=\"/r/devices/edit/:id\" component={DeviceEditor} />\r\n        <Route exact path=\"/r/devices/view/:id\" component={DeviceViewer} />\r\n        <Route path=\"/r/permissions/:companyId\" component={Permissions} />\r\n        <Route exact path=\"/r/user\" component={User} />\r\n        <Route path={\"/r/about_us\"} component={AboutUs} />\r\n        <Route exact path={\"/r/iptable\"} component={IpTable} />\r\n        <Route exact path={\"/r/contacts/:id\"} component={ContactPage} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport { Icon, Image, Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { connect } from \"react-redux\";\r\nimport { setNavigatedLink } from \"../actions/navigationActions\";\r\n\r\nclass TopNavigation extends Component {\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ui container\"\r\n        style={{ marginBottom: \"5vh\", marginTop: \"3vh\" }}\r\n      >\r\n        <Menu secondary stackable>\r\n          <Menu.Item>\r\n            <Icon name=\"record\" className=\"green\" /> <b>Monitor PS</b>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/\"\r\n            name=\"home\"\r\n            active={this.props.navigationReducer.currentLink === \"home\"}\r\n          >\r\n            <Icon name=\"home\" /> <FormattedMessage id=\"interface.home\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/r/networks\"\r\n            name=\"networks\"\r\n            active={this.props.navigationReducer.currentLink === \"networks\"}\r\n          >\r\n            <Icon name=\"server\" /> <FormattedMessage id=\"interface.networks\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/r/iptable\"\r\n            name=\"iptable\"\r\n            active={this.props.navigationReducer.currentLink === \"iptable\"}\r\n          >\r\n            <Icon name=\"terminal\" /> <FormattedMessage id=\"interface.iptable\" />\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/r/contacts\"\r\n            name=\"contacts\"\r\n            active={this.props.navigationReducer.currentLink === \"contacts\"}\r\n          >\r\n            <Icon name=\"address book\" /> <FormattedMessage id=\"interface.contacts\" />\r\n          </Menu.Item>\r\n          {/*<Menu.Item*/}\r\n            {/*disabled*/}\r\n            {/*as={Link}*/}\r\n            {/*to=\"/r/documents\"*/}\r\n            {/*name=\"documents\"*/}\r\n            {/*active={this.props.navigationReducer.currentLink === \"documents\"}*/}\r\n          {/*>*/}\r\n            {/*<Icon name=\"file pdf\" />{\" \"}*/}\r\n            {/*<FormattedMessage id=\"companyEditor.documents\" />*/}\r\n          {/*</Menu.Item>*/}\r\n          <Menu.Menu position=\"right\">\r\n            {this.props.displayName && (\r\n              <>\r\n                <Menu.Item as={Link} to=\"/r/user\">\r\n                  <Image src={this.props.photo} avatar />\r\n                  {this.props.displayName}\r\n                </Menu.Item>\r\n                {/*<Menu.Item onClick={this.props.signOut}>*/}\r\n                {/*<Icon name=\"sign-out\" /> <FormattedMessage id=\"interface.signOut\" />*/}\r\n                {/*</Menu.Item>*/}\r\n              </>\r\n            )}\r\n          </Menu.Menu>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    navigationReducer: state.navigationReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setNavigatedLink: link => {\r\n      dispatch(setNavigatedLink(link));\r\n    }\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(TopNavigation)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport Now from \"../now.png\";\r\nimport {Divider, Dropdown, Flag, Icon, List} from \"semantic-ui-react\";\r\nimport { changeLanguage } from \"../actions/userActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BottomNavigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onLanguageChange = this.onLanguageChange.bind(this);\r\n    this.state = {\r\n      language: props.user.language\r\n    };\r\n  }\r\n  onLanguageChange = language => {\r\n    this.props.changeLanguage(language);\r\n  };\r\n  render() {\r\n    const { intl } = this.props;\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: \"10vh\" }}>\r\n        <div className=\"ui grid\">\r\n          <div className=\"three column middle aligned stackable row\">\r\n            <div className=\"three wide column\">\r\n              <Dropdown\r\n                floating\r\n                text={intl.formatMessage({ id: \"interface.language\" })}\r\n              >\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Header>America</Dropdown.Header>\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"en-US\")}>\r\n                    <Flag name=\"us\" />\r\n                    English (US)\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Header>Europe</Dropdown.Header>\r\n                  {/*<Dropdown.Item onClick={() => this.onLanguageChange(\"ee\")}>*/}\r\n                    {/*<Flag name=\"ee\" />*/}\r\n                    {/*Eesti*/}\r\n                  {/*</Dropdown.Item>*/}\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"en-GB\")}>\r\n                    <Flag name=\"gb\" />\r\n                    English (UK)\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"uk\")}>\r\n                    <Flag name=\"ua\" />\r\n                    Українська\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Header>Asia</Dropdown.Header>\r\n                  <Dropdown.Item onClick={() => this.onLanguageChange(\"ru\")}>\r\n                    <Flag name=\"ru\" />\r\n                    Русский\r\n                  </Dropdown.Item>\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </div>\r\n            <div className=\"ten wide column center aligned\">\r\n              <List bulleted horizontal link>\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"bullhorn\" /> Newsroom*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as=\"a\">*/}\r\n                  {/*<Icon name=\"bug\" /> <FormattedMessage id=\"interface.reportbug\" />*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"github\" /> GitHub*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as={Link} to={\"/r/about_us\"}>*/}\r\n                  {/*<Icon name=\"users\" /> <FormattedMessage id=\"about_us.title\" />*/}\r\n                {/*</List.Item>*/}\r\n                {/*<List.Item as=\"a\">*/}\r\n                {/*<Icon name=\"heart outline\" /> Donate*/}\r\n                {/*</List.Item>*/}\r\n              </List>\r\n            </div>\r\n            <div className=\"three wide column right aligned column\">\r\n              <img src={Now} alt=\"Ukraine Now\" className=\"ukraine_now_logo\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { user: state.userReducer };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeLanguage: language => {\r\n      dispatch(changeLanguage(language));\r\n    }\r\n  };\r\n};\r\n\r\nexport default injectIntl(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BottomNavigation)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport {Header, Icon} from \"semantic-ui-react\";\r\n\r\nclass Guest extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"ui container\">\r\n          <div className=\"ui grid\">\r\n            <div className=\"sixteen wide column center aligned\">\r\n              <Header as=\"h1\">\r\n                <Icon name=\"record\" className=\"green\" /> Monitor PS\r\n              </Header>\r\n              <Header as=\"h4\">\r\n                Tool for installed surveillance devices monitoring. We will\r\n                help you to keep the networks be structured and categorized.\r\n              </Header>\r\n            </div>\r\n            <div className=\"sixteen wide column\">\r\n              {this.props.auth}\r\n            </div>\r\n          </div>\r\n          <div className=\"sixteen wide column\">\r\n            <span>share access with co-workers</span>\r\n            <span>\r\n                don't rely on multiple text documents, chat history or even your\r\n                memory\r\n              </span>\r\n            <span>track issues</span>\r\n            <span>all your networks in one place</span>\r\n            <span>save locations, photos, documents</span>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Guest;\r\n","import React from \"react\";\r\nimport AboutUs from \"../pages/AboutUs\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Guest from \"../pages/Guest\";\r\n\r\nconst UnprotectedRoutes = () => {\r\n  return (\r\n    <>\r\n      <Route exact path={\"/\"} component={Guest} />\r\n      <Route path={\"/r/about_us\"} component={AboutUs} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UnprotectedRoutes;\r\n","import React from \"react\";\r\nimport { Icon, Label, Menu } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GuestTopBar = props => {\r\n  return (\r\n    <div\r\n      className=\"ui container\"\r\n      style={{ marginBottom: \"5vh\", marginTop: \"3vh\" }}\r\n    >\r\n      <Menu secondary stackable>\r\n        <Menu.Item as={Link} to=\"/\">\r\n          <Icon name=\"record\" className=\"green\" /> <b>Monitor PS</b>\r\n          <Label color=\"blue\" floating>\r\n            beta\r\n          </Label>\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item>{props.auth}</Menu.Item>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n\r\nGuestTopBar.propTypes = {};\r\n\r\nexport default GuestTopBar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// react-router\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// redux\nimport { connect } from \"react-redux\";\n// components\nimport Routes from \"./pages/Routes\";\nimport {\n  getDefaultCenterFromUserAgent,\n  login,\n  logout,\n  updateUser\n} from \"./actions/userActions\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport TopNavigation from \"./organisms/TopNavigation\";\n// react-intl\nimport { IntlProvider } from \"react-intl\";\nimport { addLocaleData } from \"react-intl\";\nimport en from \"react-intl/locale-data/en\";\nimport uk from \"react-intl/locale-data/uk\";\nimport ru from \"react-intl/locale-data/ru\";\nimport messages_uk from \"./locales/uk\";\nimport messages_en from \"./locales/en\";\nimport messages_ru from \"./locales/ru\";\n// Import FirebaseAuth and firebase.\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport ErrorTemplate from \"./templates/ErrorTemplate\";\nimport BottomNavigation from \"./organisms/BottomNavigation\";\nimport UnprotectedRoutes from \"./helpers/UnprotectedRoutes\";\nimport GuestTopBar from \"./organisms/GuestTopBar\";\n\n// Configure Firebase.\nconst config = {\n  apiKey: \"AIzaSyAFo_lb3m4A7-PmXuahyeVD3xhGdCZGJi8\",\n  authDomain: \"monitor-ps.firebaseapp.com\",\n  databaseURL: \"https://monitor-ps.firebaseio.com\",\n  projectId: \"monitor-ps\",\n  storageBucket: \"monitor-ps.appspot.com\",\n  messagingSenderId: \"497412012279\"\n};\n\nfirebase.initializeApp(config);\n\naddLocaleData([...en, ...uk, ...ru]);\n\nconst messages = {\n  uk: messages_uk,\n  \"en-US\": messages_en,\n  \"en-GB\": messages_en,\n  ru: messages_ru\n};\n\n// TODO bookmarks, tags\n\nclass App extends Component {\n  // The component's Local state.\n  state = {\n    isSignedIn: false, // Local signed-in state.,\n    hasError: false\n  };\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, error: error };\n  }\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => false\n    }\n  };\n\n  // Listen to the Firebase Auth state and set the local state.\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n      this.props.updateUser(user);\n      if (user) {\n        this.props.login();\n        this.props.getDefaultCenterFromUserAgent();\n      }\n    });\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  render() {\n    const user = this.props.userR.user;\n    let view = <></>;\n    if (this.state.hasError || this.props.userR.error) {\n      view = <ErrorTemplate error={this.state.hasError || this.props.userR.error} />;\n    } else if (user === undefined) {\n      view = (\n        <div className=\"ui container\">\n          <Dimmer active inverted>\n            <Loader size=\"large\">Loading</Loader>\n          </Dimmer>\n        </div>\n      );\n    } else if (user === null) {\n      view = (\n        <>\n          <GuestTopBar auth={\n            <StyledFirebaseAuth\n                uiConfig={this.uiConfig}\n                firebaseAuth={firebase.auth()}\n            />\n          }/>\n          {/*<Guest*/}\n            {/*auth={*/}\n              {/*<StyledFirebaseAuth*/}\n                {/*uiConfig={this.uiConfig}*/}\n                {/*firebaseAuth={firebase.auth()}*/}\n              {/*/>*/}\n            {/*}*/}\n          {/*/>*/}\n          <UnprotectedRoutes />\n          <BottomNavigation />\n        </>\n      );\n    } else if (user && this.props.userR.isLoggedIn) {\n      view = (\n        <>\n          <TopNavigation\n            displayName={this.props.userR.user.displayName}\n            photo={this.props.userR.user.photoURL}\n            signOut={this.props.logout}\n          />\n          <Routes />\n          <BottomNavigation />\n        </>\n      );\n    }\n    return (\n      <IntlProvider\n        textComponent={React.Fragment}\n        locale={this.props.userR.language}\n        messages={messages[this.props.userR.language]}\n      >\n        <Router>\n          <>{view}</>\n        </Router>\n      </IntlProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userR: state.userReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateUser: name => {\n      dispatch(updateUser(name));\n    },\n    login: () => {\n      dispatch(login());\n    },\n    logout: () => {\n      dispatch(logout());\n    },\n    getDefaultCenterFromUserAgent: () => {\n      dispatch(getDefaultCenterFromUserAgent());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport dataReducer from \"./reducers/dataReducer\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport { issuesReducer } from \"./reducers/issuesReducer\";\r\nimport { navigationReducer } from \"./reducers/navigationReducer\";\r\nimport contactsReducer from \"./reducers/contactsReducer\";\r\nimport { permissionsReducer } from \"./reducers/permissionsReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    userReducer: userReducer,\r\n    dataReducer: dataReducer,\r\n    form: formReducer,\r\n    issuesReducer: issuesReducer,\r\n    navigationReducer: navigationReducer,\r\n    contactsReducer: contactsReducer,\r\n    permissionsReducer: permissionsReducer\r\n  }),\r\n  {},\r\n  applyMiddleware(thunkMiddleware, logger)\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  SET_DEFAULT_CENTER,\r\n  SET_ERROR,\r\n  SET_IS_LOGGED,\r\n  SET_USER_ID,\r\n  UPDATE_USER\r\n} from \"../actions/userActions\";\r\n\r\nexport default function userReducer(\r\n  state = {\r\n    language: localStorage.getItem(\"Language\") || \"en-US\",\r\n    user: undefined,\r\n    error: null,\r\n    isLoggedIn: false,\r\n    defaultCenter: null,\r\n    userId: ''\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case UPDATE_USER:\r\n      state = {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n      break;\r\n    case SET_ERROR:\r\n      state = {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n      break;\r\n    case SET_IS_LOGGED:\r\n      state = {\r\n        ...state,\r\n        isLoggedIn: true\r\n      };\r\n      break;\r\n    case \"CHANGE_LANGUAGE\":\r\n      if (typeof Storage !== \"undefined\") {\r\n        localStorage.setItem(\"Language\", action.payload);\r\n      }\r\n      state = {\r\n        ...state,\r\n        language: action.payload\r\n      };\r\n      break;\r\n    case SET_DEFAULT_CENTER:\r\n      state = {\r\n        ...state,\r\n        defaultCenter: action.payload\r\n      };\r\n      break;\r\n    case SET_USER_ID:\r\n      state = {\r\n        ...state,\r\n        userId: action.payload\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","import {\r\n  DELETE_ITEM,\r\n  RECEIVE_ITEM,\r\n  RECEIVE_ITEMS,\r\n  REQUEST_API\r\n} from \"../actions/dataActions\";\r\n\r\nexport default function dataReducer(state = { isFetching: false }, action) {\r\n  let items = [];\r\n  switch (action.type) {\r\n    case RECEIVE_ITEMS:\r\n      if (state[action.resource]) {\r\n        items = [...state[action.resource]];\r\n        if (action.payload.length === 0) {\r\n          items = [];\r\n        } else {\r\n          action.payload.forEach(item => {\r\n            const index = items.findIndex(i => i._id === item._id);\r\n            if (index === -1) {\r\n              items.push(item);\r\n            } else {\r\n              items[index] = { ...items[index], ...item };\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        items = action.payload;\r\n      }\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        [action.resource]: items\r\n      };\r\n    case RECEIVE_ITEM:\r\n      if (state[action.resource]) {\r\n        items = [...state[action.resource]];\r\n        const index = items.findIndex(i => i._id === action.payload._id);\r\n        index === -1\r\n          ? items.push(action.payload)\r\n          : (items[index] = action.payload);\r\n      } else {\r\n        items.push(action.payload);\r\n      }\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        [action.resource]: items\r\n      };\r\n    case REQUEST_API:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        [action.resource]: state[action.resource].filter(\r\n          i => i._id !== action.id\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SET_ISSUES_ERROR,\r\n  RECEIVE_ISSUES,\r\n  REQUEST_ISSUES\r\n} from \"../actions/issuesActions\";\r\n\r\nexport function issuesReducer(\r\n  state = { isIssuesFetching: {}, issuesError: {} },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REQUEST_ISSUES:\r\n      return {\r\n        ...state,\r\n        isIssuesFetching: { [action.payload]: true }\r\n      };\r\n    case SET_ISSUES_ERROR:\r\n      return {\r\n        ...state,\r\n        isIssuesFetching: { [action.payload.resource]: false },\r\n        issuesError: { [action.payload.resource]: action.payload.error }\r\n      };\r\n    case RECEIVE_ISSUES:\r\n      return {\r\n        ...state,\r\n        isIssuesFetching: { [action.payload.resource]: false },\r\n        [action.payload.resource]: action.payload.data,\r\n        issuesError: { [action.payload.resource]: undefined }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_NAVIGATED_LINK } from \"../actions/navigationActions\";\r\n\r\nexport function navigationReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case SET_NAVIGATED_LINK:\r\n      state = {\r\n        ...state,\r\n        currentLink: action.payload\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\n","import {\r\n  RECEIVE_CONTACT,\r\n  RECEIVE_CONTACTS,\r\n  REQUEST_CONTACTS,\r\n  SET_CONTACTS_ERROR\r\n} from \"../actions/contactsActions\";\r\n\r\nexport default function contacts(\r\n  state = { isFetching: false, contacts: [], error: null },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case REQUEST_CONTACTS:\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      };\r\n    case RECEIVE_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        isFetching: false,\r\n        error: null\r\n      };\r\n    case SET_CONTACTS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false\r\n      };\r\n    case RECEIVE_CONTACT:\r\n      const contactsCopy = [...state.contacts];\r\n      const contactIndex = contactsCopy.findIndex(c => c._id === action.payload._id);\r\n      if (contactIndex !== -1) {\r\n        contactsCopy[contactIndex] = action.payload;\r\n      } else {\r\n        contactsCopy.push(action.payload);\r\n      }\r\n      return {\r\n        ...state,\r\n        contacts: contactsCopy\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { RECEIVE_USERS, REQUEST_USERS } from \"../actions/permissionsActions\";\r\n\r\nexport function permissionsReducer(state = { users: [] }, action) {\r\n  switch (action.type) {\r\n    case REQUEST_USERS:\r\n      return {\r\n        ...state\r\n      };\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        users: [action.payload]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// redux\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxStore\";\n// styles\nimport \"./index.css\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}